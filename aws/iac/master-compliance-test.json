{
    "testSet": [
        {
            "masterTestName": "AWS_iac_TEST",
            "version": "0.1",
            "cases": [
                {
                    "masterTestId": "TEST_ACM_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(acm.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0001-CFR",
                            "eval": "data.rule.acm_wildcard",
                            "message": "data.rule.acm_wildcard_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html",
                            "remediationFunction": "PR_AWS_0001_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ACM Certificate with wildcard domain name",
                    "description": "This policy identifies ACM Certificates which are using wildcard certificates for wildcard domain name instead of single domain name certificates. ACM allows you to use an asterisk (*) in the domain name to create an ACM Certificate containing a wildcard name that can protect several sites in the same domain. For example, a wildcard certificate issued for *.<compliance-software>.io can match both www.<compliance-software>.io and images.<compliance-software>.io. When you use wildcard certificates, if the private key of a certificate is compromised, then all domain and subdomains that use the compromised certificate are potentially impacted. So it is recommended to use single domain name certificates instead of wildcard certificates to reduce the associated risks with a compromised domain or subdomain.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ACM_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(acm.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0009-CFR",
                            "eval": "data.rule.acm_ct_log",
                            "message": "data.rule.acm_ct_log_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html",
                            "remediationFunction": "PR_AWS_0009_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Certificate Manager (ACM) has certificates with Certificate Transparency Logging disabled",
                    "description": "This policy identifies AWS Certificate Manager certificates in which Certificate Transparency Logging is disabled. AWS Certificate Manager (ACM) is the preferred tool to provision, manage, and deploy your server certificates. Certificate Transparency Logging is used to guard against SSL/TLS certificates that are issued by mistake or by a compromised CA, some browsers require that public certificates issued for your domain can also be recorded. This policy generates alerts for certificates which have transparency logging disabled. As a best practice, it is recommended to enable Transparency logging for all certificates.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ALL_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(all.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0002-CFR",
                            "eval": "data.rule.api_gw_cert",
                            "message": "data.rule.api_gw_cert_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html",
                            "remediationFunction": "PR_AWS_0002_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS API Gateway endpoints without client certificate authentication",
                    "description": "API Gateway can generate an SSL certificate and use its public key in the backend to verify that HTTP requests to your backend system are from API Gateway. This allows your HTTP backend to control and accept only requests originating from Amazon API Gateway, even if the backend is publicly accessible._x000D__x000D_Note: Some backend servers may not support SSL client authentication as API Gateway does and could return an SSL certificate error. For a list of incompatible backend servers, see Known Issues. https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-known-issues.html",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ALL_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(all.rego)",
                    "evals": [
                        {
                            "id": "gID6",
                            "eval": "data.rule.db_exposed",
                            "message": "data.rule.db_exposed_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html",
                            "remediationFunction": "PR_AWS_gID6_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Publicly exposed DB Ports",
                    "description": "DB Servers contain sensitive data and should not be exposed to any direct traffic from internet. This policy checks for the network traffic from internet hitting the DB Servers on their default ports. The DB servers monitored on the default ports are : Microsoft SQL Server (1433), Oracle (1521), MySQL (3306), Sybase (5000), Postgresql (5432), CouchDB (5984), Redis (6379, 6380), RethinkDB (8080,28015, 29015), CassandraDB (9042), Memcached (11211), MongoDB (27017), DB2 (50000).",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ALL_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(all.rego)",
                    "evals": [
                        {
                            "id": "gID1",
                            "eval": "data.rule.bitcoin_ports",
                            "message": "data.rule.bitcoin_ports_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html",
                            "remediationFunction": "PR_AWS_gID1_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Instance is communicating with ports known to mine Bitcoin",
                    "description": "Identifies traffic from internal workloads to internet IPs on ports 8332,8333 that are known to mine Bitcoins. Unless this traffic is part of authorized applications and processes, your instances may have been compromised.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "HIPAA",
                                "NIST 800"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ALL_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(all.rego)",
                    "evals": [
                        {
                            "id": "gID2",
                            "eval": "data.rule.ethereum_ports",
                            "message": "data.rule.ethereum_ports_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html",
                            "remediationFunction": "PR_AWS_gID2_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Instance is communicating with ports known to mine Ethereum",
                    "description": "Identifies traffic from internal workloads to internet IPs on ports 8545,30303 that are known to mine Ethereum. Unless this traffic is part of authorized applications and processes, your instances may have been compromised.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "HIPAA",
                                "NIST 800"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CLOUD_FORMATION",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(cloudformation.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0014-CFR",
                            "eval": "data.rule.cf_sns",
                            "message": "data.rule.cf_sns_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html",
                            "remediationFunction": "PR_AWS_0014_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudFormation stack configured without SNS topic",
                    "description": "This policy identifies CloudFormation stacks which are configured without SNS topic. It is recommended to configure Simple Notification Service (SNS) topic to be notified of CloudFormation stack status and changes.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CLOUD_FRONT_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(cloudfront.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0015-CFR",
                            "eval": "data.rule.cf_default_cache",
                            "message": "data.rule.cf_default_cache_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html",
                            "remediationFunction": "PR_AWS_0015_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudFront Distributions with Field-Level Encryption not enabled",
                    "description": "This policy identifies CloudFront distributions for which field-level encryption is not enabled. Field-level encryption adds an additional layer of security along with HTTPS which protects specific data throughout system processing so that only certain applications can see it.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CLOUD_FRONT_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(cloudfront.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0016-CFR",
                            "eval": "data.rule.cf_ssl_protocol",
                            "message": "data.rule.cf_ssl_protocol_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html",
                            "remediationFunction": "PR_AWS_0016_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudFront distribution is using insecure SSL protocols for HTTPS communication",
                    "description": "CloudFront, a content delivery network (CDN) offered by AWS, is not using a secure cipher for distribution. It is a best security practice to enforce the use of secure ciphers TLSv1.0, TLSv1.1, and/or TLSv1.2 in a CloudFront Distribution's certificate configuration. This policy scans for any deviations from this practice and returns the results.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CLOUD_FRONT_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(cloudfront.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0017-CFR",
                            "eval": "data.rule.cf_logging",
                            "message": "data.rule.cf_logging_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html",
                            "remediationFunction": "PR_AWS_0017_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudFront distribution with access logging disabled",
                    "description": "This policy identifies CloudFront distributions which have access logging disabled. Enabling access log on distributions creates log files that contain detailed information about every user request that CloudFront receives. Access logs are available for web distributions. If you enable logging, you can also specify the Amazon S3 bucket that you want CloudFront to save files in.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CLOUD_FRONT_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(cloudfront.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0018-CFR",
                            "eval": "data.rule.cf_https_only",
                            "message": "data.rule.cf_https_only_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html",
                            "remediationFunction": "PR_AWS_0018_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudFront origin protocol policy does not enforce HTTPS-only",
                    "description": "It is a best security practice to enforce HTTPS-only traffic between a CloudFront distribution and the origin. This policy scans for any deviations from this practice and returns the results.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CLOUD_FRONT_5",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(cloudfront.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0019-CFR",
                            "eval": "data.rule.cf_https",
                            "message": "data.rule.cf_https_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html",
                            "remediationFunction": "PR_AWS_0019_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudFront viewer protocol policy is not configured with HTTPS",
                    "description": "For web distributions, you can configure CloudFront to require that viewers use HTTPS to request your objects, so connections are encrypted when CloudFront communicates with viewers.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CLOUD_FRONT_6",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(cloudfront.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0020-CFR",
                            "eval": "data.rule.cf_min_protocol",
                            "message": "data.rule.cf_min_protocol_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html",
                            "remediationFunction": "PR_AWS_0020_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudFront web distribution that allow TLS versions 1.0 or lower",
                    "description": "This policy identifies AWS CloudFront web distributions which are configured with TLS versions for HTTPS communication between viewers and CloudFront. As a best practice, use TLSv1.1_2016 or later as the minimum protocol version in your CloudFront distribution security policies.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CLOUD_FRONT_7",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(cloudfront.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0021-CFR",
                            "eval": "data.rule.cf_firewall",
                            "message": "data.rule.cf_firewall_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html",
                            "remediationFunction": "PR_AWS_0021_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudFront web distribution with AWS Web Application Firewall (AWS WAF) service disabled",
                    "description": "This policy identifies Amazon CloudFront web distributions which have the AWS Web Application Firewall (AWS WAF) service disabled. As a best practice, enable the AWS WAF service on CloudFront web distributions to protect against application layer attacks. To block malicious requests to your Cloudfront Content Delivery Network, define the block criteria in the WAF web access control list (web ACL).",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CLOUD_FRONT_8",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(cloudfront.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0022-CFR",
                            "eval": "data.rule.cf_default_ssl",
                            "message": "data.rule.cf_default_ssl_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html",
                            "remediationFunction": "PR_AWS_0022_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudFront web distribution with default SSL certificate",
                    "description": "This policy identifies CloudFront web distributions which have a default SSL certificate to access CloudFront content. It is a best practice to use custom SSL Certificate to access CloudFront content. It gives you full control over the content data. custom SSL certificates also allow your users to access your content by using an alternate domain name. You can use a certificate stored in AWS Certificate Manager (ACM) or you can use a certificate stored in IAM.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CLOUD_FRONT_9",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(cloudfront.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0023-CFR",
                            "eval": "data.rule.cf_geo_restriction",
                            "message": "data.rule.cf_geo_restriction_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html",
                            "remediationFunction": "PR_AWS_0023_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudFront web distribution with geo restriction disabled",
                    "description": "This policy identifies CloudFront web distributions which have geo restriction feature disabled. Geo Restriction has the ability to block IP addresses based on Geo IP by whitelist or blacklist a country in order to allow or restrict users in specific locations from accessing web application content.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CLOUD_TRAIL_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(cloudtrail.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0026-CFR",
                            "eval": "data.rule.ct_regions",
                            "message": "data.rule.ct_regions_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html",
                            "remediationFunction": "PR_AWS_0026_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudTrail is not enabled in all regions",
                    "description": "Checks to ensure that CloudTrail is enabled across all regions. AWS CloudTrail is a service that enables governance, compliance, operational & risk auditing of the AWS account. It is a compliance and security best practice to turn on CloudTrail across different regions to get a complete audit trail of activities across various services.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "GDPR",
                                "HIPAA",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS",
                                "SOC 2"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CLOUD_TRAIL_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(cloudtrail.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0027-CFR",
                            "eval": "data.rule.ct_log_validation",
                            "message": "data.rule.ct_log_validation_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html",
                            "remediationFunction": "PR_AWS_0027_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudTrail log validation is not enabled in all regions",
                    "description": "This policy identifies AWS CloudTrails in which log validation is not enabled in all regions. CloudTrail log file validation creates a digitally signed digest file containing a hash of each log that CloudTrail writes to S3. These digest files can be used to determine whether a log file was modified after CloudTrail delivered the log. It is recommended that file validation be enabled on all CloudTrails.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF",
                                "SOC 2"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CLOUD_TRAIL_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(cloudtrail.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0028-CFR",
                            "eval": "data.rule.ct_master_key",
                            "message": "data.rule.ct_master_key_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html",
                            "remediationFunction": "PR_AWS_0028_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudTrail logs are not encrypted using Customer Master Keys (CMKs)",
                    "description": "Checks to ensure that CloudTrail logs are encrypted. AWS CloudTrail is a service that enables governance, compliance, operational & risk auditing of the AWS account. It is a compliance and security best practice to encrypt the CloudTrail data since it may contain sensitive information.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CLOUD_TRAIL_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(cloudtrail.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0192-CFR",
                            "eval": "data.rule.ct_cloudwatch",
                            "message": "data.rule.ct_cloudwatch_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html",
                            "remediationFunction": "PR_AWS_0192_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "CloudTrail trail is not integrated with CloudWatch Log",
                    "description": "Enabling the CloudTrail trail logs integrated with CloudWatch Logs will enable the real-time as well as historic activity logging. This will further effective monitoring and alarm capability.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF",
                                "SOC 2"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_DYNAMO_DB_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dynamodb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0036-CFR",
                            "eval": "data.rule.dynabodb_encrypt",
                            "message": "data.rule.dynabodb_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html",
                            "remediationFunction": "PR_AWS_0036_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS DynamoDB encrypted using AWS owned CMK instead of AWS managed CMK",
                    "description": "This policy identifies the DynamoDB tables that use AWS owned CMK (default ) instead of AWS managed CMK (KMS ) to encrypt data. AWS managed CMK provide additional features such as the ability to view the CMK and key policy, and audit the encryption and decryption of DynamoDB tables.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EBS",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ebs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0041-CFR",
                            "eval": "data.rule.ebs_encrypt",
                            "message": "data.rule.ebs_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html",
                            "remediationFunction": "PR_AWS_0041_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EBS volumes are not encrypted",
                    "description": "This policy identifies the EBS volumes which are not encrypted. The snapshots that you take of an encrypted EBS volume are also encrypted and can be moved between AWS Regions as needed.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HIPAA",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EC2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ec2.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0042-CFR",
                            "eval": "data.rule.ec2_iam_role",
                            "message": "data.rule.ec2_iam_role_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html",
                            "remediationFunction": "PR_AWS_0042_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EC2 Instance IAM Role not enabled",
                    "description": "AWS provides Identity Access Management (IAM) roles to securely access AWS services and resources. The role is an identity with permission policies that define what the identity can and cannot do in AWS.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0047-CFR",
                            "eval": "data.rule.ecs_task_evelated",
                            "message": "data.rule.ecs_task_evelated_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html",
                            "remediationFunction": "PR_AWS_0047_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ECS task definition elevated privileges enabled",
                    "description": "Ensure your ECS containers are not given elevated privileges on the host container instance._x000D__x000D_When the Privileged parameter is true, the container is given elevated privileges on the host container instance (similar to the root user)._x000D__x000D_This policy checks the security configuration of your task definition and alerts if elevated privileges are enabled._x000D__x000D_Note: This parameter is not supported for Windows containers or tasks using the Fargate launch type.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0048-CFR",
                            "eval": "data.rule.ecs_exec",
                            "message": "data.rule.ecs_exec_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html",
                            "remediationFunction": "PR_AWS_0048_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ECS/ Fargate task definition execution IAM Role not found",
                    "description": "The execution IAM Role is required by tasks to pull container images and publish container logs to Amazon CloudWatch on your behalf. This policy generates an alert if a task execution role is not found in your task definition.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0049-CFR",
                            "eval": "data.rule.ecs_root_user",
                            "message": "data.rule.ecs_root_user_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html",
                            "remediationFunction": "PR_AWS_0049_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ECS/ Fargate task definition root user found",
                    "description": "The user name to use inside the container should not be root. This policy generates an alert if root user is found in your container definition._x000D__x000D_The User parameter maps to User in the Create a container section of the Docker Remote API and the --user option to docker run_x000D__x000D_Note: This parameter is not supported for Windows containers.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EFS_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(efs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0060-CFR",
                            "eval": "data.rule.efs_kms",
                            "message": "data.rule.efs_kms_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html",
                            "remediationFunction": "PR_AWS_0060_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic File System (EFS) not encrypted using Customer Managed Key",
                    "description": "This policy identifies Elastic File Systems (EFSs) which are encrypted with default KMS keys and not with Keys managed by Customer. It is a best practice to use customer managed KMS Keys to encrypt your EFS data. It gives you full control over the encrypted data.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EFS_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(efs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0061-CFR",
                            "eval": "data.rule.efs_encrypt",
                            "message": "data.rule.efs_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html",
                            "remediationFunction": "PR_AWS_0061_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic File System (EFS) with encryption for data at rest disabled",
                    "description": "This policy identifies Elastic File Systems (EFSs) for which encryption for data at rest disabled. It is highly recommended to implement at-rest encryption in order to prevent unauthorized users from reading sensitive data saved to EFS.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EKS",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(eks.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0050-CFR",
                            "eval": "data.rule.eks_multiple_sg",
                            "message": "data.rule.eks_multiple_sg_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html",
                            "remediationFunction": "PR_AWS_0050_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EKS cluster control plane assigned multiple security groups",
                    "description": "Amazon EKS strongly recommends that you use a dedicated security group for each cluster control plane (one per cluster). This policy checks the number of security groups assigned to your cluster's control plane and alerts if there are more than one.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTICACHE_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elasticache.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0055-CFR",
                            "eval": "data.rule.cache_failover",
                            "message": "data.rule.cache_failover_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html",
                            "remediationFunction": "PR_AWS_0055_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ElastiCache Redis cluster with Multi-AZ Automatic Failover feature set to disabled",
                    "description": "This policy identifies ElastiCache Redis clusters which have Multi-AZ Automatic Failover feature set to disabled. It is recommended to enable the Multi-AZ Automatic Failover feature for your Redis Cache cluster, which will improve primary node reachability by providing read replica in case of network connectivity loss or loss of availability in the primary's availability zone for read/write operations._x000D_Note: Redis cluster Multi-AZ with automatic failover does not support T1 and T2 cache node types and is only available if the cluster has at least one read replica.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTICACHE_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elasticache.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0056-CFR",
                            "eval": "data.rule.cache_redis_auth",
                            "message": "data.rule.cache_redis_auth_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html",
                            "remediationFunction": "PR_AWS_0056_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ElastiCache Redis cluster with Redis AUTH feature disabled",
                    "description": "This policy identifies ElastiCache Redis clusters which have Redis AUTH feature disabled. Redis AUTH can improve data security by requiring the user to enter a password before they are granted permission to execute Redis commands on a password protected Redis server.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTICACHE_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elasticache.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0057-CFR",
                            "eval": "data.rule.cache_redis_encrypt",
                            "message": "data.rule.cache_redis_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html",
                            "remediationFunction": "PR_AWS_0057_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ElastiCache Redis cluster with encryption for data at rest disabled",
                    "description": "This policy identifies ElastiCache Redis clusters which have encryption for data at rest(at-rest) is disabled. It is highly recommended to implement at-rest encryption in order to prevent unauthorized users from reading sensitive data saved to persistent media available on your Redis clusters and their associated cache storage systems.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTICACHE_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elasticache.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0058-CFR",
                            "eval": "data.rule.cache_encrypt",
                            "message": "data.rule.cache_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html",
                            "remediationFunction": "PR_AWS_0058_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ElastiCache Redis cluster with in-transit encryption disabled",
                    "description": "This policy identifies ElastiCache Redis clusters which have in-transit encryption disabled. It is highly recommended to implement in-transit encryption in order to protect data from unauthorized access as it travels through the network, between clients and cache servers. Enabling data encryption in-transit helps prevent unauthorized users from reading sensitive data between your Redis clusters and their associated cache storage systems.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTIC_SEARCH_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0074-CFR",
                            "eval": "data.rule.esearch_vpc",
                            "message": "data.rule.esearch_vpc_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
                            "remediationFunction": "PR_AWS_0074_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ElasticSearch cluster not in a VPC",
                    "description": "VPC support for Amazon ES is easy to configure, reliable, and offers an extra layer of security. With VPC support, traffic between other services and Amazon ES stays entirely within the AWS network, isolated from the public Internet. You can manage network access using existing VPC security groups, and you can use AWS Identity and Access Management (IAM) policies for additional protection. VPC support for Amazon ES domains is available at no additional charge.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTIC_SEARCH_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0076-CFR",
                            "eval": "data.rule.esearch_encrypt",
                            "message": "data.rule.esearch_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
                            "remediationFunction": "PR_AWS_0076_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elasticsearch domain Encryption for data at rest is disabled",
                    "description": "This policy identifies Elasticsearch domains for which encryption is disabled. Encryption of data at rest is required to prevent unauthorized users from accessing the sensitive information available on your Elasticsearch domains components. This may include all data of file systems, primary and replica indices, log files, memory swap files and automated snapshots. The Elasticsearch uses AWS KMS service to store and manage the encryption keys. It is highly recommended to implement encryption at rest when you are working with production data that have sensitive information, to protect from unauthorized access.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTIC_SEARCH_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0077-CFR",
                            "eval": "data.rule.esearch_master",
                            "message": "data.rule.esearch_master_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
                            "remediationFunction": "PR_AWS_0077_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elasticsearch domain has Dedicated master set to disabled",
                    "description": "This policy identifies Elasticsearch domains for which Dedicated master is disabled in your AWS account. If dedicated master nodes are provided those handle the management tasks and cluster nodes can easily manage index and search requests from different types of workload and make them more resilient in production. Dedicated master nodes improve environmental stability by freeing all the management tasks from the cluster data nodes.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTIC_SEARCH_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0078-CFR",
                            "eval": "data.rule.esearch_index_slow_log",
                            "message": "data.rule.esearch_index_slow_log_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
                            "remediationFunction": "PR_AWS_0078_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elasticsearch domain has Index slow logs set to disabled",
                    "description": "This policy identifies Elasticsearch domains for which Index slow logs is disabled in your AWS account. Enabling support for publishing indexing slow logs to AWS CloudWatch Logs enables you have full insight into the performance of indexing operations performed on your Elasticsearch clusters. This will help you in identifying performance issues caused by specific queries or due to changes in cluster usage, so that you can optimize your index configuration to address the problem.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTIC_SEARCH_5",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0079-CFR",
                            "eval": "data.rule.esearch_search_slow_log",
                            "message": "data.rule.esearch_search_slow_log_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
                            "remediationFunction": "PR_AWS_0079_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elasticsearch domain has Search slow logs set to disabled",
                    "description": "This policy identifies Elasticsearch domains for which Search slow logs is disabled in your AWS account. Enabling support for publishing Search slow logs to AWS CloudWatch Logs enables you to have full insight into the performance of search operations performed on your Elasticsearch clusters. This will help you in identifying performance issues caused by specific search queries so that you can optimize your queries to address the problem.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTIC_SEARCH_6",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0080-CFR",
                            "eval": "data.rule.esearch_zone_awareness",
                            "message": "data.rule.esearch_zone_awareness_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
                            "remediationFunction": "PR_AWS_0080_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elasticsearch domain has Zone Awareness set to disabled",
                    "description": "This policy identifies Elasticsearch domains for which Zone Awareness is disabled in your AWS account. Enabling Zone Awareness (cross-zone replication) increases the availability by distributing your Elasticsearch data nodes across two availability zones available in the same AWS region. It also prevents data loss and minimizes downtime in the event of node or availability zone failure.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "NIST 800"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0062-CFR",
                            "eval": "data.rule.elb_insecure_cipher",
                            "message": "data.rule.elb_insecure_cipher_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html",
                            "remediationFunction": "PR_AWS_0062_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer (Classic) SSL negotiation policy configured with insecure ciphers",
                    "description": "This policy identifies Elastic Load Balancers (Classic) which are configured with SSL negotiation policy containing insecure ciphers. An SSL cipher is an encryption algorithm that uses encryption keys to create a coded message. SSL protocols use several SSL ciphers to encrypt data over the Internet. As many of the other ciphers are not secure, it is recommended to use only the ciphers recommended in the following AWS link: https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-ssl-security-policy.html.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0063-CFR",
                            "eval": "data.rule.elb_insecure_protocol",
                            "message": "data.rule.elb_insecure_protocol_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html",
                            "remediationFunction": "PR_AWS_0063_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer (Classic) SSL negotiation policy configured with vulnerable SSL protocol",
                    "description": "This policy identifies Elastic Load Balancers (Classic) which are configured with SSL negotiation policy containing vulnerable SSL protocol. The SSL protocol establishes a secure connection between a client and a server and ensures that all the data passed between the client and your load balancer is private. As a security best practice, it is recommended to use the latest version SSL protocol.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0064-CFR",
                            "eval": "data.rule.elb_access_log",
                            "message": "data.rule.elb_access_log_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html",
                            "remediationFunction": "PR_AWS_0064_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer (Classic) with access log disabled",
                    "description": "This policy identifies Classic Elastic Load Balancers which have access log disabled. When Access log enabled, Classic load balancer captures detailed information about requests sent to your load balancer. Each log contains information such as the time the request was received, the client's IP address, latencies, request paths, and server responses. You can use these access logs to analyze traffic patterns and to troubleshoot issues.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0065-CFR",
                            "eval": "data.rule.elb_conn_drain",
                            "message": "data.rule.elb_conn_drain_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html",
                            "remediationFunction": "PR_AWS_0065_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer (Classic) with connection draining disabled",
                    "description": "This policy identifies Classic Elastic Load Balancers which have connection draining disabled. Connection Draining feature ensures that a Classic load balancer stops sending requests to instances that are de-registering or unhealthy, while keeping the existing connections open. This enables the load balancer to complete in-flight requests made to instances that are de-registering or unhealthy.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_5",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0066-CFR",
                            "eval": "data.rule.elb_crosszone",
                            "message": "data.rule.elb_crosszone_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html",
                            "remediationFunction": "PR_AWS_0066_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer (Classic) with cross-zone load balancing disabled",
                    "description": "This policy identifies Classic Elastic Load Balancers which have cross-zone load balancing disabled. When Cross-zone load balancing enabled, classic load balancer distributes requests evenly across the registered instances in all enabled Availability Zones. Cross-zone load balancing reduces the need to maintain equivalent numbers of instances in each enabled Availability Zone, and improves your application's ability to handle the loss of one or more instances.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_6",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0068-CFR",
                            "eval": "data.rule.elb_sec_group_egress",
                            "message": "data.rule.elb_sec_group_egress_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html",
                            "remediationFunction": "PR_AWS_0068_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer (ELB) has security group with no outbound rules",
                    "description": "This policy identifies Elastic Load Balancers (ELB) which have security group with no outbound rules. A security group with no outbound rule will deny all outgoing requests. ELB security groups should have at least one outbound rule, ELB with no outbound permissions will deny all traffic going to any EC2 instances or resources configured behind that ELB; in other words, the ELB is useless without outbound permissions.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_7",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0069-CFR",
                            "eval": "data.rule.elb_not_in_use",
                            "message": "data.rule.elb_not_in_use_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html",
                            "remediationFunction": "PR_AWS_0069_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer (ELB) not in use",
                    "description": "This policy identifies unused Elastic Load Balancers (ELBs) in your AWS account. Any Elastic Load Balancer in your AWS account is adding charges to your monthly bill, although it is not used by any resources. As a best practice, it is recommended to remove ELBs that are not associated with any instances, it will also help you avoid unexpected charges on your bill.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "ISO 27001"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_8",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0072-CFR",
                            "eval": "data.rule.elb_alb_logs",
                            "message": "data.rule.elb_alb_logs_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html",
                            "remediationFunction": "PR_AWS_0072_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer v2 (ELBv2) Application Load Balancer (ALB) with access log disabled",
                    "description": "This policy identifies ELBv2 ALBs which have access log disabled. Access logs capture detailed information about requests sent to your load balancer and each log contains information such as the time the request was received, the client's IP address, latencies, request paths, and server responses. You can use these access logs to analyze traffic patterns and troubleshoot issues.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_9",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0073-CFR",
                            "eval": "data.rule.elb_listener_ssl",
                            "message": "data.rule.elb_listener_ssl_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html",
                            "remediationFunction": "PR_AWS_0073_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer with listener TLS/SSL disabled",
                    "description": "This policy identifies Elastic Load Balancers which have listener TLS/SSL disabled. As Load Balancers will be handling all incoming requests and routing the traffic accordingly; The listeners on the load balancers should always receive traffic over secure channel with a valid SSL certificate configured.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF",
                                "SOC 2"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_10",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0006-CFR",
                            "eval": "data.rule.elb_over_https",
                            "message": "data.rule.elb_over_https_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html",
                            "remediationFunction": "PR_AWS_0006_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Application Load Balancer (ALB) listener that allow connection requests over HTTP",
                    "description": "This policy identifies Application Load Balancer (ALB) listeners that are configured to accept connection requests over HTTP instead of HTTPS. As a best practice, use the HTTPS protocol to encrypt the communication between the application clients and the application load balancer.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_11",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0067-CFR",
                            "eval": "data.rule.elb_sec_group_ingress",
                            "message": "data.rule.elb_sec_group_ingress_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html",
                            "remediationFunction": "PR_AWS_0067_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer (ELB) has security group with no inbound rules",
                    "description": "This policy identifies Elastic Load Balancers (ELB) which have security group with no outbound rules. A security group with no outbound rule will deny all outgoing requests. ELB security groups should have at least one outbound rule, ELB with no outbound permissions will deny all traffic going to any EC2 instances or resources configured behind that ELB; in other words, the ELB is useless without outbound permissions.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_LAMBDA_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(lambda.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0105-CFR",
                            "eval": "data.rule.lambda_env",
                            "message": "data.rule.lambda_env_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html",
                            "remediationFunction": "PR_AWS_0105_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Lambda Environment Variables not encrypted at-rest using CMK",
                    "description": "When you create or update Lambda functions that use environment variables, AWS Lambda encrypts them using the AWS Key Management Service. When your Lambda function is invoked, those values are decrypted and made available to the Lambda code._x000D__x000D_This policy verifies that Lambda function uses the AMS Key Management Service to encrypt variables at-rest with CMK.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_LAMBDA_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(lambda.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0106-CFR",
                            "eval": "data.rule.lambda_vpc",
                            "message": "data.rule.lambda_vpc_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html",
                            "remediationFunction": "PR_AWS_0106_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Lambda Function is not assigned to access within VPC",
                    "description": "This policy identifies the AWS Lambda functions which do not have access within the VPC. Amazon Lambda functions should have access to VPC-only resources such as AWS Redshift data warehouses, AWS ElastiCache clusters, AWS RDS database instances, and service endpoints that should be only accessible from within a particular Virtual Private Cloud (VPC).",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_LAMBDA_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(lambda.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0107-CFR",
                            "eval": "data.rule.lambda_tracing",
                            "message": "data.rule.lambda_tracing_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html",
                            "remediationFunction": "PR_AWS_0107_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Lambda functions with tracing not enabled",
                    "description": "TracingConfig is a property of the AWS::Lambda::Function resource that configures tracing settings for your AWS Lambda (Lambda) function. When enabled, AWS Lambda tracing acitivates AWS X-Ray service that collects information on requests that a specific function performed. It reduces the time and effort for debugging and diagnosing the errors._x000D__x000D_The value can be either PassThrough or Active. If PassThrough, Lambda will only trace the request from an upstream service if it contains a tracing header with 'sampled=1'. If Active, Lambda will respect any tracing header it receives from an upstream service. If no tracing header is received, Lambda will call X-Ray for a tracing decision.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "HITRUST",
                                "NIST 800"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RDS_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(rds.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0119-CFR",
                            "eval": "data.rule.rds_cluster_encrypt",
                            "message": "data.rule.rds_cluster_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
                            "remediationFunction": "PR_AWS_0119_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS RDS DB cluster encryption is disabled",
                    "description": "This policy identifies RDS DB clusters for which encryption is disabled. Amazon Aurora encrypted DB clusters provide an additional layer of data protection by securing your data from unauthorized access to the underlying storage. You can use Amazon Aurora encryption to increase data protection of your applications deployed in the cloud, and to fulfill compliance requirements for data-at-rest encryption._x000D_NOTE: This policy is applicable only for Aurora DB clusters._x000D_https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-clusters.html",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RDS_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(rds.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0121-CFR",
                            "eval": "data.rule.rds_public",
                            "message": "data.rule.rds_public_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
                            "remediationFunction": "PR_AWS_0121_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS RDS database instance is publicly accessible",
                    "description": "This policy identifies RDS database instances which are publicly accessible.DB instances should not be publicly accessible to protect the integrety of data.Public accessibility of DB instances can be modified by turning on or off the Public accessibility parameter.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RDS_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(rds.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0125-CFR",
                            "eval": "data.rule.rds_encrypt",
                            "message": "data.rule.rds_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
                            "remediationFunction": "PR_AWS_0125_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS RDS instance is not encrypted",
                    "description": "This policy identifies AWS RDS instances which are not encrypted. Amazon Relational Database Service (Amazon RDS) is a web service that makes it easier to set up and manage databases. Amazon allows customers to turn on encryption for RDS which is recommended for compliance and security reasons.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HIPAA",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RDS_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(rds.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0127-CFR",
                            "eval": "data.rule.rds_multiaz",
                            "message": "data.rule.rds_multiaz_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
                            "remediationFunction": "PR_AWS_0127_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS RDS instance with Multi-Availability Zone disabled",
                    "description": "This policy identifies RDS instances which have Multi-Availability Zone(Multi-AZ) disabled. When RDS DB instance is enabled with Multi-AZ, RDS automatically creates a primary DB Instance and synchronously replicates the data to a standby instance in a different availability zone. These Multi-AZ deployments will improve primary node reachability by providing read replica in case of network connectivity loss or loss of availability in the primaryâ€™s availability zone for read/write operations, so by making them the best fit for production database workloads.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RDS_5",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(rds.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0128-CFR",
                            "eval": "data.rule.rds_snapshot",
                            "message": "data.rule.rds_snapshot_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
                            "remediationFunction": "PR_AWS_0128_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS RDS instance with copy tags to snapshots disabled",
                    "description": "This policy identifies RDS instances which have copy tags to snapshots disabled. Copy tags to snapshots copies all the user-defined tags from the DB instance to snapshots. Copying tags allow you to add metadata and apply access policies to your Amazon RDS resources.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RDS_6",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(rds.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0129-CFR",
                            "eval": "data.rule.rds_backup",
                            "message": "data.rule.rds_backup_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
                            "remediationFunction": "PR_AWS_0129_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS RDS instance without Automatic Backup setting",
                    "description": "This policy identifies RDS instances which are not set with the Automatic Backup setting. If Automatic Backup is set, RDS creates a storage volume snapshot of your DB instance, backing up the entire DB instance and not just individual databases which provide for point-in-time recovery. The automatic backup will happen during the specified backup window time and keeps the backups for a limited period of time as defined in the retention period. It is recommended to set Automatic backups for your critical RDS servers that will help in the data restoration process.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RDS_7",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(rds.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0130-CFR",
                            "eval": "data.rule.rds_upgrade",
                            "message": "data.rule.rds_upgrade_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
                            "remediationFunction": "PR_AWS_0130_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS RDS minor upgrades not enabled",
                    "description": "When Amazon Relational Database Service (Amazon RDS) supports a new version of a database engine, you can upgrade your DB instances to the new version. There are two kinds of upgrades: major version upgrades and minor version upgrades. Minor upgrades helps maintain a secure and stable RDS with minimal impact on the application. For this reason, we recommend that your automatic minor upgrade is enabled. Minor version upgrades only occur automatically if a minor upgrade replaces an unsafe version, such as a minor upgrade that contains bug fixes for a previous version.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RDS_8",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(rds.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0131-CFR",
                            "eval": "data.rule.rds_retention",
                            "message": "data.rule.rds_retention_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
                            "remediationFunction": "PR_AWS_0131_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS RDS retention policy less than 7 days",
                    "description": "RDS Retention Policies for Backups are an important part of your DR/BCP strategy. Recovering data from catastrophic failures, malicious attacks, or corruption often requires a several day window of potentially good backup material to leverage. As such, the best practice is to ensure your RDS clusters are retaining at least 7 days of backups, if not more (up to a maximum of 35).",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RED_SHIFT_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(redshift.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0133-CFR",
                            "eval": "data.rule.redshift_encrypt_key",
                            "message": "data.rule.redshift_encrypt_key_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html",
                            "remediationFunction": "PR_AWS_0133_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Redshift Cluster not encrypted using Customer Managed Key",
                    "description": "This policy identifies Redshift Clusters which are encrypted with default KMS keys and not with Keys managed by Customer. It is a best practice to use customer managed KMS Keys to encrypt your Redshift databases data. Customer-managed CMKs give you more flexibility, including the ability to create, rotate, disable, define access control for, and audit the encryption keys used to help protect your data.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RED_SHIFT_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(redshift.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0134-CFR",
                            "eval": "data.rule.redshift_public",
                            "message": "data.rule.redshift_public_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html",
                            "remediationFunction": "PR_AWS_0134_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Redshift clusters should not be publicly accessible",
                    "description": "This policy identifies AWS Redshift clusters which are accessible publicly.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "SOC 2"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RED_SHIFT_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(redshift.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0135-CFR",
                            "eval": "data.rule.redshift_audit",
                            "message": "data.rule.redshift_audit_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html",
                            "remediationFunction": "PR_AWS_0135_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Redshift database does not have audit logging enabled",
                    "description": "Audit logging is not enabled by default in Amazon Redshift. When you enable logging on your cluster, Amazon Redshift creates and uploads logs to Amazon S3 that capture data from the creation of the cluster to the present time.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "SOC 2"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RED_SHIFT_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(redshift.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0136-CFR",
                            "eval": "data.rule.redshift_require_ssl",
                            "message": "data.rule.redshift_require_ssl_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html",
                            "remediationFunction": "PR_AWS_0136_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Redshift does not have require_ssl configured",
                    "description": "This policy identifies Redshift databases in which data connection to and from is occurring on an insecure channel. SSL connections ensures the security of the data in transit.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RED_SHIFT_5",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(redshift.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0137-CFR",
                            "eval": "data.rule.redshift_encrypt",
                            "message": "data.rule.redshift_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html",
                            "remediationFunction": "PR_AWS_0137_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Redshift instances are not encrypted",
                    "description": "This policy identifies AWS Redshift instances which are not encrypted. These instances should be encrypted for clusters to help protect data at rest which otherwise can result in a data breach.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_S3_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(s3.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0004-CFR",
                            "eval": "data.rule.s3_accesslog",
                            "message": "data.rule.s3_accesslog_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
                            "remediationFunction": "PR_AWS_0004_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Access logging not enabled on S3 buckets",
                    "description": "Checks for S3 buckets without access logging turned on. Access logging allows customers to view complete audit trail on sensitive workloads such as S3 buckets. It is recommended that Access logging is turned on for all S3 buckets to meet audit & compliance requirement",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "NIST 800",
                                "PCI-DSS",
                                "SOC 2"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_S3_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(s3.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0140-CFR",
                            "eval": "data.rule.s3_acl_delete",
                            "message": "data.rule.s3_acl_delete_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
                            "remediationFunction": "PR_AWS_0140_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS S3 Bucket has Global DELETE Permissions enabled via bucket policy",
                    "description": "This policy identifies the S3 Bucket(s) which will allow any unauthenticated user to DELETE objects from a bucket. These permissions permit anyone, malicious or not, to DELETE objects from your S3 bucket if they can guess the namespace. Since the S3 service does not protect the namespace other than with ACLs and Bucket Policy, you risk loss or compromise of critical data by leaving this open.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_S3_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(s3.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0141-CFR",
                            "eval": "data.rule.s3_acl_get",
                            "message": "data.rule.s3_acl_get_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
                            "remediationFunction": "PR_AWS_0141_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS S3 Bucket has Global GET Permissions enabled via bucket policy",
                    "description": "This policy identifies the S3 Bucket(s) which will allow any unauthenticated user to GET objects from a bucket. These permissions permit anyone, malicious or not, to GET objects from your S3 bucket if they can guess the namespace. Since the S3 service does not protect the namespace other than with ACLs and Bucket Policy, you risk loss or compromise of critical data by leaving this open.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_S3_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(s3.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0142-CFR",
                            "eval": "data.rule.s3_acl_list",
                            "message": "data.rule.s3_acl_list_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
                            "remediationFunction": "PR_AWS_0142_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS S3 Bucket has Global LIST Permissions enabled via bucket policy",
                    "description": "This policy identifies the S3 Bucket(s) which will allow any unauthenticated user to LIST objects from a bucket. These permissions permit anyone, malicious or not, to LIST objects from your S3 bucket if they can guess the namespace. Since the S3 service does not protect the namespace other than with ACLs and Bucket Policy, you risk loss or compromise of critical data by leaving this open.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_S3_5",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(s3.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0143-CFR",
                            "eval": "data.rule.s3_acl_put",
                            "message": "data.rule.s3_acl_put_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
                            "remediationFunction": "PR_AWS_0143_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS S3 Bucket has Global PUT Permissions enabled via bucket policy",
                    "description": "This policy identifies the S3 Bucket(s) which will allow any unauthenticated user to PUT objects into a bucket. These permissions permit anyone, malicious or not, to PUT objects into your S3 bucket if they can guess the namespace. Since the S3 service does not protect the namespace other than with ACLs and Bucket Policy, you risk compromise of critical data by leaving this open.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_S3_6",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(s3.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0145-CFR",
                            "eval": "data.rule.s3_versioning",
                            "message": "data.rule.s3_versioning_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
                            "remediationFunction": "PR_AWS_0145_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS S3 Object Versioning is disabled",
                    "description": "This policy identifies the S3 buckets which have Object Versioning disabled. S3 Object Versioning is an important capability in protecting your data within a bucket. Once you enable Object Versioning, you cannot remove it; you can suspend Object Versioning at any time on a bucket if you do not wish for it to persist. It is recommended to enable Object Versioning on S3.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_S3_7",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(s3.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0148-CFR",
                            "eval": "data.rule.s3_transport",
                            "message": "data.rule.s3_transport_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
                            "remediationFunction": "PR_AWS_0148_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS S3 bucket not configured with secure data transport policy",
                    "description": "This policy identifies S3 buckets which are not configured with secure data transport policy. AWS S3 buckets should enforce encryption of data over the network using Secure Sockets Layer (SSL). It is recommended to add a bucket policy that explicitly denies (Effect: Deny) all access (Action: s3:*) from anybody who browses (Principal: *) to Amazon S3 objects within an Amazon S3 bucket if they are not accessed through HTTPS (aws:SecureTransport: false).",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_S3_8",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(s3.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0196-CFR",
                            "eval": "data.rule.s3_website",
                            "message": "data.rule.s3_website_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
                            "remediationFunction": "PR_AWS_0196_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "S3 buckets with configurations set to host websites",
                    "description": "To host a website on AWS S3 you should configure a bucket as a website. This policy identifies all the S3 buckets that are configured to host websites. By frequently surveying these S3 buckets you can ensure that only authorized buckets are enabled to host websites. Make sure to disable static website hosting for unauthorized S3 buckets.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "ISO 27001"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0175-CFR",
                            "eval": "data.rule.port_135",
                            "message": "data.rule.port_135_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0175_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to Windows RPC port (135)",
                    "description": "This policy identifies the security groups which are exposing Windows RPC port (135) to the internet. It is recommended that Global permission to access the well known services Windows RPC port (135) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0165-CFR",
                            "eval": "data.rule.port_137",
                            "message": "data.rule.port_137_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0165_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to NetBIOS port (137)",
                    "description": "This policy identifies the security groups which are exposing NetBIOS port (137) to the internet. It is recommended that Global permission to access the well known services NetBIOS port (137) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0166-CFR",
                            "eval": "data.rule.port_138",
                            "message": "data.rule.port_138_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0166_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to NetBIOS port (138)",
                    "description": "This policy identifies the security groups which are exposing NetBIOS port (138) to the internet. It is recommended that Global permission to access the well known services NetBIOS port (138) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0170-CFR",
                            "eval": "data.rule.port_1433",
                            "message": "data.rule.port_1433_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0170_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to SQLServer port (1433)",
                    "description": "This policy identifies the security groups which are exposing SQLServer port (1433) to the internet. It is recommended that Global permission to access the well known services SQLServer port (1433) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_5",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0171-CFR",
                            "eval": "data.rule.port_1434",
                            "message": "data.rule.port_1434_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0171_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to SQLServer port (1434)",
                    "description": "This policy identifies the security groups which are exposing SQLServer port (1434) to the internet. It is recommended that Global permission to access the well known services SQLServer port (1434) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_6",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0162-CFR",
                            "eval": "data.rule.port_20",
                            "message": "data.rule.port_20_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0162_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to FTP-Data port (20)",
                    "description": "This policy identifies the security groups which are exposing FTP-Data port (20) to the internet. It is recommended that Global permission to access the well known services FTP-Data port (20) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_7",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0161-CFR",
                            "eval": "data.rule.port_21",
                            "message": "data.rule.port_21_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0161_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to FTP port (21)",
                    "description": "This policy identifies the security groups which are exposing FTP port (21) to the internet. It is recommended that Global permission to access the well known services FTP port (21) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_8",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0176-CFR",
                            "eval": "data.rule.port_22",
                            "message": "data.rule.port_22_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0176_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic to SSH port (22)",
                    "description": "This policy identifies AWS Security Groups which do allow inbound traffic on SSH port (22) from public internet. Doing so, may allow a bad actor to brute force their way into the system and potentially get access to the entire network.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "GDPR",
                                "HIPAA",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF",
                                "SOC 2"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_9",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0172-CFR",
                            "eval": "data.rule.port_23",
                            "message": "data.rule.port_23_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0172_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to Telnet port (23)",
                    "description": "This policy identifies the security groups which are exposing Telnet port (23) to the internet. It is recommended that Global permission to access the well known services Telnet port (23) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_10",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0169-CFR",
                            "eval": "data.rule.port_25",
                            "message": "data.rule.port_25_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0169_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to SMTP port (25)",
                    "description": "This policy identifies the security groups which are exposing SMTP port (25) to the internet. It is recommended that Global permission to access the well known services SMTP port (25) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_11",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0164-CFR",
                            "eval": "data.rule.port_3306",
                            "message": "data.rule.port_3306_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0164_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to MYSQL port (3306)",
                    "description": "This policy identifies the security groups which are exposing MYSQL port (3306) to the internet. It is recommended that Global permission to access the well known services MYSQL port (3306) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_12",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0168-CFR",
                            "eval": "data.rule.port_3389",
                            "message": "data.rule.port_3389_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0168_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to RDP port (3389)",
                    "description": "This policy identifies the security groups which is exposing RDP port (3389) to the internet. Security Groups do not allow inbound traffic on RDP port (3389) from public internet. Doing so, may allow a bad actor to brute force their way into the system and potentially get access to the entire network.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "GDPR",
                                "HIPAA",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF",
                                "SOC 2"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_13",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0163-CFR",
                            "eval": "data.rule.port_4333",
                            "message": "data.rule.port_4333_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0163_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to MSQL port (4333)",
                    "description": "This policy identifies the security groups which are exposing MSQL port (4333) to the internet. It is recommended that Global permission to access the well known services MSQL port (4333) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_14",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0159-CFR",
                            "eval": "data.rule.port_445",
                            "message": "data.rule.port_445_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0159_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to CIFS port (445)",
                    "description": "This policy identifies the security groups which are exposing CIFS port (445) to the internet. It is recommended that Global permission to access the well known services CIFS port (445) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_15",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0160-CFR",
                            "eval": "data.rule.port_53",
                            "message": "data.rule.port_53_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0160_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to DNS port (53)",
                    "description": "This policy identifies the security groups which are exposing DNS port (53) to the internet. It is recommended that Global permission to access the well known services DNS port (53) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_16",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0167-CFR",
                            "eval": "data.rule.port_5432",
                            "message": "data.rule.port_5432_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0167_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to PostgreSQL port (5432)",
                    "description": "This policy identifies the security groups which are exposing PostgreSQL port (5432) to the internet. It is recommended that Global permission to access the well known services PostgreSQL port (5432) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_17",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0173-CFR",
                            "eval": "data.rule.port_5500",
                            "message": "data.rule.port_5500_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0173_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to VNC Listener port (5500)",
                    "description": "This policy identifies the security groups which are exposing VNC Listener port (5500) to the internet. It is recommended that Global permission to access the well known services VNC Listener port (5500) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_18",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0174-CFR",
                            "eval": "data.rule.port_5900",
                            "message": "data.rule.port_5900_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0174_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to VNC Server port (5900)",
                    "description": "This policy identifies the security groups which are exposing VNC Server port (5900) to the internet. It is recommended that Global permission to access the well known services VNC Server port (5900) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_19",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0035-CFR",
                            "eval": "data.rule.port_all",
                            "message": "data.rule.port_all_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0035_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Default Security Group does not restrict all traffic",
                    "description": "This policy identifies the default security group which does not restrict all inbound and outbound traffic. A VPC comes with a default security group whose initial configuration deny all inbound traffic from internet and allow all outbound traffic. If you do not specify a security group when you launch an instance, the instance is automatically assigned to this default security group. As a result, the instance may accidentally send outbound traffic.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "SOC 2"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_20",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0178-CFR",
                            "eval": "data.rule.port_proto_all",
                            "message": "data.rule.port_proto_all_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0178_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups with Inbound rule overly permissive to All Traffic",
                    "description": "This policy identifies AWS Security Groups which do allow inbound traffic on all protocols from public internet. Doing so, may allow a bad actor to brute force their way into the system and potentially get access to the entire network.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SNS_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sns.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0152-CFR",
                            "eval": "data.rule.sns_protocol",
                            "message": "data.rule.sns_protocol_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html",
                            "remediationFunction": "PR_AWS_0152_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS SNS subscription is not configured with HTTPS",
                    "description": "This policy identifies SNS subscriptions using HTTP instead of HTTPS as the delivery protocol in order to enforce SSL encryption for all subscription requests. It is strongly recommended use only HTTPS-based subscriptions by implementing secure SNS topic policies.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SNS_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sns.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0153-CFR",
                            "eval": "data.rule.sns_encrypt_key",
                            "message": "data.rule.sns_encrypt_key_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html",
                            "remediationFunction": "PR_AWS_0153_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS SNS topic encrypted using default KMS key instead of CMK",
                    "description": "This policy identifies Amazon Simple Notification Service (SNS) topics that are encrypted with the default AWS Key Management Service (KMS) keys. As a best practice, use Customer Master Keys (CMK) to encrypt the data in your SNS topics and ensure full control over your data.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SNS_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sns.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0154-CFR",
                            "eval": "data.rule.sns_encrypt",
                            "message": "data.rule.sns_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html",
                            "remediationFunction": "PR_AWS_0154_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS SNS topic with server-side encryption disabled",
                    "description": "This policy identifies Amazon Simple Notification Service (SNS) topics that have server-side encryption disabled. As a best practice, enable server-side encryption for at-rest encryption of message content published to SNS topics. When you publish a message, the SNS encrypts your message as soon as it receives it, and decrypts it just prior to delivery.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SQS_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sqs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0155-CFR",
                            "eval": "data.rule.sqs_deadletter",
                            "message": "data.rule.sqs_deadletter_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html",
                            "remediationFunction": "PR_AWS_0155_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS SQS does not have a dead letter queue configured",
                    "description": "This policy identifies AWS Simple Queue Services (SQS) which does not have dead letter queue configured. Dead letter queues are useful for debugging your application or messaging system because they let you isolate problematic messages to determine why their processing doesn't succeed.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SQS_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sqs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0156-CFR",
                            "eval": "data.rule.sqs_encrypt_key",
                            "message": "data.rule.sqs_encrypt_key_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html",
                            "remediationFunction": "PR_AWS_0156_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS SQS queue encryption using default KMS key instead of CMK",
                    "description": "This policy identifies CloudFront web distributions which have a default SSL certificate to access CloudFront content. It is a best practice to use custom SSL Certificate to access CloudFront content. It gives you full control over the content data. custom SSL certificates also allow your users to access your content by using an alternate domain name. You can use a certificate stored in AWS Certificate Manager (ACM) or you can use a certificate stored in IAM.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SQS_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sqs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0157-CFR",
                            "eval": "data.rule.sqs_encrypt",
                            "message": "data.rule.sqs_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html",
                            "remediationFunction": "PR_AWS_0157_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS SQS server side encryption not enabled",
                    "description": "SSE lets you transmit sensitive data in encrypted queues. SSE protects the contents of messages in Amazon SQS queues using keys managed in the AWS Key Management Service (AWS KMS). SSE encrypts messages as soon as Amazon SQS receives them. The messages are stored in encrypted form and Amazon SQS decrypts messages only when they are sent to an authorized consumer._x000D__x000D_SQS SSE and the AWS KMS security standards can help you meet encryption-related compliance requirements.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_VPC",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(vpc.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0184-CFR",
                            "eval": "data.rule.vpc_subnet_autoip",
                            "message": "data.rule.vpc_subnet_autoip_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html",
                            "remediationFunction": "PR_AWS_0184_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS VPC subnets should not allow automatic public IP assignment",
                    "description": "This policy identifies VPC subnets which allow automatic public IP assignment. VPC subnet is a part of the VPC having its own rules for traffic. Assigning the Public IP to the subnet automatically (on launch) can accidentally expose the instances within this subnet to internet and should be edited to 'No' post creation of the Subnet.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECRETS_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(secrets.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0028-RGX",
                            "eval": "data.rule.gl_aws_secrets",
                            "message": "data.rule.gl_aws_secrets_err",
                            "remediationDescription": "",
                            "remediationFunction": ""
                        }
                    ],
                    "severity": "Medium",
                    "title": "Secrets should be removed from the source code",
                    "description": "We should not have any secret in the source code. Make sure to put the secrets in a vault",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECRETS_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(secrets.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0029-RGX",
                            "eval": "data.rule.gl_aws_account",
                            "message": "data.rule.gl_aws_account_err",
                            "remediationDescription": "",
                            "remediationFunction": ""
                        }
                    ],
                    "severity": "Medium",
                    "title": "Secrets should be removed from the source code",
                    "description": "We should not have any secret in the source code. Make sure to put the secrets in a vault",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORKACL_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ec2networkacl.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0113-CFR",
                            "eval": "data.rule.acl_all_icmp_ipv4",
                            "message": "data.rule.acl_all_icmp_ipv4_err",
                            "remediationDescription": "",
                            "remediationFunction": "PR_AWS_0113_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Network ACLs with Inbound rule to allow All ICMP IPv4",
                    "description": "This policy identifies ACLs which allows traffic on all ICMP IPv4 protocol. A network access control list (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. By default, ACL allows all inbound and outbound IPv4 traffic and, if applicable, IPv6 traffic. Inbound rules that allow unrestricted traffic to the internet can be a security risk. As a best practice, it is recommended to configure ACL to restrict traffic on authorized protocols.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ec2networkacl",
                                "cloudformation"
                            ]
                        }
                    ],
                    "status": "enable"
                },
                {
                    "masterTestId": "TEST_NETWORKACL_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ec2networkacl.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0114-CFR",
                            "eval": "data.rule.acl_all_icmp_ipv6",
                            "message": "data.rule.acl_all_icmp_ipv6_err",
                            "remediationDescription": "",
                            "remediationFunction": "PR_AWS_0114_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Network ACLs with Inbound rule to allow All ICMP IPv6",
                    "description": "This policy identifies ACLs which allows traffic on all ICMP IPv6 protocol. A network access control list (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. By default, ACL allows all inbound and outbound IPv4 traffic and, if applicable, IPv6 traffic. Inbound rules that allow unrestricted traffic to the internet can be a security risk. As a best practice, it is recommended to configure ACL to restrict traffic on authorized protocols.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ec2networkacl",
                                "cloudformation"
                            ]
                        }
                    ],
                    "status": "enable"
                },
                {
                    "masterTestId": "TEST_NETWORKACL_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ec2networkacl.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0115-CFR",
                            "eval": "data.rule.acl_all_traffic",
                            "message": "data.rule.acl_all_traffic_err",
                            "remediationDescription": "",
                            "remediationFunction": "PR_AWS_0115_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Network ACLs with Inbound rule to allow All Traffic",
                    "description": "This policy identifies ACLs which allows traffic on all protocols. A network access control list (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. By default, ACL allows all inbound and outbound IPv4 traffic and, if applicable, IPv6 traffic. Inbound rules that allow unrestricted traffic to the internet can be a security risk. As a best practice, it is recommended to configure ACLs to restrict traffic on authorized protocols.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ec2networkacl",
                                "cloudformation"
                            ]
                        }
                    ],
                    "status": "enable"
                },
                {
                    "masterTestId": "TEST_NETWORKACL_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ec2networkacl.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0116-CFR",
                            "eval": "data.rule.acl_all_icmp_ipv4_out",
                            "message": "data.rule.acl_all_icmp_ipv4_out_err",
                            "remediationDescription": "",
                            "remediationFunction": "PR_AWS_0116_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Network ACLs with Outbound rule to allow All ICMP IPv4",
                    "description": "This policy identifies ACLs which allows traffic on all protocol. A network access control list (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. By default, ACL allows all inbound and outbound IPv4 traffic and, if applicable, IPv6 traffic. Outbound rules that allow unrestricted traffic to the internet can be a security risk. As a best practice, it is recommended to configure ACL to restrict traffic on authorized protocols.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ec2networkacl",
                                "cloudformation"
                            ]
                        }
                    ],
                    "status": "enable"
                },
                {
                    "masterTestId": "TEST_NETWORKACL_5",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ec2networkacl.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0117-CFR",
                            "eval": "data.rule.acl_all_icmp_ipv6_out",
                            "message": "data.rule.acl_all_icmp_ipv6_out_err",
                            "remediationDescription": "",
                            "remediationFunction": "PR_AWS_0117_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Network ACLs with Outbound rule to allow All ICMP IPv6",
                    "description": "This policy identifies ACLs which allows traffic on all protocol. A network access control list (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. By default, ACL allows all inbound and outbound IPv4 traffic and, if applicable, IPv6 traffic. Outbound rules that allow unrestricted traffic to the internet can be a security risk. As a best practice, it is recommended to configure ACL to restrict traffic on authorized protocols.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ec2networkacl",
                                "cloudformation"
                            ]
                        }
                    ],
                    "status": "enable"
                },
                {
                    "masterTestId": "TEST_NETWORKACL_6",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ec2networkacl.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0118-CFR",
                            "eval": "data.rule.acl_all_traffic_out",
                            "message": "data.rule.acl_all_traffic_out_err",
                            "remediationDescription": "",
                            "remediationFunction": "PR_AWS_0118_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Network ACLs with Outbound rule to allow All Traffic",
                    "description": "This policy identifies ACLs which allows traffic on all protocols. A network access control list (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. By default, ACL allows all inbound and outbound IPv4 traffic and, if applicable, IPv6 traffic. Outbound rules that allow unrestricted traffic to the internet can be a security risk. As a best practice, it is recommended to configure ACLs to restrict traffic on authorized protocols.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ec2networkacl",
                                "cloudformation"
                            ]
                        }
                    ],
                    "status": "enable"
                },
                {
                    "masterTestId": "TEST_RDS_9",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(rds.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0122-CFR",
                            "eval": "data.rule.rds_encrypt_key",
                            "message": "data.rule.rds_encrypt_key_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
                            "remediationFunction": "PR_AWS_0122_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS RDS database not encrypted using Customer Managed Key",
                    "description": "TThis policy identifies RDS databases that are encrypted with default KMS keys and not with customer managed keys. As a best practice, use customer managed keys to encrypt the data on your RDS databases and maintain control of your keys and data on sensitive workloads.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "rds",
                                "cloudformation"
                            ]
                        }
                    ],
                    "status": "enable"
                },
                {
                    "masterTestId": "TEST_RDS_10",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(rds.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0123-CFR",
                            "eval": "data.rule.rds_instance_event",
                            "message": "data.rule.rds_instance_event_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
                            "remediationFunction": "PR_AWS_0123_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS RDS event subscription disabled for DB instance",
                    "description": "This policy identifies RDS event subscriptions for which DB instance event subscription is disabled. You can create an Amazon RDS event notification subscription so that you can be notified when an event occurs for a given DB instance.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "rds",
                                "cloudformation"
                            ]
                        }
                    ],
                    "status": "enable"
                },
                {
                    "masterTestId": "TEST_RDS_11",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(rds.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0124-CFR",
                            "eval": "data.rule.rds_secgroup_event",
                            "message": "data.rule.rds_secgroup_event_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
                            "remediationFunction": "PR_AWS_0124_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS RDS event subscription disabled for DB security groups",
                    "description": "This policy identifies RDS event subscriptions for which DB security groups event subscription is disabled. You can create an Amazon RDS event notification subscription so that you can be notified when an event occurs for given DB security groups.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "rds",
                                "cloudformation"
                            ]
                        }
                    ],
                    "status": "enable"
                },
                {
                    "masterTestId": "TEST_S3_9",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(s3.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0144-CFR",
                            "eval": "data.rule.s3_cloudtrail",
                            "message": "data.rule.s3_cloudtrail_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
                            "remediationFunction": "PR_AWS_0144_CFR.py"
                        }
                    ],
                    "severity": "low",
                    "title": "AWS S3 CloudTrail buckets for which access logging is disabled",
                    "description": "This policy identifies S3 CloudTrail buckets for which access is disabled.S3 Bucket access logging generates access records for each request made to your S3 bucket. An access log record contains information such as the request type, the resources specified in the request worked, and the time and date the request was processed. It is recommended that bucket access logging be enabled on the CloudTrail S3 bucket",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "s3",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_S3_10",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(s3.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0147-CFR",
                            "eval": "data.rule.s3_public_acl",
                            "message": "data.rule.s3_public_acl_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
                            "remediationFunction": "PR_AWS_0147_CFR.py"
                        }
                    ],
                    "severity": "low",
                    "title": "AWS S3 bucket has global view ACL permissions enabled.",
                    "description": "This policy determines if any S3 bucket(s) has Global View ACL permissions enabled for the All Users group. These permissions allow external resources to see the permission settings associated to the object.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "s3",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_S3_11",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(s3.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0149-CFR",
                            "eval": "data.rule.s3_auth_acl",
                            "message": "data.rule.s3_auth_acl_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
                            "remediationFunction": "PR_AWS_0149_CFR.py"
                        }
                    ],
                    "severity": "high",
                    "title": "AWS S3 buckets are accessible to any authenticated user.",
                    "description": "This policy identifies S3 buckets accessible to any authenticated AWS users. Amazon S3 allows customer to store and retrieve any type of content from anywhere in the web. Often, customers have legitimate reasons to expose the S3 bucket to public, for example to host website content. However, these buckets often contain highly sensitive enterprise data which if left accessible to anyone with valid AWS credentials, may result in sensitive data leaks.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "s3",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_S3_12",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(s3.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0150-CFR",
                            "eval": "data.rule.s3_public_access",
                            "message": "data.rule.s3_public_access_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
                            "remediationFunction": "PR_AWS_0150_CFR.py"
                        }
                    ],
                    "severity": "high",
                    "title": "AWS S3 buckets are accessible to public",
                    "description": "This policy identifies S3 buckets which are publicly accessible. Amazon S3 allows customers to store and retrieve any type of content from anywhere in the web. Often, customers have legitimate reasons to expose the S3 bucket to public, for example, to host website content. However, these buckets often contain highly sensitive enterprise data which if left open to public may result in sensitive data leaks.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "s3",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_S3_13",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(s3.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0151-CFR",
                            "eval": "data.rule.s3_encryption",
                            "message": "data.rule.s3_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html",
                            "remediationFunction": "PR_AWS_0151_CFR.py"
                        }
                    ],
                    "severity": "low",
                    "title": "AWS S3 buckets do not have server side encryption.",
                    "description": "Customers can protect the data in S3 buckets using the AWS server-side encryption. If the server-side encryption is not turned on for S3 buckets with sensitive data, in the event of a data breach, malicious users can gain access to the data.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "s3",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EC2_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ec2.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0045-CFR",
                            "eval": "data.rule.ec2_no_vpc",
                            "message": "data.rule.ec2_no_vpc_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html",
                            "remediationFunction": "PR_AWS_0045_CFR.py"
                        }
                    ],
                    "severity": "high",
                    "title": "AWS EC2 instance is not configured with VPC",
                    "description": "This policy identifies the EC2 instances which are still using EC2 Classic. There are no VPCs deployed any EC2 instances will be running on AWS EC2 Classic. Deploying VPCs will enable you to leverage enhanced infrastructure security controls.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ec2",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EC2_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ec2.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0046-CFR",
                            "eval": "data.rule.ec2_public_ip",
                            "message": "data.rule.ec2_public_ip_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html",
                            "remediationFunction": "PR_AWS_0046_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EC2 instances with Public IP and associated with Security Groups have Internet Access",
                    "description": "This policy identifies AWS EC2 instances with Public IP and associated with Security Groups have Internet Access. EC2 instance receives a public IP address when launched in a default VPC security group (A security group acts as a virtual firewall for your instance to control inbound and outbound traffic.) and we don't assign a public IP address to instances launched in a non-default subnet. Therefore it's a best practice to ensure that there are no EC2 instances with Public IP that are associated with Security Groups which have Internet Access.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ec2",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CONFIG_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(config.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0031-CFR",
                            "eval": "data.rule.config_recorder",
                            "message": "data.rule.config_recorder_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html",
                            "remediationFunction": "PR_AWS_0031_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Config Recording is disabled",
                    "description": "AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. AWS config uses configuration recorder to detect changes in your resource configurations and capture these changes as configuration items. It continuously monitors and records your AWS resource configurations and allows you to automate the evaluation of recorded configurations against desired configurations. This policy generates alerts when AWS Config recorder is not enabled.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF",
                                "SOC 2"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CONFIG_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(config.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0033-CFR",
                            "eval": "data.rule.config_all_resource",
                            "message": "data.rule.config_all_resource_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html",
                            "remediationFunction": "PR_AWS_0033_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Config must record all possible resources",
                    "description": "This policy identifies resources for which AWS Config recording is enabled but recording for all possible resources are disabled. AWS Config provides an inventory of your AWS resources and a history of configuration changes to these resources. You can use AWS Config to define rules that evaluate these configurations for compliance. Hence, it is important to enable this feature.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF",
                                "SOC 2"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_API_GATEWAY_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(api_gateway.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0202-CFR",
                            "eval": "data.rule.gateway_private",
                            "message": "data.rule.gateway_private_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html",
                            "remediationFunction": "PR_AWS_0202_CFR.py"
                        }
                    ],
                    "severity": "High",
                    "title": "API Gateway should have API Endpoint type as private and not exposed to internet",
                    "description": "Ensure that the Api endpoint type in api gateway is set to private and Is not exposed to the public internet",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_API_GATEWAY_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(api_gateway.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0203-CFR",
                            "eval": "data.rule.gateway_validate_parameter",
                            "message": "data.rule.gateway_validate_parameter_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html",
                            "remediationFunction": "PR_AWS_0203_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS API gateway request parameter is not validated",
                    "description": "This policy identifies the AWS API gateways for with the request parameters are not validated. It is recommended to validate the request parameters in the URI, query string, and headers of an incoming request to focus on the validation efforts specific to your application.\n",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_API_GATEWAY_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(api_gateway.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0204-CFR",
                            "eval": "data.rule.gateway_request_authorizer",
                            "message": "data.rule.gateway_request_authorizer_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html",
                            "remediationFunction": "PR_AWS_0204_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS API gateway request authorization is not set",
                    "description": "This policy identifies AWS API Gateways of protocol type REST for which the request authorisation is not set. The method request for API gateways takes the client input that is passed to the back end through the integration request. It is recommended to add authorization type to each of the method to add a layer of protection.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CODE_DEPLOY_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(code_deploy.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0205-CFR",
                            "eval": "data.rule.deploy_compute_platform",
                            "message": "data.rule.deploy_compute_platform_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html#cfn-codedeploy-application-computeplatform",
                            "remediationFunction": "PR_AWS_0205_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CodeDeploy application compute platform must be ECS or Lambda",
                    "description": "AWS CodeDeploy application compute platform must be ECS or Lambda",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CODE_PIPELINE_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(code_pipeline.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0206-CFR",
                            "eval": "data.rule.deploy_compute_platform",
                            "message": "data.rule.deploy_compute_platform_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html#cfn-codedeploy-application-computeplatform",
                            "remediationFunction": "PR_AWS_0206_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Code Pipeline Encryption at rest with customer-managed key (CMK) should be enabled",
                    "description": "The type of encryption key When creating or updating a pipeline, the value must be cmk(customer-managed key)",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_DMS_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dms.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0207-CFR",
                            "eval": "data.rule.dms_endpoint",
                            "message": "data.rule.dms_endpoint_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.amazonaws.cn/en_us/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-enginename",
                            "remediationFunction": "PR_AWS_0207_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure DMS endpoints are supporting SSL configuration",
                    "description": "This policy identifies Database Migration Service (DMS) endpoints that are not configured with SSL to encrypt connections for source and target endpoints. It is recommended to use SSL connection for source and target endpoints; enforcing SSL connections help protect against 'man in the middle' attacks by encrypting the data stream between endpoint connections.\n\nNOTE: Not all databases use SSL in the same way. An Amazon Redshift endpoint already uses an SSL connection and does not require an SSL connection set up by AWS DMS. So there are some exlcusions included in policy RQL to report only those endpoints which can be configured using DMS SSL feature. \n\nFor more details:\nhttps://docs.aws.amazon.com/dms/latest/userguide/CHAP_Security.html#CHAP_Security.SSL",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECR_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ecr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0208-CFR",
                            "eval": "data.rule.ecr_imagetag",
                            "message": "data.rule.ecr_imagetag_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability",
                            "remediationFunction": "PR_AWS_0208_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure ECR image tags are immutable",
                    "description": "Amazon ECR supports immutable tags, preventing image tags from being overwritten. In the past, ECR tags could have been overwritten, this could be overcome by requiring users to uniquely identify an image using a naming convention.Tag Immutability enables users can rely on the descriptive tags of an image as a mechanism to track and uniquely identify images. By setting an image tag as immutable, developers can use the tag to correlate the deployed image version with the build that produced the image.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECR_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ecr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0209-CFR",
                            "eval": "data.rule.ecr_encryption",
                            "message": "data.rule.ecr_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability",
                            "remediationFunction": "PR_AWS_0209_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure ECR repositories are encrypted",
                    "description": "Make sure EncryptionType is present in ECR EncryptionConfiguration To increase control of the encryption and control the management of factors like key rotation",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0210-CFR",
                            "eval": "data.rule.ecs_root_filesystem",
                            "message": "data.rule.ecs_root_filesystem_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html",
                            "remediationFunction": "PR_AWS_0210_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ECS Task Definition readonlyRootFilesystem Not Enabled",
                    "description": "It is recommended that readonlyRootFilesystem is enabled for AWS ECS task definition. Please make sure your 'ContainerDefinitions' template has 'ReadonlyRootFilesystem' and is set to 'true'.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_5",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0211-CFR",
                            "eval": "data.rule.ecs_resource_limit",
                            "message": "data.rule.ecs_resource_limit_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html",
                            "remediationFunction": "PR_AWS_0211_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ECS task definition resource limits not set.",
                    "description": "It is recommended that resource limits are set for AWS ECS task definition. Please make sure attributes 'Cpu' or 'Memory' exists and its value is not set to 0 under 'TaskDefinition' or 'ContainerDefinitions'.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_6",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0212-CFR",
                            "eval": "data.rule.ecs_logging",
                            "message": "data.rule.ecs_logging_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html",
                            "remediationFunction": "PR_AWS_0212_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ECS task definition logging not enabled.",
                    "description": "It is recommended that logging is enabled for AWS ECS task definition. Please make sure your 'TaskDefinition' template has 'LogConfiguration' and 'LogDriver' configured.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EKS_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(eks.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0213-CFR",
                            "eval": "data.rule.eks_version",
                            "message": "data.rule.eks_version_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html",
                            "remediationFunction": "PR_AWS_0213_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EKS unsupported Master node version.",
                    "description": "AWS EKS unsupported Master node version..",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "eks",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTICACHE_5",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elasticache.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0214-CFR",
                            "eval": "data.rule.cache_ksm_key",
                            "message": "data.rule.cache_ksm_key_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html",
                            "remediationFunction": "PR_AWS_0214_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure that ElastiCache replication Group (Redis) are encrypted at rest with customer managed CMK key",
                    "description": "This policy identifies ElastiCache Redis clusters which have in-transit encryption disabled. It is highly recommended to implement in-transit encryption in order to protect data from unauthorized access as it travels through the network, between clients and cache servers. Enabling data encryption in-transit helps prevent unauthorized users from reading sensitive data between your Redis clusters and their associated cache storage systems.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTICACHE_6",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elasticache.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0215-CFR",
                            "eval": "data.rule.cache_default_sg",
                            "message": "data.rule.cache_default_sg_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html",
                            "remediationFunction": "PR_AWS_0215_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure 'default' value is not used on Security Group setting for Redis cache engines",
                    "description": "Ensure 'default' value is not used on Security Group setting for Redis cache engines",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTIC_SEARCH_7",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0216-CFR",
                            "eval": "data.rule.esearch_node_encryption",
                            "message": "data.rule.esearch_node_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
                            "remediationFunction": "PR_AWS_0216_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure node-to-node encryption is enabled on each ElasticSearch Domain",
                    "description": "Ensure that node-to-node encryption feature is enabled for your AWS ElasticSearch domains (clusters) in order to add an extra layer of data protection on top of the existing ES security features such as HTTPS client to cluster encryption and data-at-rest encryption, and meet strict compliance requirements. The ElasticSearch node-to-node encryption capability provides the additional layer of security by implementing Transport Layer Security (TLS) for all communications between the nodes provisioned within the cluster. The feature ensures that any data sent to your AWS ElasticSearch domain over HTTPS remains encrypted in transit while it is being distributed and replicated between the nodes.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "NIST 800"
                            ],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_12",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0217-CFR",
                            "eval": "data.rule.elb_v2_listener_ssl",
                            "message": "data.rule.elb_v2_listener_ssl_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html",
                            "remediationFunction": "PR_AWS_0217_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer V2 (ELBV2) with listener TLS/SSL disabled",
                    "description": "This policy identifies Elastic Load Balancer V2 (ELBV2) which have listener TLS/SSL disabled. As Load Balancers will be handling all incoming requests and routing the traffic accordingly; The listeners on the load balancers should always receive traffic over secure channel with a valid SSL certificate configured.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EMR_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(emr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0218-CFR",
                            "eval": "data.rule.emr_security",
                            "message": "data.rule.emr_security_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-securityconfiguration",
                            "remediationFunction": "PR_AWS_0218_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EMR cluster is not configured with security configuration",
                    "description": "This policy identifies EMR clusters which are not configured with security configuration. With Amazon EMR release version 4.8.0 or later, you can use security configurations to configure data encryption, Kerberos authentication, and Amazon S3 authorization for EMRFS.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EMR_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(emr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0219-CFR",
                            "eval": "data.rule.emr_kerberos",
                            "message": "data.rule.emr_kerberos_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-securityconfiguration",
                            "remediationFunction": "PR_AWS_0219_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EMR cluster is not configured with Kerberos Authentication",
                    "description": "This policy identifies EMR clusters which are not configured with Kerberos Authentication. Kerberos uses secret-key cryptography to provide strong authentication so that passwords or other credentials aren't sent over the network in an unencrypted format.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EMR_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(emr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0220-CFR",
                            "eval": "data.rule.emr_s3_encryption",
                            "message": "data.rule.emr_s3_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-securityconfiguration",
                            "remediationFunction": "PR_AWS_0220_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EMR cluster is not configured with CSE CMK for data at rest encryption (Amazon S3 with EMRFS)",
                    "description": "This policy identifies EMR clusters which are not configured with Client Side Encryption with Customer Master Keys(CSE CMK) for data at rest encryption of Amazon S3 with EMRFS. As a best practice, use Customer Master Keys (CMK) to encrypt the data in your EMR cluster and ensure full control over your data.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EMR_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(emr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0221-CFR",
                            "eval": "data.rule.emr_local_encryption_cmk",
                            "message": "data.rule.emr_local_encryption_cmk_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-securityconfiguration",
                            "remediationFunction": "PR_AWS_0221_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EMR cluster is not enabled with local disk encryption using CMK",
                    "description": "This policy identifies AWS EMR clusters that are not enabled with local disk encryption using CMK(Customer Managed Key). Applications using the local file system on each cluster instance for intermediate data throughout workloads, where data could be spilled to disk when it overflows memory. With Local disk encryption at place, data at rest can be protected.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EMR_5",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(emr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0222-CFR",
                            "eval": "data.rule.emr_local_encryption",
                            "message": "data.rule.emr_local_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-securityconfiguration",
                            "remediationFunction": "PR_AWS_0222_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EMR cluster is not enabled with local disk encryption",
                    "description": "This policy identifies AWS EMR clusters that are not enabled with local disk encryption. Applications using the local file system on each cluster instance for intermediate data throughout workloads, where data could be spilled to disk when it overflows memory. With Local disk encryption at place, data at rest can be protected.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EMR_6",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(emr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0223-CFR",
                            "eval": "data.rule.emr_rest_encryption",
                            "message": "data.rule.emr_rest_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-securityconfiguration",
                            "remediationFunction": "PR_AWS_0223_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EMR cluster is not enabled with data encryption at rest",
                    "description": "This policy identifies AWS EMR clusters for which data encryption at rest is not enabled. Encryption of data at rest is required to prevent unauthorized users from accessing the sensitive information available on your  EMR clusters and associated storage systems.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EMR_8",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(emr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0225-CFR",
                            "eval": "data.rule.emr_transit_encryption",
                            "message": "data.rule.emr_transit_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-securityconfiguration",
                            "remediationFunction": "PR_AWS_0225_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EMR cluster is not enabled with data encryption in transit",
                    "description": "This policy identifies AWS EMR clusters which are not enabled with data encryption in transit. It is highly recommended to implement in-transit encryption in order to protect data from unauthorized access as it travels through the network, between clients and storage server. Enabling data encryption in-transit helps prevent unauthorized users from reading sensitive data between your EMR clusters and their associated storage systems.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_IAM_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(iam.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0226-CFR",
                            "eval": "data.rule.iam_wildcard_resource",
                            "message": "data.rule.iam_wildcard_resource_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html",
                            "remediationFunction": "PR_AWS_0226_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure no wildcards are specified in IAM policy with 'Resource' section",
                    "description": "Using a wildcard in the Resource element in a role's trust policy would allow any IAM user in an account to access all Resources. This is a significant security gap and can be used to gain access to sensitive data.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_IAM_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(iam.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0227-CFR",
                            "eval": "data.rule.iam_wildcard_action",
                            "message": "data.rule.iam_wildcard_action_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html",
                            "remediationFunction": "PR_AWS_0227_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure no wildcards are specified in IAM policy with 'Action' section",
                    "description": "Using a wildcard in the Action element in a role's trust policy would allow any IAM user in an account to Manage all resources and a user can manipulate data. This is a significant security gap and can be used to gain access to sensitive data.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_IAM_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(iam.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0228-CFR",
                            "eval": "data.rule.iam_wildcard_principal",
                            "message": "data.rule.iam_wildcard_principal_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html",
                            "remediationFunction": "PR_AWS_0228_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure no wildcards are specified in IAM trust-relationship policy with 'Principal' section",
                    "description": "Using a wildcard in the Principal element in a role's trust policy would allow any IAM user in any account to access the role. This is a significant security gap and can be used to gain access to sensitive data.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_IAM_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(iam.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0229-CFR",
                            "eval": "data.rule.iam_resource_format",
                            "message": "data.rule.iam_resource_format_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html",
                            "remediationFunction": "PR_AWS_0229_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure no IAM policy has a resource specified in the following format:'arn:aws:*:*'",
                    "description": "Ensure no IAM policy has a resource specified in the following format:'arn:aws:*:*'",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_IAM_5",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(iam.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0230-CFR",
                            "eval": "data.rule.iam_assume_permission",
                            "message": "data.rule.iam_assume_permission_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html",
                            "remediationFunction": "PR_AWS_0230_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS IAM policy allows assume role permission across all services",
                    "description": "This policy identifies AWS IAM policy which allows assume role permission across all services. Typically, AssumeRole is used if you have multiple accounts and need to access resources from each account then you can create long term credentials in one account and then use temporary security credentials to access all the other accounts by assuming roles in those accounts.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_IAM_6",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(iam.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0231-CFR",
                            "eval": "data.rule.iam_all_traffic",
                            "message": "data.rule.iam_all_traffic_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html",
                            "remediationFunction": "PR_AWS_0231_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS IAM policy is overly permissive to all traffic via condition clause",
                    "description": "This policy identifies IAM policies that have a policy that is overly permissive to all traffic via condition clause. If any IAM policy statement with a condition containing 0.0.0.0/0 or ::/0, it allows all traffic to resources attached to that IAM policy. It is highly recommended to have the least privileged IAM policy to protect the data leakage and unauthorized access.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_IAM_7",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(iam.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0232-CFR",
                            "eval": "data.rule.iam_administrative_privileges",
                            "message": "data.rule.iam_administrative_privileges_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html",
                            "remediationFunction": "PR_AWS_0232_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS IAM policy allows full administrative privileges",
                    "description": "This policy identifies IAM policies with full administrative privileges. IAM policies are the means by which privileges are granted to users, groups, or roles. It is recommended and considered a standard security advice to grant least privilege like granting only the permissions required to perform a task. Determine what users need to do and then craft policies for them that let the users perform only those tasks, instead of allowing full administrative privileges.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_KINESIS_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(kinesis.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0233-CFR",
                            "eval": "data.rule.kinesis_encryption",
                            "message": "data.rule.kinesis_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html",
                            "remediationFunction": "PR_AWS_0233_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Kinesis streams are not encrypted using Server Side Encryption",
                    "description": "This Policy identifies the AWS Kinesis streams which are not encrypted using Server Side Encryption. Server Side Encryption is used to encrypt your sensitive data before it is written to the Kinesis stream storage layer and decrypted after it is retrieved from storage.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_KINESIS_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(kinesis.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0234-CFR",
                            "eval": "data.rule.kinesis_encryption_kms",
                            "message": "data.rule.kinesis_encryption_kms_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html",
                            "remediationFunction": "PR_AWS_0234_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Kinesis streams encryption using default KMS keys instead of Customer's Managed Master Keys",
                    "description": "This policy identifies the AWS Kinesis streams which are encrypted with default KMS keys and not with Master Keys managed by Customer. It is a best practice to use customer managed Master Keys to encrypt your Amazon Kinesis streams data. It gives you full control over the encrypted data.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_KMS_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(kms.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0235-CFR",
                            "eval": "data.rule.kms_key_rotation",
                            "message": "data.rule.kms_key_rotation_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html",
                            "remediationFunction": "PR_AWS_0235_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Customer Master Key (CMK) rotation is not enabled",
                    "description": "This policy identifies Customer Master Keys (CMKs) that are not enabled with key rotation. AWS KMS (Key Management Service) allows customers to create master keys to encrypt sensitive data in different services. As a security best practice, it is important to rotate the keys periodically so that if the keys are compromised, the data in the underlying service is still secure with the new keys.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_KMS_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(kms.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0236-CFR",
                            "eval": "data.rule.kms_key_state",
                            "message": "data.rule.kms_key_state_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html",
                            "remediationFunction": "PR_AWS_0236_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS KMS Customer Managed Key not in use",
                    "description": "This policy identifies KMS Customer Managed Keys(CMKs) which are not usable. When you create a CMK, it is enabled by default. If you disable a CMK or schedule it for deletion makes it unusable, it cannot be used to encrypt or decrypt data and AWS KMS does not rotate the backing keys until you re-enable it.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_MQ_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(mq.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0237-CFR",
                            "eval": "data.rule.mq_publicly_accessible",
                            "message": "data.rule.mq_publicly_accessible_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-publiclyaccessible",
                            "remediationFunction": "PR_AWS_0237_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS MQ is publicly accessible",
                    "description": "This policy identifies the AWS MQ brokers which are publicly accessible. It is advisable to use MQ brokers privately only from within your AWS Virtual Private Cloud (VPC). Ensure that the AWS MQ brokers provisioned in your AWS account are not publicly accessible from the Internet to avoid sensitive data exposure and minimize security risks.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_MSK_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(msk.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0239-CFR",
                            "eval": "data.rule.msk_encryption_at_rest_cmk",
                            "message": "data.rule.msk_encryption_at_rest_cmk_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html",
                            "remediationFunction": "PR_AWS_0239_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Use KMS Customer Master Keys for AWS MSK Clusters",
                    "description": "Ensure that Amazon Managed Streaming for Kafka (MSK) clusters are using AWS KMS Customer Master Keys (CMKs) instead of AWS managed-keys (i.e. default keys) for data encryption, in order to have a fine-grained control over data-at-rest encryption/decryption process and meet compliance requirements. MSK is a fully managed AWS service that enables you to migrate, build and run real-time streaming applications on Apache Kafka.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_MSK_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(msk.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0240-CFR",
                            "eval": "data.rule.msk_in_transit_encryption",
                            "message": "data.rule.msk_in_transit_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html",
                            "remediationFunction": "PR_AWS_0240_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure data is Encrypted in transit (TLS)",
                    "description": "Ensure data is Encrypted in transit (TLS)",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_MSK_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(msk.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0241-CFR",
                            "eval": "data.rule.msk_in_transit_encryption_tls",
                            "message": "data.rule.msk_in_transit_encryption_tls_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html",
                            "remediationFunction": "PR_AWS_0241_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure client authentication is enabled with TLS (mutual TLS authentication)",
                    "description": "Enable TLS by setting EncryptionInfo.EncryptionInTransit.ClientBroker value to 'TLS'. to provide trasport layes security to MSK instance",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_MSK_5",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(msk.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0242-CFR",
                            "eval": "data.rule.msk_vpc",
                            "message": "data.rule.msk_vpc_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html",
                            "remediationFunction": "PR_AWS_0242_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure MSK cluster is setup in GS VPC",
                    "description": "To Add MKS Cluster in gs VPC,Specify exactly two subnets if you are using the US West (N. California) Region. For other Regions where Amazon MSK is available, you can specify either two or three subnets. The subnets that you specify must be in distinct Availability Zones. When you create a cluster, Amazon MSK distributes the broker nodes evenly across the subnets that you specify.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORKACL_7",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ec2networkacl.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0243-CFR",
                            "eval": "data.rule.acl_unrestricted_admin_port",
                            "message": "data.rule.acl_unrestricted_admin_port_err",
                            "remediationDescription": "",
                            "remediationFunction": "PR_AWS_0243_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Unrestricted Inbound Traffic on Remote Server Administration Ports",
                    "description": "Check your Amazon VPC Network Access Control Lists (NACLs) for inbound/ingress rules that allow unrestricted traffic (i.e. 0.0.0.0/0) on TCP ports 22 (SSH) and 3389 (RDP) and limit access to trusted IP addresses or IP ranges only in order to implement the Principle of Least Privilege (POLP) and reduce the attack surface at the subnet level.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ec2networkacl",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RDS_12",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(rds.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0244-CFR",
                            "eval": "data.rule.rds_cluster_retention",
                            "message": "data.rule.rds_cluster_retention_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html , https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html",
                            "remediationFunction": "PR_AWS_0244_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS RDS cluster retention policy less than 7 days",
                    "description": "RDS cluster Retention Policies for Backups are an important part of your DR/BCP strategy. Recovering data from catastrophic failures, malicious attacks, or corruption often requires a several day window of potentially good backup material to leverage. As such, the best practice is to ensure your RDS clusters are retaining at least 7 days of backups, if not more (up to a maximum of 35).",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "rds",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ROUTE_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(route53.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0245-CFR",
                            "eval": "data.rule.route_healthcheck_disable",
                            "message": "data.rule.route_healthcheck_disable_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html",
                            "remediationFunction": "PR_AWS_0245_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Route53 DNS evaluateTargetHealth is enabled",
                    "description": "The EvaluateTargetHealth of Route53 is not enabled, an alias record can't inherits the health of the referenced AWS resource, such as an ELB load balancer or another record in the hosted zone.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "route53",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_S3_14",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(s3.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0246-CFR",
                            "eval": "data.rule.s3_cors",
                            "message": "data.rule.s3_cors_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#aws-properties-s3-bucket--seealso\nAllowedHeaders should not have default value '*', define value more specific like Content-Type, x-requested-with etc. and AllowedMethods should be 'GET', 'POST', 'PUT', 'PATHCH', 'DELETE' or 'OPTIONS'",
                            "remediationFunction": "PR_AWS_0246_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure S3 hosted sites supported hardened CORS",
                    "description": "Ensure that AllowedOrigins, AllowedMethods should not be set to *. this allows all cross site users to access s3 bucket and they have permission to manipulate data",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "S3",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SAGEMAKER_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sagemaker.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0247-CFR",
                            "eval": "data.rule.sagemaker_encryption_kms",
                            "message": "data.rule.sagemaker_encryption_kms_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html\nprovicde KMSKeyId using KMS or CMK or static value starts with 'arn:'",
                            "remediationFunction": "PR_AWS_0247_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS SageMaker notebook instance not configured with data encryption at rest using KMS key",
                    "description": "This policy identifies SageMaker notebook instances that are not configured with data encryption at rest using the AWS managed KMS key. It is recommended to implement encryption at rest in order to protect data from unauthorized entities.\n\nFor more details:\nhttps://docs.aws.amazon.com/sagemaker/latest/dg/encryption-at-rest.html",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "sagemaker",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SAGEMAKER_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sagemaker.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0248-CFR",
                            "eval": "data.rule.sagemaker_rootaccess_enabled",
                            "message": "data.rule.sagemaker_rootaccess_enabled_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html\nRootAccess should be disabled in properties to make sagemaker secure from unrestricted access",
                            "remediationFunction": "PR_AWS_0248_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS SageMaker notebook instance with root access enabled",
                    "description": "This policy identifies the SageMaker notebook instances which are enabled with root access. Root access means having administrator privileges, users with root access can access and edit all files on the compute instance, including system-critical files. Removing root access prevents notebook users from deleting system-level software, installing new software, and modifying essential environment components.\nNOTE: Lifecycle configurations need root access to be able to set up a notebook instance. Because of this, lifecycle configurations associated with a notebook instance always run with root access even if you disable root access for users.\n\nFor more details:\nhttps://docs.aws.amazon.com/sagemaker/latest/dg/nbi-root-access.html",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "sagemaker",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SAGEMAKER_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sagemaker.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0249-CFR",
                            "eval": "data.rule.sagemaker_direct_internet_access_enabled",
                            "message": "data.rule.sagemaker_direct_internet_access_enabled_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html\nDirectInternetAccess should be disabled in properties to restrict direct access from the internet.",
                            "remediationFunction": "PR_AWS_0249_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS SageMaker notebook instance configured with direct internet access feature",
                    "description": "This policy identifies SageMaker notebook instances that are configured with direct internet access feature. If AWS SageMaker notebook instances are configured with direct internet access feature, any machine outside the VPC can establish a connection to these instances, which provides an additional avenue for unauthorized access to data and the opportunity for malicious activity.\n\nFor more details:\nhttps://docs.aws.amazon.com/sagemaker/latest/dg/appendix-notebook-and-internet-access.html",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "sagemaker",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SAGEMAKER_4",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sagemaker.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0250-CFR",
                            "eval": "data.rule.sagemaker_vpc",
                            "message": "data.rule.sagemaker_vpc_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html",
                            "remediationFunction": "PR_AWS_0250_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS SageMaker notebook instance is not placed in VPC",
                    "description": "This policy identifies SageMaker notebook instances that are not placed inside a VPC. It is recommended to place your SageMaker inside VPC so that VPC-only resources able to access your SageMaker data, which cannot be accessed outside a VPC network.\n\nFor more details:\nhttps://docs.aws.amazon.com/sagemaker/latest/dg/process-vpc.html",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "sagemaker",
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_21",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0251-CFR",
                            "eval": "data.rule.port_69",
                            "message": "data.rule.port_69_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html",
                            "remediationFunction": "PR_AWS_0251_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Security Groups allow internet traffic from internet to Trivial File Transfer Protocol Port (69)",
                    "description": "This policy identifies the security groups which are exposing Trivial File Transfer Protocol Port (69) to the internet. It is recommended that Global permission to access the well known services Trivial File Transfer Protocol Port (69) should not be allowed in a security group.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTIC_SEARCH_8",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0252-CFR",
                            "eval": "data.rule.esearch_enforce_https",
                            "message": "data.rule.esearch_enforce_https_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-domainendpointoptions.html#cfn-elasticsearch-domain-domainendpointoptions-enforcehttps and define EnforceHTTPS value of DomainEndpointOptions true.",
                            "remediationFunction": "PR_AWS_0252_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elasticsearch domain is not configured with HTTPS",
                    "description": "This policy identifies Elasticsearch domains that are not configured with HTTPS. Amazon Elasticsearch domains allow all traffic to be submitted over HTTPS, ensuring all communications between application and domain are encrypted. It is recommended to enable HTTPS so that all communication between the application and all data access goes across an encrypted communication channel to eliminate man-in-the-middle attacks",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTIC_SEARCH_9",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0253-CFR",
                            "eval": "data.rule.esearch_encrypt_kms",
                            "message": "data.rule.esearch_encrypt_kms_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-encryptionatrestoptions.html#cfn-elasticsearch-domain-encryptionatrestoptions-kmskeyid and define the value of KmsKeyId in EncryptionAtRestOptions of the elasticsearch domain",
                            "remediationFunction": "PR_AWS_0253_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Elasticsearch Domain should not have Encrytion using AWS Managed Keys",
                    "description": "Ensure that your Amazon ElasticSearch (ES) domains are encrypted with KMS Customer Master Keys (CMKs) instead of AWS managed-keys (default keys used by the ES service when there are no customer keys defined) in order to have more granular control over the data-at-rest encryption/decryption process and to meet compliance requirements.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_7",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0254-CFR",
                            "eval": "data.rule.ecs_transit_enabled",
                            "message": "data.rule.ecs_transit_enabled_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-efsvolumeconfiguration.html#cfn-ecs-taskdefinition-efsvolumeconfiguration-transitencryption and enable TransitEncryption in the volume.EFSVolumeConfiguration",
                            "remediationFunction": "PR_AWS_0254_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure EFS volumes in ECS task definitions have encryption in transit enabled",
                    "description": "ECS task definitions that have volumes using EFS configuration should explicitly enable in transit encryption to prevent the risk of data loss due to interception.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECR_3",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(ecr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0255-CFR",
                            "eval": "data.rule.ecr_scan",
                            "message": "data.rule.ecr_scan_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-imagescanningconfiguration.html#cfn-ecr-repository-imagescanningconfiguration-scanonpush and enable ScanOnPush from ImageScanningConfiguration.",
                            "remediationFunction": "PR_AWS_0255_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure ECR image scan on push is enabled",
                    "description": "Amazon ECR is a fully managed container registry used to store, manage and deploy container images. ECR Image Scanning assesses and identifies operating system vulnerabilities. Using automated image scans you can ensure container image vulnerabilities are found before getting pushed to production. ECR APIs notify if vulnerabilities were found when a scan completes",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_AUTOSCALING_1",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(autoscaling.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0256-CFR",
                            "eval": "data.rule.as_volume_encrypted",
                            "message": "data.rule.as_volume_encrypted_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-encrypted and none of the BlockDeviceMappings should desable Encrypted of Ebs",
                            "remediationFunction": "PR_AWS_0256_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure EBS volumes have encrypted launch configurations",
                    "description": "Amazon Elastic Block Store (EBS) volumes allow you to create encrypted launch configurations when creating EC2 instances and auto scaling. When the entire EBS volume is encrypted, data stored at rest on the volume, disk I/O, snapshots created from the volume, and data in-transit between EBS and EC2 are all encrypted.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ALL_5",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(all.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0257-CFR",
                            "eval": "data.rule.dax_encrypt",
                            "message": "data.rule.dax_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dax-cluster-ssespecification.html and encryption at rest should be enabled by setting value of SSEEnabled true in SSESpecification",
                            "remediationFunction": "PR_AWS_0257_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "IEnsure DAX is securely encrypted at rest",
                    "description": "Amazon DynamoDB Accelerator (DAX) encryption at rest provides an additional layer of data protection, helping secure your data from unauthorized access to underlying storage. With encryption at rest the data persisted by DAX on disk is encrypted using 256-bit Advanced Encryption Standard (AES-256). DAX writes data to disk as part of propagating changes from the primary node to read replicas. DAX encryption at rest automatically integrates with AWS KMS for managing the single service default key used to encrypt clusters.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_DYNAMO_DB_2",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dynamodb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0258-CFR",
                            "eval": "data.rule.dynamodb_PITR_enable",
                            "message": "data.rule.dynamodb_PITR_enable_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html, enable PointInTimeRecoveryEnabled in PointInTimeRecoverySpecification to provide continues backup",
                            "remediationFunction": "PR_AWS_0258_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS DynamoDB encrypted using AWS owned CMK instead of AWS managed CMK",
                    "description": "DynamoDB Point-In-Time Recovery (PITR) is an automatic backup service for DynamoDB table data that helps protect your DynamoDB tables from accidental write or delete operations. Once enabled, PITR provides continuous backups that can be controlled using various programmatic parameters. PITR can also be used to restore table data from any point in time during the last 35 days, as well as any incremental backups of DynamoDB tables",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ALL_6",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(all.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0259-CFR",
                            "eval": "data.rule.qldb_permission_mode",
                            "message": "data.rule.qldb_permission_mode_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-ledger.html#cfn-qldb-ledger-permissionsmode, and provide PermissionsMode value 'STANDARD'",
                            "remediationFunction": "PR_AWS_0259_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure QLDB ledger permissions mode is set to STANDARD",
                    "description": "In Amazon Quantum Ledger Database define PermissionsMode value to STANDARD permissions mode that enables access control with finer granularity for ledgers, tables, and PartiQL commands",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_GROUP_22",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitygroup.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0260-CFR",
                            "eval": "data.rule.sg_tag",
                            "message": "data.rule.sg_tag_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-tags, provide security group tags",
                            "remediationFunction": "PR_AWS_0260_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure AWS resources that support tags have Tags",
                    "description": "Many different types of AWS resources support tags. Tags allow you to add metadata to a resource to help identify ownership, perform cost / billing analysis, and to enrich a resource with other valuable information, such as descriptions and environment names. While there are many ways that tags can be used, we recommend you follow a tagging practice.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RED_SHIFT_6",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(redshift.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0261-CFR",
                            "eval": "data.rule.redshift_allow_version_upgrade",
                            "message": "data.rule.redshift_allow_version_upgrade_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-allowversionupgrade, set value of AllowVersionUpgrade to when new version of redshift engine released then you can easily request that service apply upgrade during maintainace window.",
                            "remediationFunction": "PR_AWS_0261_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Redshift cluster allow version upgrade by default",
                    "description": "This policy identifies AWS Redshift instances which has not enabled AllowVersionUpgrade. major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. When a new major version of the Amazon Redshift engine is released, you can request that the service automatically apply upgrades during the maintenance window to the Amazon Redshift engine that is running on your cluster.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_RDS_13",
                    "masterSnapshotId": [
                        "CFR_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(rds.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-0262-CFR",
                            "eval": "data.rule.rds_cluster_deletion_protection",
                            "message": "data.rule.rds_cluster_deletion_protection_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented at this URL: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-deletionprotection, also enable DeletionProtection to prevent accidental deletion of the resource.",
                            "remediationFunction": "PR_AWS_0262_CFR.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure RDS clusters and instances have deletion protection enabled",
                    "description": "This rule Checks if an Amazon Relational Database Service (Amazon RDS) cluster has deletion protection enabled",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudformation"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}