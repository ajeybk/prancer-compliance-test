{
    "contentVersion": "1.0.0.0",
    "fileType": "mastertest",
    "masterSnapshot": "mastersnapshot_aws_cloud",
    "notification": [],
    "testSet": [
        {
            "masterTestName": "test3",
            "version": "0.1",
            "cases": [
                {
                    "masterTestId": "TEST_KMS_1",
                    "type": "rego",
                    "rule": "file(kms.rego)",
                    "masterSnapshotId": [
                        "TEST_KMS"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-KMS-001",
                            "eval": "data.rule.kms_key_rotation",
                            "message": "data.rule.kms_key_rotation_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_KMS_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Customer Master Key (CMK) rotation is not enabled",
                    "description": "This policy identifies Customer Master Keys (CMKs) that are not enabled with key rotation. AWS KMS (Key Management Service) allows customers to create master keys to encrypt sensitive data in different services. As a security best practice, it is important to rotate the keys periodically so that if the keys are compromised, the data in the underlying service is still secure with the new keys.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "kms"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_KMS_2",
                    "type": "rego",
                    "rule": "file(kms.rego)",
                    "masterSnapshotId": [
                        "TEST_KMS"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-KMS-002",
                            "eval": "data.rule.kms_key_state",
                            "message": "data.rule.kms_key_state_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_KMS_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS KMS Customer Managed Key not in use",
                    "description": "This policy identifies KMS Customer Managed Keys(CMKs) which are not usable. When you create a CMK, it is enabled by default. If you disable a CMK or schedule it for deletion makes it unusable, it cannot be used to encrypt or decrypt data and AWS KMS does not rotate the backing keys until you re-enable it.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "kms"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CT_1",
                    "type": "rego",
                    "rule": "file(cloudtrail.rego)",
                    "masterSnapshotId": [
                        "TEST_CT"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-CT-001",
                            "eval": "data.rule.ct_regions",
                            "message": "data.rule.ct_regions_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_CT_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudTrail is not enabled in all regions",
                    "description": "Checks to ensure that CloudTrail is enabled across all regions. AWS CloudTrail is a service that enables governance, compliance, operational risk auditing of the AWS account. It is a compliance and security best practice to turn on CloudTrail across different regions to get a complete audit trail of activities across various services.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudtrail"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CT_2",
                    "type": "rego",
                    "rule": "file(cloudtrail.rego)",
                    "masterSnapshotId": [
                        "TEST_CT"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-CT-002",
                            "eval": "data.rule.ct_log_validation",
                            "message": "data.rule.ct_log_validation_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_CT_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudTrail log validation is not enabled in all regions",
                    "description": "This policy identifies AWS CloudTrails in which log validation is not enabled in all regions. CloudTrail log file validation creates a digitally signed digest file containing a hash of each log that CloudTrail writes to S3. These digest files can be used to determine whether a log file was modified after CloudTrail delivered the log. It is recommended that file validation be enabled on all CloudTrails.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudtrail"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CT_3",
                    "type": "rego",
                    "rule": "file(cloudtrail.rego)",
                    "masterSnapshotId": [
                        "TEST_CT"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-CT-003",
                            "eval": "data.rule.ct_master_key",
                            "message": "data.rule.ct_master_key_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_CT_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS CloudTrail logs are not encrypted using Customer Master Keys (CMKs)",
                    "description": "Checks to ensure that CloudTrail logs are encrypted. AWS CloudTrail is a service that enables governance, compliance, operational risk auditing of the AWS account. It is a compliance and security best practice to encrypt the CloudTrail data since it may contain sensitive information.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudtrail"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_CT_4",
                    "type": "rego",
                    "rule": "file(cloudtrail.rego)",
                    "masterSnapshotId": [
                        "TEST_CT"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-CT-004",
                            "eval": "data.rule.ct_cloudwatch",
                            "message": "data.rule.ct_cloudwatch_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_CT_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "CloudTrail trail is not integrated with CloudWatch Log",
                    "description": "Enabling the CloudTrail trail logs integrated with CloudWatch Logs will enable the real-time as well as historic activity logging. This will further effective monitoring and alarm capability.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloudtrail"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_VPC_1",
                    "type": "rego",
                    "rule": "file(vpc.rego)",
                    "masterSnapshotId": [
                        "TEST_EC2"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-VPC-001",
                            "eval": "data.rule.vpc_subnet_autoip",
                            "message": "data.rule.vpc_subnet_autoip_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_VPC_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS VPC subnets should not allow automatic public IP assignment",
                    "description": "This policy identifies VPC subnets which allow automatic public IP assignment. VPC subnet is a part of the VPC having its own rules for traffic. Assigning the Public IP to the subnet automatically (on launch) can accidentally expose the instances within this subnet to internet and should be edited to 'No' post creation of the Subnet.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "subnet"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_VPC_2",
                    "type": "rego",
                    "rule": "file(vpc.rego)",
                    "masterSnapshotId": [
                        "TEST_EC2"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-VPC-002",
                            "eval": "data.rule.eip_instance_link",
                            "message": "data.rule.eip_instance_link_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_VPC_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure all EIP addresses allocated to a VPC are attached related EC2 instances",
                    "description": "Ensure that a managed Config rule for AWS Elastic IPs (EIPs) attached to EC2 instances launched inside a VPC is created. Config service tracks changes within your AWS resources configuration and saves the recorded data for security and compliance audits",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elastic IP"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_VPC_3",
                    "type": "rego",
                    "rule": "file(vpc.rego)",
                    "masterSnapshotId": [
                        "TEST_EC2"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-VPC-003",
                            "eval": "data.rule.vpc_endpoint_manual_acceptance",
                            "message": "data.rule.vpc_endpoint_manual_acceptance_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_VPC_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure VPC endpoint service is configured for manual acceptance",
                    "description": "AcceptanceRequired Indicates whether requests from service consumers to create an endpoint to your service must be accepted, we recommend you to enable this feature",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "vpc"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_API_GATEWAY_1",
                    "type": "rego",
                    "rule": "file(api_gateway.rego)",
                    "masterSnapshotId": [
                        "TEST_API_GATEWAY_01"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-AG-001",
                            "eval": "data.rule.gateway_private",
                            "message": "data.rule.gateway_private_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_AG_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "API Gateway should have API Endpoint type as private and not exposed to internet",
                    "description": "Ensure that the Api endpoint type in api gateway is set to private and Is not exposed to the public internet",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "api gateway"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_API_GATEWAY_2",
                    "type": "rego",
                    "rule": "file(api_gateway.rego)",
                    "masterSnapshotId": [
                        "TEST_API_GATEWAY_02"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-AG-002",
                            "eval": "data.rule.gateway_validate_parameter",
                            "message": "data.rule.gateway_validate_parameter_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_AG_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS API gateway request parameter is not validated",
                    "description": "This policy identifies the AWS API gateways for with the request parameters are not validated. It is recommended to validate the request parameters in the URI, query string, and headers of an incoming request to focus on the validation efforts specific to your application.\n",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "api gateway"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_API_GATEWAY_3",
                    "type": "rego",
                    "rule": "file(api_gateway.rego)",
                    "masterSnapshotId": [
                        "TEST_API_GATEWAY_01"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-AG-003",
                            "eval": "data.rule.gateway_request_authorizer",
                            "message": "data.rule.gateway_request_authorizer_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_AG_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS API gateway request authorization is not set",
                    "description": "This policy identifies AWS API Gateways of protocol type REST for which the request authorisation is not set. The method request for API gateways takes the client input that is passed to the back end through the integration request. It is recommended to add authorization type to each of the method to add a layer of protection.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "api gateway"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_API_GATEWAY_4",
                    "type": "rego",
                    "rule": "file(api_gateway.rego)",
                    "masterSnapshotId": [
                        "TEST_API_GATEWAY_01"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-AG-004",
                            "eval": "data.rule.gateway_logging_enable",
                            "message": "data.rule.gateway_logging_enable_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_AG_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure that API Gateway has enabled access logging",
                    "description": "Enabling the custom access logging option in API Gateway allows delivery of custom logs to CloudWatch Logs, which can be analyzed using CloudWatch Logs Insights. Using custom domain names in Amazon API Gateway allows insights into requests sent to each custom domain name.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "api gateway"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_API_GATEWAY_5",
                    "type": "rego",
                    "rule": "file(api_gateway.rego)",
                    "masterSnapshotId": [
                        "TEST_API_GATEWAY_01"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-AG-005",
                            "eval": "data.rule.gateway_tracing_enable",
                            "message": "data.rule.gateway_tracing_enable_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_AG_005.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure API Gateway has tracing enabled",
                    "description": "With tracing enabled X-Ray can provide an end-to-end view of an entire HTTP request. You can use this to analyze latencies in APIs and their backend services",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "api gateway"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_API_GATEWAY_6",
                    "type": "rego",
                    "rule": "file(api_gateway.rego)",
                    "masterSnapshotId": [
                        "TEST_API_GATEWAY_03"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-AG-006",
                            "eval": "data.rule.gateway_method_public_access",
                            "message": "data.rule.gateway_method_public_access_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_AG_006.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure API gateway methods are not publicly accessible",
                    "description": "We recommend you configure a custom authorizer OR an API key for every method in the API Gateway.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "api gateway"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_API_GATEWAY_7",
                    "type": "rego",
                    "rule": "file(api_gateway.rego)",
                    "masterSnapshotId": [
                        "TEST_API_GATEWAY_01"
                    ],
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-AG-007",
                            "eval": "data.rule.api_gw_cert",
                            "message": "data.rule.api_gw_cert_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_AG_007.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS API Gateway endpoints without client certificate authentication",
                    "description": "API Gateway can generate an SSL certificate and use its public key in the backend to verify that HTTP requests to your backend system are from API Gateway. This allows your HTTP backend to control and accept only requests originating from Amazon API Gateway, even if the backend is publicly accessible._x005F_x000D_ _x005F_x000D_ Note: Some backend servers may not support SSL client authentication as API Gateway does and could return an SSL certificate error. For a list of incompatible backend servers, see Known Issues. https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-known-issues.html",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "api gateway"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EKS_1",
                    "masterSnapshotId": [
                        "TEST_EKS"
                    ],
                    "type": "rego",
                    "rule": "file(eks.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EKS-001",
                            "eval": "data.rule.eks_multiple_sg",
                            "message": "data.rule.eks_multiple_sg_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EKS_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EKS cluster control plane assigned multiple security groups",
                    "description": "Amazon EKS strongly recommends that you use a dedicated security group for each cluster control plane (one per cluster). This policy checks the number of security groups assigned to your cluster's control plane and alerts if there are more than one.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "eks"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EKS_3",
                    "masterSnapshotId": [
                        "TEST_EKS"
                    ],
                    "type": "rego",
                    "rule": "file(eks.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EKS-003",
                            "eval": "data.rule.eks_encryption_resources",
                            "message": "data.rule.eks_encryption_resources_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-resources' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EKS_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure AWS EKS cluster has secrets encryption enabled",
                    "description": "Secrets in Kubernetes enables managing sensitive information such as passwords and API keys using Kubernetes-native APIs. When creating a secret resource the Kubernetes API server stores it in etcd in a base64 encoded form.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "eks"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EKS_4",
                    "masterSnapshotId": [
                        "TEST_EKS"
                    ],
                    "type": "rego",
                    "rule": "file(eks.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EKS-004",
                            "eval": "data.rule.eks_encryption_kms",
                            "message": "data.rule.eks_encryption_kms_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-provider' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EKS_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Kubernetes secrets are encrypted using CMKs managed in AWS KMS",
                    "description": "Application-layer Secrets Encryption provides an additional layer of security for sensitive data, such as user defined Secrets and Secrets required for the operation of the cluster, such as service account keys, which are all stored in etcd. Using this functionality, you can use a key, that you manage in AWS KMS, to encrypt data at the application layer",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "eks"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTICSEARCH_1",
                    "masterSnapshotId": [
                        "TEST_ELASTICSEARCH"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ES-001",
                            "eval": "data.rule.esearch_vpc",
                            "message": "data.rule.esearch_vpc_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ES_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ElasticSearch cluster not in a VPC",
                    "description": "VPC support for Amazon ES is easy to configure, reliable, and offers an extra layer of security. With VPC support, traffic between other services and Amazon ES stays entirely within the AWS network, isolated from the public Internet. You can manage network access using existing VPC security groups, and you can use AWS Identity and Access Management (IAM) policies for additional protection. VPC support for Amazon ES domains is available at no additional charge.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elasticsearch"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTICSEARCH_2",
                    "masterSnapshotId": [
                        "TEST_ELASTICSEARCH"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ES-002",
                            "eval": "data.rule.esearch_encrypt",
                            "message": "data.rule.esearch_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ES_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elasticsearch domain Encryption for data at rest is disabled",
                    "description": "This policy identifies Elasticsearch domains for which encryption is disabled. Encryption of data at rest is required to prevent unauthorized users from accessing the sensitive information available on your Elasticsearch domains components. This may include all data of file systems, primary and replica indices, log files, memory swap files and automated snapshots. The Elasticsearch uses AWS KMS service to store and manage the encryption keys. It is highly recommended to implement encryption at rest when you are working with production data that have sensitive information, to protect from unauthorized access.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800"
                            ],
                            "service": [
                                "elasticsearch"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTICSEARCH_3",
                    "masterSnapshotId": [
                        "TEST_ELASTICSEARCH"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ES-003",
                            "eval": "data.rule.esearch_master",
                            "message": "data.rule.esearch_master_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ES_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elasticsearch domain has Dedicated master set to disabled",
                    "description": "This policy identifies Elasticsearch domains for which Dedicated master is disabled in your AWS account. If dedicated master nodes are provided those handle the management tasks and cluster nodes can easily manage index and search requests from different types of workload and make them more resilient in production. Dedicated master nodes improve environmental stability by freeing all the management tasks from the cluster data nodes.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elasticsearch"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTICSEARCH_4",
                    "masterSnapshotId": [
                        "TEST_ELASTICSEARCH"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ES-004",
                            "eval": "data.rule.esearch_index_slow_log",
                            "message": "data.rule.esearch_index_slow_log_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ES_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elasticsearch domain has Index slow logs set to disabled",
                    "description": "This policy identifies Elasticsearch domains for which Index slow logs is disabled in your AWS account. Enabling support for publishing indexing slow logs to AWS CloudWatch Logs enables you have full insight into the performance of indexing operations performed on your Elasticsearch clusters. This will help you in identifying performance issues caused by specific queries or due to changes in cluster usage, so that you can optimize your index configuration to address the problem.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800"
                            ],
                            "service": [
                                "elasticsearch"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTICSEARCH_5",
                    "masterSnapshotId": [
                        "TEST_ELASTICSEARCH"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ES-005",
                            "eval": "data.rule.esearch_search_slow_log",
                            "message": "data.rule.esearch_search_slow_log_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ES_005.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elasticsearch domain has Search slow logs set to disabled",
                    "description": "This policy identifies Elasticsearch domains for which Search slow logs is disabled in your AWS account. Enabling support for publishing Search slow logs to AWS CloudWatch Logs enables you to have full insight into the performance of search operations performed on your Elasticsearch clusters. This will help you in identifying performance issues caused by specific search queries so that you can optimize your queries to address the problem.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800"
                            ],
                            "service": [
                                "elasticsearch"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTICSEARCH_6",
                    "masterSnapshotId": [
                        "TEST_ELASTICSEARCH"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ES-006",
                            "eval": "data.rule.esearch_zone_awareness",
                            "message": "data.rule.esearch_zone_awareness_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ES_006.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elasticsearch domain has Zone Awareness set to disabled",
                    "description": "This policy identifies Elasticsearch domains for which Zone Awareness is disabled in your AWS account. Enabling Zone Awareness (cross-zone replication) increases the availability by distributing your Elasticsearch data nodes across two availability zones available in the same AWS region. It also prevents data loss and minimizes downtime in the event of node or availability zone failure.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "NIST 800"
                            ],
                            "service": [
                                "elasticsearch"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTICSEARCH_7",
                    "masterSnapshotId": [
                        "TEST_ELASTICSEARCH"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ES-007",
                            "eval": "data.rule.esearch_node_encryption",
                            "message": "data.rule.esearch_node_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-nodetonodeencryptionoptions' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ES_007.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure node-to-node encryption is enabled on each ElasticSearch Domain",
                    "description": "Ensure that node-to-node encryption feature is enabled for your AWS ElasticSearch domains (clusters) in order to add an extra layer of data protection on top of the existing ES security features such as HTTPS client to cluster encryption and data-at-rest encryption, and meet strict compliance requirements. The ElasticSearch node-to-node encryption capability provides the additional layer of security by implementing Transport Layer Security (TLS) for all communications between the nodes provisioned within the cluster. The feature ensures that any data sent to your AWS ElasticSearch domain over HTTPS remains encrypted in transit while it is being distributed and replicated between the nodes.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "NIST 800"
                            ],
                            "service": [
                                "elasticsearch"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTICSEARCH_8",
                    "masterSnapshotId": [
                        "TEST_ELASTICSEARCH"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ES-008",
                            "eval": "data.rule.esearch_enforce_https",
                            "message": "data.rule.esearch_enforce_https_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-domainendpointoptions.html#cfn-elasticsearch-domain-domainendpointoptions-enforcehttps' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ES_008.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elasticsearch domain is not configured with HTTPS",
                    "description": "This policy identifies Elasticsearch domains that are not configured with HTTPS. Amazon Elasticsearch domains allow all traffic to be submitted over HTTPS, ensuring all communications between application and domain are encrypted. It is recommended to enable HTTPS so that all communication between the application and all data access goes across an encrypted communication channel to eliminate man-in-the-middle attacks",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elasticsearch"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELASTICSEARCH_9",
                    "masterSnapshotId": [
                        "TEST_ELASTICSEARCH"
                    ],
                    "type": "rego",
                    "rule": "file(elasticsearch.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ES-009",
                            "eval": "data.rule.esearch_encrypt_kms",
                            "message": "data.rule.esearch_encrypt_kms_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ES_009.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Elasticsearch Domain should not have Encrytion using AWS Managed Keys",
                    "description": "Ensure that your Amazon ElasticSearch (ES) domains are encrypted with KMS Customer Master Keys (CMKs) instead of AWS managed-keys (default keys used by the ES service when there are no customer keys defined) in order to have more granular control over the data-at-rest encryption/decryption process and to meet compliance requirements.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elasticsearch"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_1",
                    "masterSnapshotId": [
                        "TEST_S3"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-001",
                            "eval": "data.rule.s3_accesslog",
                            "message": "data.rule.s3_accesslog_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Access logging not enabled on S3 buckets",
                    "description": "Checks for S3 buckets without access logging turned on. Access logging allows customers to view complete audit trail on sensitive workloads such as S3 buckets",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "NIST 800",
                                "PCI-DSS",
                                "SOC 2"
                            ],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_6",
                    "masterSnapshotId": [
                        "TEST_CT"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-006",
                            "eval": "data.rule.s3_cloudtrail",
                            "message": "data.rule.s3_cloudtrail_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_006.py"
                        }
                    ],
                    "severity": "low",
                    "title": "AWS S3 CloudTrail buckets for which access logging is disabled",
                    "description": "This policy identifies S3 CloudTrail buckets for which access is disabled.S3 Bucket access logging generates access records for each request made to your S3 bucket. An access log record contains information such as the request type, the resources specified in the request worked, and the time and date the request was processed. It is recommended that bucket access logging be enabled on the CloudTrail S3 bucket",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_7",
                    "masterSnapshotId": [
                        "TEST_S3"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-007",
                            "eval": "data.rule.s3_versioning",
                            "message": "data.rule.s3_versioning_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_007.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS S3 Object Versioning is disabled",
                    "description": "This policy identifies the S3 buckets which have Object Versioning disabled. S3 Object Versioning is an important capability in protecting your data within a bucket. Once you enable Object Versioning, you cannot remove it; you can suspend Object Versioning at any time on a bucket if you do not wish for it to persist. It is recommended to enable Object Versioning on S3.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_8",
                    "masterSnapshotId": [
                        "TEST_S3"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-008",
                            "eval": "data.rule.s3_public_acl",
                            "message": "data.rule.s3_public_acl_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_008.py"
                        }
                    ],
                    "severity": "low",
                    "title": "AWS S3 bucket has global view ACL permissions enabled.",
                    "description": "This policy determines if any S3 bucket(s) has Global View ACL permissions enabled for the All Users group. These permissions allow external resources to see the permission settings associated to the object.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_10",
                    "masterSnapshotId": [
                        "TEST_S3"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-010",
                            "eval": "data.rule.s3_auth_acl",
                            "message": "data.rule.s3_auth_acl_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_010.py"
                        }
                    ],
                    "severity": "high",
                    "title": "AWS S3 buckets are accessible to any authenticated user.",
                    "description": "This policy identifies S3 buckets accessible to any authenticated AWS users. Amazon S3 allows customer to store and retrieve any type of content from anywhere in the web. Often, customers have legitimate reasons to expose the S3 bucket to public, for example to host website content. However, these buckets often contain highly sensitive enterprise data which if left accessible to anyone with valid AWS credentials, may result in sensitive data leaks.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_11",
                    "masterSnapshotId": [
                        "TEST_S3"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-011",
                            "eval": "data.rule.s3_public_access",
                            "message": "data.rule.s3_public_access_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_011.py"
                        }
                    ],
                    "severity": "high",
                    "title": "AWS S3 buckets are accessible to public",
                    "description": "This policy identifies S3 buckets which are publicly accessible. Amazon S3 allows customers to store and retrieve any type of content from anywhere in the web. Often, customers have legitimate reasons to expose the S3 bucket to public, for example, to host website content. However, these buckets often contain highly sensitive enterprise data which if left open to public may result in sensitive data leaks.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_12",
                    "masterSnapshotId": [
                        "TEST_S3"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-012",
                            "eval": "data.rule.s3_encryption",
                            "message": "data.rule.s3_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_012.py"
                        }
                    ],
                    "severity": "low",
                    "title": "AWS S3 buckets do not have server side encryption.",
                    "description": "Customers can protect the data in S3 buckets using the AWS server-side encryption. If the server-side encryption is not turned on for S3 buckets with sensitive data, in the event of a data breach, malicious users can gain access to the data.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_13",
                    "masterSnapshotId": [
                        "TEST_S3"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-013",
                            "eval": "data.rule.s3_website",
                            "message": "data.rule.s3_website_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_013.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "S3 buckets with configurations set to host websites",
                    "description": "To host a website on AWS S3 you should configure a bucket as a website. This policy identifies all the S3 buckets that are configured to host websites. By frequently surveying these S3 buckets you can ensure that only authorized buckets are enabled to host websites. Make sure to disable static website hosting for unauthorized S3 buckets.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "ISO 27001"
                            ],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_14",
                    "masterSnapshotId": [
                        "TEST_S3"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-014",
                            "eval": "data.rule.s3_cors",
                            "message": "data.rule.s3_cors_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#aws-properties-s3-bucket--seealso' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_014.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure S3 hosted sites supported hardened CORS",
                    "description": "Ensure that AllowedOrigins, AllowedMethods should not be set to *. this allows all cross site users to access s3 bucket and they have permission to manipulate data",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_15",
                    "masterSnapshotId": [
                        "TEST_S3"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-015",
                            "eval": "data.rule.bucket_kms_encryption",
                            "message": "data.rule.bucket_kms_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionbydefault.html#cfn-s3-bucket-serversideencryptionbydefault-ssealgorithm' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_015.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure S3 bucket is encrypted using KMS",
                    "description": "Ensure that your AWS S3 buckets are configured to use Server-Side Encryption with customer managed CMKs instead of S3-Managed Keys (SSE-S3) in order to obtain a fine-grained control over Amazon S3 data-at-rest encryption and decryption process",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_16",
                    "masterSnapshotId": [
                        "TEST_S3"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-016",
                            "eval": "data.rule.s3_object_lock_enable",
                            "message": "data.rule.s3_object_lock_enable_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-objectlockenabled' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_016.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure S3 bucket has enabled lock configuration",
                    "description": "Indicates whether this bucket has an Object Lock configuration enabled. Enable ObjectLockEnabled when you apply ObjectLockConfiguration to a bucket.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_17",
                    "masterSnapshotId": [
                        "TEST_S3"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-017",
                            "eval": "data.rule.s3_cross_region_replica",
                            "message": "data.rule.s3_cross_region_replica_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-destination' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_017.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure S3 bucket cross-region replication is enabled",
                    "description": "Cross-region replication enables automatic, asynchronous copying of objects across S3 buckets. By default, replication supports copying new S3 objects after it is enabled",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_18",
                    "masterSnapshotId": [
                        "TEST_S3"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-018",
                            "eval": "data.rule.s3_public_access_block",
                            "message": "data.rule.s3_public_access_block_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-blockpublicpolicy' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_018.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure S3 Bucket has public access blocks",
                    "description": "We recommend you ensure S3 bucket has public access blocks. If the public access block is not attached it defaults to False",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_19",
                    "masterSnapshotId": [
                        "TEST_S3"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-019",
                            "eval": "data.rule.s3_restrict_public_bucket",
                            "message": "data.rule.s3_restrict_public_bucket_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-restrictpublicbuckets' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_019.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure S3 bucket RestrictPublicBucket is enabled",
                    "description": "Enabling this setting does not affect previously stored bucket policies. Public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_20",
                    "masterSnapshotId": [
                        "TEST_S3"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-020",
                            "eval": "data.rule.s3_ignore_public_acl",
                            "message": "data.rule.s3_ignore_public_acl_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-ignorepublicacls' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_020.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure S3 bucket IgnorePublicAcls is enabled",
                    "description": "This will block public access granted by ACLs while still allowing PUT Object calls that include a public ACL",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_21",
                    "masterSnapshotId": [
                        "TEST_S3"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-S3-021",
                            "eval": "data.rule.s3_block_public_policy",
                            "message": "data.rule.s3_block_public_policy_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-blockpublicpolicy' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_S3_021.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure S3 Bucket BlockPublicPolicy is enabled",
                    "description": "If an AWS account is used to host a data lake or another business application, blocking public access will serve as an account-level guard against accidental public exposure.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_22",
                    "masterSnapshotId": [
                        "TEST_EFS"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EFS-001",
                            "eval": "data.rule.efs_kms",
                            "message": "data.rule.efs_kms_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EFS_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic File System (EFS) not encrypted using Customer Managed Key",
                    "description": "This policy identifies Elastic File Systems (EFSs) which are encrypted with default KMS keys and not with Keys managed by Customer. It is a best practice to use customer managed KMS Keys to encrypt your EFS data. It gives you full control over the encrypted data.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "efs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_23",
                    "masterSnapshotId": [
                        "TEST_EFS"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EFS-002",
                            "eval": "data.rule.efs_encrypt",
                            "message": "data.rule.efs_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EFS_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic File System (EFS) with encryption for data at rest disabled",
                    "description": "This policy identifies Elastic File Systems (EFSs) for which encryption for data at rest disabled. It is highly recommended to implement at-rest encryption in order to prevent unauthorized users from reading sensitive data saved to EFS.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "efs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_24",
                    "masterSnapshotId": [
                        "TEST_EC2"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EBS-001",
                            "eval": "data.rule.ebs_encrypt",
                            "message": "data.rule.ebs_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EBS_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EBS volumes are not encrypted",
                    "description": "This policy identifies the EBS volumes which are not encrypted. The snapshots that you take of an encrypted EBS volume are also encrypted and can be moved between AWS Regions as needed. You cannot share encrypted snapshots with other AWS accounts and you cannot make them public. It is recommended that EBS volume should be encrypted.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HIPAA",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "cloud"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_26",
                    "masterSnapshotId": [
                        "TEST_TRF"
                    ],
                    "type": "rego",
                    "rule": "file(storage.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-TRF-001",
                            "eval": "data.rule.transer_server_public_expose",
                            "message": "data.rule.transer_server_public_expose_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-endpointdetails' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_TRF_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Transfer Server is not publicly exposed",
                    "description": "It is recommended that you use VPC as the EndpointType. With this endpoint type, you have the option to directly associate up to three Elastic IPv4 addresses (BYO IP included) with your server's endpoint and use VPC security groups to restrict traffic by the client's public IP address. This is not possible with EndpointType set to VPC_ENDPOINT.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "emr"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EMR_1",
                    "masterSnapshotId": [
                        "TEST_EMR"
                    ],
                    "type": "rego",
                    "rule": "file(emr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EMR-001",
                            "eval": "data.rule.emr_security",
                            "message": "data.rule.emr_security_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-securityconfiguration' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EMR_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EMR cluster is not configured with security configuration",
                    "description": "This policy identifies EMR clusters which are not configured with security configuration. With Amazon EMR release version 4.8.0 or later, you can use security configurations to configure data encryption, Kerberos authentication, and Amazon S3 authorization for EMRFS.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "emr"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EMR_2",
                    "masterSnapshotId": [
                        "TEST_EMR"
                    ],
                    "type": "rego",
                    "rule": "file(emr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EMR-002",
                            "eval": "data.rule.emr_kerberos",
                            "message": "data.rule.emr_kerberos_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-kerberosattributes' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EMR_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EMR cluster is not configured with Kerberos Authentication",
                    "description": "This policy identifies EMR clusters which are not configured with Kerberos Authentication. Kerberos uses secret-key cryptography to provide strong authentication so that passwords or other credentials aren't sent over the network in an unencrypted format.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "emr"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EMR_3",
                    "masterSnapshotId": [
                        "TEST_EMR"
                    ],
                    "type": "rego",
                    "rule": "file(emr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EMR-003",
                            "eval": "data.rule.emr_s3_encryption",
                            "message": "data.rule.emr_s3_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-securityconfiguration' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EMR_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EMR cluster is not configured with CSE CMK for data at rest encryption (Amazon S3 with EMRFS)",
                    "description": "This policy identifies EMR clusters which are not configured with Client Side Encryption with Customer Master Keys(CSE CMK) for data at rest encryption of Amazon S3 with EMRFS. As a best practice, use Customer Master Keys (CMK) to encrypt the data in your EMR cluster and ensure full control over your data.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "emr"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EMR_4",
                    "masterSnapshotId": [
                        "TEST_EMR"
                    ],
                    "type": "rego",
                    "rule": "file(emr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EMR-004",
                            "eval": "data.rule.emr_local_encryption_cmk",
                            "message": "data.rule.emr_local_encryption_cmk_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-securityconfiguration' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EMR_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EMR cluster is not enabled with local disk encryption using CMK",
                    "description": "This policy identifies AWS EMR clusters that are not enabled with local disk encryption using CMK(Customer Managed Key). Applications using the local file system on each cluster instance for intermediate data throughout workloads, where data could be spilled to disk when it overflows memory. With Local disk encryption at place, data at rest can be protected.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "emr"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EMR_6",
                    "masterSnapshotId": [
                        "TEST_EMR"
                    ],
                    "type": "rego",
                    "rule": "file(emr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EMR-006",
                            "eval": "data.rule.emr_rest_encryption",
                            "message": "data.rule.emr_rest_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-securityconfiguration' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EMR_006.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EMR cluster is not enabled with data encryption at rest",
                    "description": "This policy identifies AWS EMR clusters for which data encryption at rest is not enabled. Encryption of data at rest is required to prevent unauthorized users from accessing the sensitive information available on your  EMR clusters and associated storage systems.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "emr"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EMR_7",
                    "masterSnapshotId": [
                        "TEST_EMR"
                    ],
                    "type": "rego",
                    "rule": "file(emr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EMR-007",
                            "eval": "data.rule.emr_transit_encryption",
                            "message": "data.rule.emr_transit_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-securityconfiguration' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EMR_007.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EMR cluster is not enabled with data encryption in transit",
                    "description": "This policy identifies AWS EMR clusters which are not enabled with data encryption in transit. It is highly recommended to implement in-transit encryption in order to protect data from unauthorized access as it travels through the network, between clients and storage server. Enabling data encryption in-transit helps prevent unauthorized users from reading sensitive data between your EMR clusters and their associated storage systems.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "emr"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SQS_2",
                    "masterSnapshotId": [
                        "TEST_SQS"
                    ],
                    "type": "rego",
                    "rule": "file(sqs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-SQS-002",
                            "eval": "data.rule.sqs_encrypt_key",
                            "message": "data.rule.sqs_encrypt_key_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_SQS_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS SQS queue encryption using default KMS key instead of CMK",
                    "description": "This policy identifies CloudFront web distributions which have a default SSL certificate to access CloudFront content. It is a best practice to use custom SSL Certificate to access CloudFront content. It gives you full control over the content data. custom SSL certificates also allow your users to access your content by using an alternate domain name. You can use a certificate stored in AWS Certificate Manager (ACM) or you can use a certificate stored in IAM.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "sqs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SQS_3",
                    "masterSnapshotId": [
                        "TEST_SQS"
                    ],
                    "type": "rego",
                    "rule": "file(sqs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-SQS-003",
                            "eval": "data.rule.sqs_encrypt",
                            "message": "data.rule.sqs_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_SQS_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS SQS server side encryption not enabled",
                    "description": "SSE lets you transmit sensitive data in encrypted queues. SSE protects the contents of messages in Amazon SQS queues using keys managed in the AWS Key Management Service (AWS KMS). SSE encrypts messages as soon as Amazon SQS receives them. The messages are stored in encrypted form and Amazon SQS decrypts messages only when they are sent to an authorized consumer._x005F_x000D_ _x005F_x000D_ SQS SSE and the AWS KMS security standards can help you meet encryption-related compliance requirements.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "sqs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_MSK_1",
                    "masterSnapshotId": [
                        "TEST_MSK"
                    ],
                    "type": "rego",
                    "rule": "file(msk.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-MSK-001",
                            "eval": "data.rule.msk_encryption_at_rest_cmk",
                            "message": "data.rule.msk_encryption_at_rest_cmk_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-encryptioninfo' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_MSK_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Use KMS Customer Master Keys for AWS MSK Clusters",
                    "description": "Ensure that Amazon Managed Streaming for Kafka (MSK) clusters are using AWS KMS Customer Master Keys (CMKs) instead of AWS managed-keys (i.e. default keys) for data encryption, in order to have a fine-grained control over data-at-rest encryption/decryption process and meet compliance requirements. MSK is a fully managed AWS service that enables you to migrate, build and run real-time streaming applications on Apache Kafka.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "msk"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_MSK_2",
                    "masterSnapshotId": [
                        "TEST_MSK"
                    ],
                    "type": "rego",
                    "rule": "file(msk.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-MSK-002",
                            "eval": "data.rule.msk_in_transit_encryption",
                            "message": "data.rule.msk_in_transit_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-encryptioninfo' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_MSK_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure data is Encrypted in transit (TLS)",
                    "description": "Ensure data is Encrypted in transit (TLS)",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "msk"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_MSK_3",
                    "masterSnapshotId": [
                        "TEST_MSK"
                    ],
                    "type": "rego",
                    "rule": "file(msk.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-MSK-003",
                            "eval": "data.rule.msk_in_transit_encryption_tls",
                            "message": "data.rule.msk_in_transit_encryption_tls_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-encryptioninfo' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_MSK_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure client authentication is enabled with TLS (mutual TLS authentication)",
                    "description": "Enable TLS by setting EncryptionInfo.EncryptionInTransit.ClientBroker value to 'TLS'. to provide trasport layes security to MSK instance",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "msk"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_MSK_4",
                    "masterSnapshotId": [
                        "TEST_MSK"
                    ],
                    "type": "rego",
                    "rule": "file(msk.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-MSK-004",
                            "eval": "data.rule.msk_vpc",
                            "message": "data.rule.msk_vpc_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-encryptioninfo' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_MSK_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure MSK cluster is setup in GS VPC",
                    "description": "To Add MKS Cluster in gs VPC,Specify exactly two subnets if you are using the US West (N. California) Region. For other Regions where Amazon MSK is available, you can specify either two or three subnets. The subnets that you specify must be in distinct Availability Zones. When you create a cluster, Amazon MSK distributes the broker nodes evenly across the subnets that you specify.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "msk"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_MSK_5",
                    "masterSnapshotId": [
                        "TEST_MSK"
                    ],
                    "type": "rego",
                    "rule": "file(msk.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-MSK-005",
                            "eval": "data.rule.msk_cluster_logging_enable",
                            "message": "data.rule.msk_cluster_logging_enable_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-msk-cluster-brokerlogs.html#cfn-msk-cluster-brokerlogs-cloudwatchlogs' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_MSK_005.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Amazon MSK cluster has logging enabled",
                    "description": "Consistent cluster logging helps you determine if a request was made with root or AWS Identity and Access Management (IAM) user credentials and whether the request was made with temporary security credentials for a role or federated user.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "msk"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_1",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-001",
                            "eval": "data.rule.elb_insecure_cipher",
                            "message": "data.rule.elb_insecure_cipher_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ELB_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer (Classic) SSL negotiation policy configured with insecure ciphers",
                    "description": "This policy identifies Elastic Load Balancers (Classic) which are configured with SSL negotiation policy containing insecure ciphers. An SSL cipher is an encryption algorithm that uses encryption keys to create a coded message. SSL protocols use several SSL ciphers to encrypt data over the Internet. As many of the other ciphers are not secure, it is recommended to use only the ciphers recommended in the following AWS link: https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-ssl-security-policy.html.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_2",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-002",
                            "eval": "data.rule.elb_insecure_protocol",
                            "message": "data.rule.elb_insecure_protocol_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ELB_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer (Classic) SSL negotiation policy configured with vulnerable SSL protocol",
                    "description": "This policy identifies Elastic Load Balancers (Classic) which are configured with SSL negotiation policy containing vulnerable SSL protocol. The SSL protocol establishes a secure connection between a client and a server and ensures that all the data passed between the client and your load balancer is private. As a security best practice, it is recommended to use the latest version SSL protocol.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_3",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-003",
                            "eval": "data.rule.elb_access_log",
                            "message": "data.rule.elb_access_log_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ELB_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer (Classic) with access log disabled",
                    "description": "This policy identifies Classic Elastic Load Balancers which have access log disabled. When Access log enabled, Classic load balancer captures detailed information about requests sent to your load balancer. Each log contains information such as the time the request was received, the client's IP address, latencies, request paths, and server responses. You can use these access logs to analyze traffic patterns and to troubleshoot issues.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_4",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-004",
                            "eval": "data.rule.elb_conn_drain",
                            "message": "data.rule.elb_conn_drain_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ELB_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer (Classic) with connection draining disabled",
                    "description": "This policy identifies Classic Elastic Load Balancers which have connection draining disabled. Connection Draining feature ensures that a Classic load balancer stops sending requests to instances that are de-registering or unhealthy, while keeping the existing connections open. This enables the load balancer to complete in-flight requests made to instances that are de-registering or unhealthy.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_5",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-005",
                            "eval": "data.rule.elb_crosszone",
                            "message": "data.rule.elb_crosszone_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ELB_005.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer (Classic) with cross-zone load balancing disabled",
                    "description": "This policy identifies Classic Elastic Load Balancers which have cross-zone load balancing disabled. When Cross-zone load balancing enabled, classic load balancer distributes requests evenly across the registered instances in all enabled Availability Zones. Cross-zone load balancing reduces the need to maintain equivalent numbers of instances in each enabled Availability Zone, and improves your application's ability to handle the loss of one or more instances.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_8",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-008",
                            "eval": "data.rule.elb_not_in_use",
                            "message": "data.rule.elb_not_in_use_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ELB_008.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer (ELB) not in use",
                    "description": "This policy identifies unused Elastic Load Balancers (ELBs) in your AWS account. Any Elastic Load Balancer in your AWS account is adding charges to your monthly bill, although it is not used by any resources. As a best practice, it is recommended to remove ELBs that are not associated with any instances, it will also help you avoid unexpected charges on your bill.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "ISO 27001"
                            ],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_9",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-009",
                            "eval": "data.rule.elb_alb_logs",
                            "message": "data.rule.elb_alb_logs_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ELB_009.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer v2 (ELBv2) Application Load Balancer (ALB) with access log disabled",
                    "description": "This policy identifies ELBv2 ALBs which have access log disabled. Access logs capture detailed information about requests sent to your load balancer and each log contains information such as the time the request was received, the client's IP address, latencies, request paths, and server responses. You can use these access logs to analyze traffic patterns and troubleshoot issues.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_10",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-010",
                            "eval": "data.rule.elb_listener_ssl",
                            "message": "data.rule.elb_listener_ssl_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ELB_010.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer with listener TLS/SSL disabled",
                    "description": "This policy identifies Elastic Load Balancers which have listener TLS/SSL disabled. As Load Balancers will be handling all incoming requests and routing the traffic accordingly; The listeners on the load balancers should always receive traffic over secure channel with a valid SSL certificate configured.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF",
                                "SOC 2"
                            ],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_11",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-011",
                            "eval": "data.rule.elb_over_https",
                            "message": "data.rule.elb_over_https_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ELB_011.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Application Load Balancer (ALB) listener that allow connection requests over HTTP",
                    "description": "This policy identifies Application Load Balancer (ALB) listeners that are configured to accept connection requests over HTTP instead of HTTPS. As a best practice, use the HTTPS protocol to encrypt the communication between the application clients and the application load balancer.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_12",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-012",
                            "eval": "data.rule.elb_v2_listener_ssl",
                            "message": "data.rule.elb_v2_listener_ssl_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-certificates' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ELB_012.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Elastic Load Balancer V2 (ELBV2) with listener TLS/SSL disabled",
                    "description": "This policy identifies Elastic Load Balancer V2 (ELBV2) which have listener TLS/SSL disabled. As Load Balancers will be handling all incoming requests and routing the traffic accordingly; The listeners on the load balancers should always receive traffic over secure channel with a valid SSL certificate configured.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_13",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-013",
                            "eval": "data.rule.elb_drop_invalid_header",
                            "message": "data.rule.elb_drop_invalid_header_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ELB_013.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure that Application Load Balancer drops HTTP headers",
                    "description": "Checks if rule evaluates AWS Application Load Balancers (ALB) to ensure they are configured to drop http headers. The rule is NON_COMPLIANT if the value of routing.http.drop_invalid_header_fields.enabled is set to false",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_14",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-014",
                            "eval": "data.rule.elb_certificate_listner_arn",
                            "message": "data.rule.elb_certificate_listner_arn_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html",
                            "remediationFunction": "PR_AWS_CLD_ELB_014.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure the ELBv2 ListenerCertificate ListenerArn value is defined",
                    "description": "Ensure the ELBv2 ListenerCertificate ListenerArn value is defined, else an Actor can provide access to CA to non-ADATUM principals.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_15",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-015",
                            "eval": "data.rule.elb_listener_sslpolicy",
                            "message": "data.rule.elb_listener_sslpolicy_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html",
                            "remediationFunction": "PR_AWS_CLD_ELB_015.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure the Load Balancer Listener SSLPolicy is set to at least one value from approved policies",
                    "description": "Ensure the Load Balancer Listener SSLPolicy is set to at least one value from approved policies, else an Actor can gain access to ADATUM information due to misconfigured cryptographic settings",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_16",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-016",
                            "eval": "data.rule.elb_subnet",
                            "message": "data.rule.elb_subnet_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-subnetmapping.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmapping-subnetid",
                            "remediationFunction": "PR_AWS_CLD_ELB_016.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure one of Subnets or SubnetMappings is defined for loadbalancer",
                    "description": "Ensure one of Subnets or SubnetMappings is defined for loadbalancer",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_17",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-017",
                            "eval": "data.rule.elb_scheme",
                            "message": "data.rule.elb_scheme_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html",
                            "remediationFunction": "PR_AWS_CLD_ELB_017.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure LoadBalancer scheme is set to internal and not internet-facing",
                    "description": "LoadBalancer scheme must be explicitly set to internal, else an Actor can allow access to ADATUM information through the misconfiguration of an ELB resource",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_18",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-018",
                            "eval": "data.rule.elb_type",
                            "message": "data.rule.elb_type_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-type",
                            "remediationFunction": "PR_AWS_CLD_ELB_018.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure all load balancers created are application load balancers",
                    "description": "Ensure the value of Type for each LoadBalancer resource is application or the Type is not set, since it defaults to application",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ELB_19",
                    "masterSnapshotId": [
                        "TEST_ELB"
                    ],
                    "type": "rego",
                    "rule": "file(elb.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ELB-019",
                            "eval": "data.rule.elb_protocol",
                            "message": "data.rule.elb_protocol_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-protocol",
                            "remediationFunction": "PR_AWS_CLD_ELB_019.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure LoadBalancer TargetGroup Protocol values are limited to HTTPS",
                    "description": "The only allowed Protocol value for LoadBalancer TargetGroups is HTTPS, though the property is ignored if the target type is lambda.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "elb"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_REDSHIFT_1",
                    "masterSnapshotId": [
                        "TEST_REDSHIFT"
                    ],
                    "type": "rego",
                    "rule": "file(redshift.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-RSH-001",
                            "eval": "data.rule.redshift_encrypt_key",
                            "message": "data.rule.redshift_encrypt_key_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_RSH_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Redshift Cluster not encrypted using Customer Managed Key",
                    "description": "This policy identifies Redshift Clusters which are encrypted with default KMS keys and not with Keys managed by Customer. It is a best practice to use customer managed KMS Keys to encrypt your Redshift databases data. Customer-managed CMKs give you more flexibility, including the ability to create, rotate, disable, define access control for, and audit the encryption keys used to help protect your data.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "redshift"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_REDSHIFT_2",
                    "masterSnapshotId": [
                        "TEST_REDSHIFT"
                    ],
                    "type": "rego",
                    "rule": "file(redshift.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-RSH-002",
                            "eval": "data.rule.redshift_public",
                            "message": "data.rule.redshift_public_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_RSH_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Redshift clusters should not be publicly accessible",
                    "description": "This policy identifies AWS Redshift clusters which are accessible publicly.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "SOC 2"
                            ],
                            "service": [
                                "redshift"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_REDSHIFT_3",
                    "masterSnapshotId": [
                        "TEST_REDSHIFT"
                    ],
                    "type": "rego",
                    "rule": "file(redshift.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-RSH-003",
                            "eval": "data.rule.redshift_require_ssl",
                            "message": "data.rule.redshift_require_ssl_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_RSH_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Redshift does not have require_ssl configured",
                    "description": "This policy identifies Redshift databases in which data connection to and from is occurring on an insecure channel. SSL connections ensures the security of the data in transit.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800"
                            ],
                            "service": [
                                "redshift"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_REDSHIFT_4",
                    "masterSnapshotId": [
                        "TEST_REDSHIFT"
                    ],
                    "type": "rego",
                    "rule": "file(redshift.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-RSH-004",
                            "eval": "data.rule.redshift_encrypt",
                            "message": "data.rule.redshift_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_RSH_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Redshift instances are not encrypted",
                    "description": "This policy identifies AWS Redshift instances which are not encrypted. These instances should be encrypted for clusters to help protect data at rest which otherwise can result in a data breach.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "redshift"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_REDSHIFT_5",
                    "masterSnapshotId": [
                        "TEST_REDSHIFT"
                    ],
                    "type": "rego",
                    "rule": "file(redshift.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-RSH-005",
                            "eval": "data.rule.redshift_allow_version_upgrade",
                            "message": "data.rule.redshift_allow_version_upgrade_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-allowversionupgrade' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_RSH_005.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Redshift cluster allow version upgrade by default",
                    "description": "This policy identifies AWS Redshift instances which has not enabled AllowVersionUpgrade. major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. When a new major version of the Amazon Redshift engine is released, you can request that the service automatically apply upgrades during the maintenance window to the Amazon Redshift engine that is running on your cluster.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "redshift"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_REDSHIFT_6",
                    "masterSnapshotId": [
                        "TEST_REDSHIFT"
                    ],
                    "type": "rego",
                    "rule": "file(redshift.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-RSH-006",
                            "eval": "data.rule.redshift_deploy_vpc",
                            "message": "data.rule.redshift_deploy_vpc_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustersubnetgroupname' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_RSH_006.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Redshift is not deployed outside of a VPC",
                    "description": "Ensure that your Redshift clusters are provisioned within the AWS EC2-VPC platform instead of EC2-Classic platform (outdated) for better flexibility and control over clusters security, traffic routing, availability and more.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "redshift"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_REDSHIFT_7",
                    "masterSnapshotId": [
                        "TEST_REDSHIFT"
                    ],
                    "type": "rego",
                    "rule": "file(redshift.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-RSH-007",
                            "eval": "data.rule.redshift_audit",
                            "message": "data.rule.redshift_audit_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_RSH_007.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Redshift database does not have audit logging enabled",
                    "description": "Audit logging is not enabled by default in Amazon Redshift. When you enable logging on your cluster, Amazon Redshift creates and uploads logs to Amazon S3 that capture data from the creation of the cluster to the present time.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "GDPR",
                                "HITRUST",
                                "ISO 27001",
                                "NIST 800",
                                "SOC 2"
                            ],
                            "service": [
                                "redshift"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ALL_17",
                    "masterSnapshotId": [
                        "TEST_ALL"
                    ],
                    "type": "rego",
                    "rule": "file(all.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-WAF-001",
                            "eval": "data.rule.waf_log4j_vulnerability",
                            "message": "data.rule.waf_log4j_vulnerability_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-webacl-managedrulegroupstatement.html#cfn-wafv2-webacl-managedrulegroupstatement-name' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_WAF_001.py"
                        }
                    ],
                    "severity": "High",
                    "title": "JMSAppender in Log4j 1.2 is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration",
                    "description": "Apache Log4j2 2.0-beta9 through 2.12.1 and 2.13.0 through 2.15.0 JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "waf"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SNS_1",
                    "masterSnapshotId": [
                        "TEST_SNS_01"
                    ],
                    "type": "rego",
                    "rule": "file(sns.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-SNS-001",
                            "eval": "data.rule.sns_protocol",
                            "message": "data.rule.sns_protocol_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_SNS_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS SNS subscription is not configured with HTTPS",
                    "description": "This policy identifies SNS subscriptions using HTTP instead of HTTPS as the delivery protocol in order to enforce SSL encryption for all subscription requests. It is strongly recommended use only HTTPS-based subscriptions by implementing secure SNS topic policies.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "sns"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SNS_2",
                    "masterSnapshotId": [
                        "TEST_SNS_02"
                    ],
                    "type": "rego",
                    "rule": "file(sns.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-SNS-002",
                            "eval": "data.rule.sns_encrypt_key",
                            "message": "data.rule.sns_encrypt_key_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_SNS_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS SNS topic encrypted using default KMS key instead of CMK",
                    "description": "This policy identifies Amazon Simple Notification Service (SNS) topics that are encrypted with the default AWS Key Management Service (KMS) keys. As a best practice, use Customer Master Keys (CMK) to encrypt the data in your SNS topics and ensure full control over your data.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "sns"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SNS_3",
                    "masterSnapshotId": [
                        "TEST_SNS_02"
                    ],
                    "type": "rego",
                    "rule": "file(sns.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-SNS-003",
                            "eval": "data.rule.sns_encrypt",
                            "message": "data.rule.sns_encrypt_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_SNS_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS SNS topic with server-side encryption disabled",
                    "description": "This policy identifies Amazon Simple Notification Service (SNS) topics that have server-side encryption disabled. As a best practice, enable server-side encryption for at-rest encryption of message content published to SNS topics. When you publish a message, the SNS encrypts your message as soon as it receives it, and decrypts it just prior to delivery.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "sns"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SNS_4",
                    "masterSnapshotId": [
                        "TEST_SNS_02"
                    ],
                    "type": "rego",
                    "rule": "file(sns.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-SNS-004",
                            "eval": "data.rule.sns_policy_public",
                            "message": "data.rule.sns_policy_public_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_SNS_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure SNS Topic policy is not publicly accessible",
                    "description": "Public SNS Topic potentially expose existing interfaces to unwanted 3rd parties that can tap into an existing data stream, resulting in data leak to an unwanted party.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "sns"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EC2_1",
                    "masterSnapshotId": [
                        "TEST_EC2"
                    ],
                    "type": "rego",
                    "rule": "file(ec2.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EC2-001",
                            "eval": "data.rule.ec2_iam_role",
                            "message": "data.rule.ec2_iam_role_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EC2_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EC2 Instance IAM Role not enabled",
                    "description": "AWS provides Identity Access Management (IAM) roles to securely access AWS services and resources. The role is an identity with permission policies that define what the identity can and cannot do in AWS. As a best practice, create IAM roles and attach the role to manage EC2 instance permissions securely instead of distributing or sharing keys or passwords.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ec2"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EC2_2",
                    "masterSnapshotId": [
                        "TEST_EC2"
                    ],
                    "type": "rego",
                    "rule": "file(ec2.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EC2-002",
                            "eval": "data.rule.ec2_no_vpc",
                            "message": "data.rule.ec2_no_vpc_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EC2_002.py"
                        }
                    ],
                    "severity": "high",
                    "title": "AWS EC2 instance is not configured with VPC",
                    "description": "This policy identifies the EC2 instances which are still using EC2 Classic. There are no VPCs deployed any EC2 instances will be running on AWS EC2 Classic. Deploying VPCs will enable you to leverage enhanced infrastructure security controls.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ec2"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EC2_3",
                    "masterSnapshotId": [
                        "TEST_EC2"
                    ],
                    "type": "rego",
                    "rule": "file(ec2.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EC2-003",
                            "eval": "data.rule.ec2_public_ip",
                            "message": "data.rule.ec2_public_ip_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EC2_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS EC2 instances with Public IP and associated with Security Groups have Internet Access",
                    "description": "This policy identifies AWS EC2 instances with Public IP and associated with Security Groups have Internet Access. EC2 instance receives a public IP address when launched in a default VPC security group (A security group acts as a virtual firewall for your instance to control inbound and outbound traffic.) and we don't assign a public IP address to instances launched in a non-default subnet. Therefore it's a best practice to ensure that there are no EC2 instances with Public IP that are associated with Security Groups which have Internet Access.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ec2"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EC2_4",
                    "masterSnapshotId": [
                        "TEST_EC2"
                    ],
                    "type": "rego",
                    "rule": "file(ec2.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EC2-004",
                            "eval": "data.rule.ec2_ebs_optimized",
                            "message": "data.rule.ec2_ebs_optimized_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ebsoptimized' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EC2_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure that EC2 instace is EBS Optimized",
                    "description": "Enable EbsOptimized provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ec2"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EC2_5",
                    "masterSnapshotId": [
                        "TEST_EC2"
                    ],
                    "type": "rego",
                    "rule": "file(ec2.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-EC2-005",
                            "eval": "data.rule.ec2_monitoring",
                            "message": "data.rule.ec2_monitoring_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-monitoring' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_EC2_005.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure detailed monitoring is enabled for EC2 instances",
                    "description": "Ensure that detailed monitoring is enabled for your Amazon EC2 instances in order to have enough monitoring data to help you make better decisions on architecting and managing compute resources within your AWS account",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ec2"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EC2NETWORKACL_1",
                    "masterSnapshotId": [
                        "TEST_EC2NETWORKACL"
                    ],
                    "type": "rego",
                    "rule": "file(ec2networkacl.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-NACL-001",
                            "eval": "data.rule.acl_all_icmp_ipv4",
                            "message": "data.rule.acl_all_icmp_ipv4_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_NACL_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Network ACLs with Inbound rule to allow All ICMP IPv4",
                    "description": "This policy identifies ACLs which allows traffic on all ICMP IPv4 protocol. A network access control list (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. By default, ACL allows all inbound and outbound IPv4 traffic and, if applicable, IPv6 traffic. Inbound rules that allow unrestricted traffic to the internet can be a security risk. As a best practice, it is recommended to configure ACL to restrict traffic on authorized protocols.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "nacl"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EC2NETWORKACL_2",
                    "masterSnapshotId": [
                        "TEST_EC2NETWORKACL"
                    ],
                    "type": "rego",
                    "rule": "file(ec2networkacl.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-NACL-002",
                            "eval": "data.rule.acl_all_icmp_ipv6",
                            "message": "data.rule.acl_all_icmp_ipv6_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_NACL_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Network ACLs with Inbound rule to allow All ICMP IPv6",
                    "description": "This policy identifies ACLs which allows traffic on all ICMP IPv6 protocol. A network access control list (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. By default, ACL allows all inbound and outbound IPv4 traffic and, if applicable, IPv6 traffic. Inbound rules that allow unrestricted traffic to the internet can be a security risk. As a best practice, it is recommended to configure ACL to restrict traffic on authorized protocols.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "nacl"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EC2NETWORKACL_3",
                    "masterSnapshotId": [
                        "TEST_EC2NETWORKACL"
                    ],
                    "type": "rego",
                    "rule": "file(ec2networkacl.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-NACL-003",
                            "eval": "data.rule.acl_all_traffic",
                            "message": "data.rule.acl_all_traffic_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_NACL_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Network ACLs with Inbound rule to allow All Traffic",
                    "description": "This policy identifies ACLs which allows traffic on all protocols. A network access control list (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. By default, ACL allows all inbound and outbound IPv4 traffic and, if applicable, IPv6 traffic. Inbound rules that allow unrestricted traffic to the internet can be a security risk. As a best practice, it is recommended to configure ACLs to restrict traffic on authorized protocols.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "nacl"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EC2NETWORKACL_4",
                    "masterSnapshotId": [
                        "TEST_EC2NETWORKACL"
                    ],
                    "type": "rego",
                    "rule": "file(ec2networkacl.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-NACL-004",
                            "eval": "data.rule.acl_all_icmp_ipv4_out",
                            "message": "data.rule.acl_all_icmp_ipv4_out_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_NACL_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Network ACLs with Outbound rule to allow All ICMP IPv4",
                    "description": "This policy identifies ACLs which allows traffic on all protocol. A network access control list (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. By default, ACL allows all inbound and outbound IPv4 traffic and, if applicable, IPv6 traffic. Outbound rules that allow unrestricted traffic to the internet can be a security risk. As a best practice, it is recommended to configure ACL to restrict traffic on authorized protocols.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "nacl"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EC2NETWORKACL_5",
                    "masterSnapshotId": [
                        "TEST_EC2NETWORKACL"
                    ],
                    "type": "rego",
                    "rule": "file(ec2networkacl.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-NACL-005",
                            "eval": "data.rule.acl_all_icmp_ipv6_out",
                            "message": "data.rule.acl_all_icmp_ipv6_out_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_NACL_005.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Network ACLs with Outbound rule to allow All ICMP IPv6",
                    "description": "This policy identifies ACLs which allows traffic on all protocol. A network access control list (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. By default, ACL allows all inbound and outbound IPv4 traffic and, if applicable, IPv6 traffic. Outbound rules that allow unrestricted traffic to the internet can be a security risk. As a best practice, it is recommended to configure ACL to restrict traffic on authorized protocols.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "nacl"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EC2NETWORKACL_6",
                    "masterSnapshotId": [
                        "TEST_EC2NETWORKACL"
                    ],
                    "type": "rego",
                    "rule": "file(ec2networkacl.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-NACL-006",
                            "eval": "data.rule.acl_all_traffic_out",
                            "message": "data.rule.acl_all_traffic_out_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_NACL_006.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Network ACLs with Outbound rule to allow All Traffic",
                    "description": "This policy identifies ACLs which allows traffic on all protocols. A network access control list (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. By default, ACL allows all inbound and outbound IPv4 traffic and, if applicable, IPv6 traffic. Outbound rules that allow unrestricted traffic to the internet can be a security risk. As a best practice, it is recommended to configure ACLs to restrict traffic on authorized protocols.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "nacl"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_EC2NETWORKACL_7",
                    "masterSnapshotId": [
                        "TEST_EC2NETWORKACL"
                    ],
                    "type": "rego",
                    "rule": "file(ec2networkacl.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-NACL-007",
                            "eval": "data.rule.acl_unrestricted_admin_port",
                            "message": "data.rule.acl_unrestricted_admin_port_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_NACL_007.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Unrestricted Inbound Traffic on Remote Server Administration Ports",
                    "description": "Check your Amazon VPC Network Access Control Lists (NACLs) for inbound/ingress rules that allow unrestricted traffic (i.e. 0.0.0.0/0) on TCP ports 22 (SSH) and 3389 (RDP) and limit access to trusted IP addresses or IP ranges only in order to implement the Principle of Least Privilege (POLP) and reduce the attack surface at the subnet level.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "nacl"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ACM_1",
                    "masterSnapshotId": [
                        "TEST_ACM"
                    ],
                    "type": "rego",
                    "rule": "file(acm.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ACM-001",
                            "eval": "data.rule.acm_wildcard",
                            "message": "data.rule.acm_wildcard_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ACM_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ACM Certificate with wildcard domain name",
                    "description": "This policy identifies ACM Certificates which are using wildcard certificates for wildcard domain name instead of single domain name certificates. ACM allows you to use an asterisk (*) in the domain name to create an ACM Certificate containing a wildcard name that can protect several sites in the same domain. For example, a wildcard certificate issued for *.<compliance-software>.io can match both www.<compliance-software>.io and images.<compliance-software>.io. When you use wildcard certificates, if the private key of a certificate is compromised, then all domain and subdomains that use the compromised certificate are potentially impacted. So it is recommended to use single domain name certificates instead of wildcard certificates to reduce the associated risks with a compromised domain or subdomain.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "acm"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ACM_2",
                    "masterSnapshotId": [
                        "TEST_ACM"
                    ],
                    "type": "rego",
                    "rule": "file(acm.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ACM-002",
                            "eval": "data.rule.acm_ct_log",
                            "message": "data.rule.acm_ct_log_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ACM_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS Certificate Manager (ACM) has certificates with Certificate Transparency Logging disabled",
                    "description": "This policy identifies AWS Certificate Manager certificates in which Certificate Transparency Logging is disabled. AWS Certificate Manager (ACM) is the preferred tool to provision, manage, and deploy your server certificates. Certificate Transparency Logging is used to guard against SSL/TLS certificates that are issued by mistake or by a compromised CA, some browsers require that public certificates issued for your domain can also be recorded. This policy generates alerts for certificates which have transparency logging disabled. As a best practice, it is recommended to enable Transparency logging for all certificates.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800"
                            ],
                            "service": [
                                "acm"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ACM_3",
                    "masterSnapshotId": [
                        "TEST_ACM"
                    ],
                    "type": "rego",
                    "rule": "file(acm.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ACM-003",
                            "eval": "data.rule.acm_certificate_arn",
                            "message": "data.rule.acm_certificate_arn_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-certificateauthorityarn' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ACM_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure that the CertificateManager certificates reference only Private ACMPCA certificate authorities",
                    "description": "Ensure that the aws certificate manager/ACMPCA Certificate CertificateAuthorityArn property references (using Fn::GetAtt or Ref) a Private CA, or that the property is not used.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "acm"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECR_1",
                    "masterSnapshotId": [
                        "TEST_ECR"
                    ],
                    "type": "rego",
                    "rule": "file(ecr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECR-001",
                            "eval": "data.rule.ecr_imagetag",
                            "message": "data.rule.ecr_imagetag_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECR_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure ECR image tags are immutable",
                    "description": "Amazon ECR supports immutable tags, preventing image tags from being overwritten. In the past, ECR tags could have been overwritten, this could be overcome by requiring users to uniquely identify an image using a naming convention.Tag Immutability enables users can rely on the descriptive tags of an image as a mechanism to track and uniquely identify images. By setting an image tag as immutable, developers can use the tag to correlate the deployed image version with the build that produced the image.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecr"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECR_2",
                    "masterSnapshotId": [
                        "TEST_ECR"
                    ],
                    "type": "rego",
                    "rule": "file(ecr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECR-002",
                            "eval": "data.rule.ecr_encryption",
                            "message": "data.rule.ecr_encryption_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECR_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure ECR repositories are encrypted",
                    "description": "Make sure EncryptionType is present in ECR EncryptionConfiguration To increase control of the encryption and control the management of factors like key rotation",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecr"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECR_3",
                    "masterSnapshotId": [
                        "TEST_ECR"
                    ],
                    "type": "rego",
                    "rule": "file(ecr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECR-003",
                            "eval": "data.rule.ecr_scan",
                            "message": "data.rule.ecr_scan_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-imagescanningconfiguration.html#cfn-ecr-repository-imagescanningconfiguration-scanonpush' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECR_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure ECR image scan on push is enabled",
                    "description": "Amazon ECR is a fully managed container registry used to store, manage and deploy container images. ECR Image Scanning assesses and identifies operating system vulnerabilities. Using automated image scans you can ensure container image vulnerabilities are found before getting pushed to production. ECR APIs notify if vulnerabilities were found when a scan completes",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecr"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECR_4",
                    "masterSnapshotId": [
                        "TEST_ECR"
                    ],
                    "type": "rego",
                    "rule": "file(ecr.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECR-004",
                            "eval": "data.rule.ecr_public_access_disable",
                            "message": "data.rule.ecr_public_access_disable_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-imagescanningconfiguration.html#cfn-ecr-repository-imagescanningconfiguration-scanonpush' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECR_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure AWS ECR Repository is not publicly accessible",
                    "description": "Public AWS ECR Repository potentially expose existing interfaces to unwanted 3rd parties that can tap into an existing data stream, resulting in data leak to an unwanted party.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecr"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_1",
                    "masterSnapshotId": [
                        "TEST_ECS_03"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECS-001",
                            "eval": "data.rule.ecs_task_evelated",
                            "message": "data.rule.ecs_task_evelated_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECS_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ECS task definition elevated privileges enabled",
                    "description": "Ensure your ECS containers are not given elevated privileges on the host container instance. When the Privileged parameter is true, the container is given elevated privileges on the host container instance (similar to the root user). This policy checks the security configuration of your task definition and alerts if elevated privileges are enabled. Note: This parameter is not supported for Windows containers or tasks using the Fargate launch type.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_2",
                    "masterSnapshotId": [
                        "TEST_ECS_03"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECS-002",
                            "eval": "data.rule.ecs_exec",
                            "message": "data.rule.ecs_exec_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECS_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ECS/Fargate task definition execution IAM Role not found",
                    "description": "The execution IAM Role is required by tasks to pull container images and publish container logs to Amazon CloudWatch on your behalf. This policy generates an alert if a task execution role is not found in your task definition.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_3",
                    "masterSnapshotId": [
                        "TEST_ECS_03"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECS-003",
                            "eval": "data.rule.ecs_root_user",
                            "message": "data.rule.ecs_root_user_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECS_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ECS/ Fargate task definition root user found",
                    "description": "The user name to use inside the container should not be root. This policy generates an alert if root user is found in your container definition. The User parameter maps to User in the Create a container section of the Docker Remote API and the --user option to docker run Note: This parameter is not supported for Windows containers.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_4",
                    "masterSnapshotId": [
                        "TEST_ECS_03"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECS-004",
                            "eval": "data.rule.ecs_root_filesystem",
                            "message": "data.rule.ecs_root_filesystem_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECS_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ECS Task Definition readonlyRootFilesystem Not Enabled",
                    "description": "It is recommended that readonlyRootFilesystem is enabled for AWS ECS task definition. Please make sure your 'ContainerDefinitions' template has 'ReadonlyRootFilesystem' and is set to 'true'.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_5",
                    "masterSnapshotId": [
                        "TEST_ECS_03"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECS-005",
                            "eval": "data.rule.ecs_resource_limit",
                            "message": "data.rule.ecs_resource_limit_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECS_005.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ECS task definition resource limits not set.",
                    "description": "It is recommended that resource limits are set for AWS ECS task definition. Please make sure attributes 'Cpu' or 'Memory' exists and its value is not set to 0 under 'TaskDefinition' or 'ContainerDefinitions'.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_6",
                    "masterSnapshotId": [
                        "TEST_ECS_03"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECS-006",
                            "eval": "data.rule.ecs_logging",
                            "message": "data.rule.ecs_logging_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECS_006.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "AWS ECS task definition logging not enabled. or only valid option for LogDriver is 'awslogs'",
                    "description": "It is recommended that logging is enabled for AWS ECS task definition. Please make sure your 'TaskDefinition' template has 'LogConfiguration' and 'LogDriver' configured.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_7",
                    "masterSnapshotId": [
                        "TEST_ECS_03"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECS-007",
                            "eval": "data.rule.ecs_transit_enabled",
                            "message": "data.rule.ecs_transit_enabled_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-efsvolumeconfiguration.html#cfn-ecs-taskdefinition-efsvolumeconfiguration-transitencryption' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECS_007.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure EFS volumes in ECS task definitions have encryption in transit enabled",
                    "description": "ECS task definitions that have volumes using EFS configuration should explicitly enable in transit encryption to prevent the risk of data loss due to interception.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_8",
                    "masterSnapshotId": [
                        "TEST_ECS_01"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECS-008",
                            "eval": "data.rule.ecs_container_insight_enable",
                            "message": "data.rule.ecs_container_insight_enable_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-cluster-clustersettings.html#cfn-ecs-cluster-clustersettings-name' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECS_009.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure container insights are enabled on ECS cluster",
                    "description": "Container Insights can be used to collect, aggregate, and summarize metrics and logs from containerized applications and microservices. They can also be extended to collect metrics at the cluster, task, and service levels. Using Container Insights allows you to monitor, troubleshoot, and set alarms for all your Amazon ECS resources. It provides a simple to use native and fully managed service for managing ECS issues.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_9",
                    "masterSnapshotId": [
                        "TEST_ECS_02"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECS-009",
                            "eval": "data.rule.ecs_enable_execute_command",
                            "message": "data.rule.ecs_enable_execute_command_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-enableexecutecommand' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECS_008.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure ECS Services and Task Set EnableExecuteCommand property set to False",
                    "description": "If the EnableExecuteCommand property is set to True on an ECS Service then any third person can launch ECS service into an unsafe configuration allowing for external exposure or unaccounted for configurations.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_10",
                    "masterSnapshotId": [
                        "TEST_ECS_02"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECS-010",
                            "eval": "data.rule.ecs_assign_public_ip",
                            "message": "data.rule.ecs_assign_public_ip_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-enableexecutecommand' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECS_010.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure that ECS Service and Task Set network configuration disallows the assignment of public IPs",
                    "description": "Ensure that the ecs service and Task Set Network has set [AssignPublicIp/assign_public_ip] property is set to DISABLED else an Actor can exfiltrate data by associating ECS resources with non-ADATUM resources",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_11",
                    "masterSnapshotId": [
                        "TEST_ECS_02"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECS-011",
                            "eval": "data.rule.ecs_launch_type",
                            "message": "data.rule.ecs_launch_type_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-launchtype' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECS_011.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure that ECS services and Task Sets are launched as Fargate type",
                    "description": "Ensure that ECS services and Task Sets are launched as Fargate type else Actor can launch ECS service into an unsafe configuration allowing for external exposure or unaccounted for configurations",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_12",
                    "masterSnapshotId": [
                        "TEST_ECS_02"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECS-012",
                            "eval": "data.rule.ecs_subnet",
                            "message": "data.rule.ecs_subnet_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-awsvpcconfiguration.html#cfn-ecs-service-awsvpcconfiguration-subnets' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECS_012.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Value(s) of subnets attached to aws ecs service or taskset AwsVpcConfiguration resources are vended",
                    "description": "Value(s) of subnets attached to aws ecs service or taskset AwsVpcConfiguration resources are vended else Actor can exfiltrate data by associating ECS resources with non-ADATUM resources.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_13",
                    "masterSnapshotId": [
                        "TEST_ECS_02"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECS-013",
                            "eval": "data.rule.ecs_security_group",
                            "message": "data.rule.ecs_security_group_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-awsvpcconfiguration.html#cfn-ecs-service-awsvpcconfiguration-securitygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECS_013.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "VPC configurations on ECS Services and TaskSets must use either vended security groups",
                    "description": "ECS Service and ECS TaskSet resources set a SecurityGroup in the AwsvpcConfiguration. else Actor can exfiltrate data by associating ECS resources with non-ADATUM resources.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecs"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_ECS_14",
                    "masterSnapshotId": [
                        "TEST_ECS_03"
                    ],
                    "type": "rego",
                    "rule": "file(ecs.rego)",
                    "evals": [
                        {
                            "id": "PR-AWS-CLD-ECS-014",
                            "eval": "data.rule.ecs_network_mode",
                            "message": "data.rule.ecs_network_mode_err",
                            "remediationDescription": "Make sure you are following the Cloudformation template format presented <a href='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-networkmode' target='_blank'>here</a>",
                            "remediationFunction": "PR_AWS_CLD_ECS_014.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure that ECS Task Definition have their network mode property set to awsvpc",
                    "description": "Ensure that ECS Task Definition have their network mode property set to awsvpc. else an Actor can launch ECS service into an unsafe configuration allowing for external exposure or unaccounted for configurations",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "ecs"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}