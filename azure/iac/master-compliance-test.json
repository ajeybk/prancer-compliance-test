{
    "testSet": [
        {
            "masterTestName": "AZURE_iac_TEST",
            "version": "0.1",
            "cases": [
                {
                    "masterTestId": "TEST_ACTIVITY_LOG_ALERT",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(activitylogalerts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-MNT-001",
                            "eval": "data.rule.alerts",
                            "message": "data.rule.alerts_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for Activity Log Alert by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.insights/2017-04-01/activitylogalerts' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_MNT_001.py"
                        }
                    ],
                    "severity": "Low",
                    "title": "Activity log alerts settings should be enabled",
                    "description": "Activity log alerts are alerts that activate when a new activity log event occurs that matches the conditions specified in the alert. Based on the order and volume of the events recorded in Azure activity log, the alert rule will fire. Activity log alert rules are Azure resources, so they can be created by using an Azure Resource Manager template. ",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "ISO",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.insights/activitylogalerts"
                    ]
                },
                {
                    "masterTestId": "TEST_AKS_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(aks.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AKS-001",
                            "eval": "data.rule.aks_cni_net",
                            "message": "data.rule.aks_cni_net_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for AKS by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.containerservice/managedclusters' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_AKS_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure CNI networking should be enabled in Azure AKS cluster",
                    "description": "Azure CNI provides the following features over kubenet networking:<br><br>- Every pod in the cluster is assigned an IP address in the virtual network. The pods can directly communicate with other pods in the cluster, and other nodes in the virtual network.<br>- Pods in a subnet that have service endpoints enabled can securely connect to Azure services, such as Azure Storage and SQL DB.<br>- You can create user-defined routes (UDR) to route traffic from pods to a Network Virtual Appliance.<br>- Support for Network Policies securing communication between pods.<br><br>This policy checks your AKS cluster for the Azure CNI network plugin and generates an alert if not found.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.containerservice/managedclusters"
                    ]
                },
                {
                    "masterTestId": "TEST_AKS_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(aks.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AKS-002",
                            "eval": "data.rule.aks_http_routing",
                            "message": "data.rule.aks_http_routing_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for AKS by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.containerservice/managedclusters' target='_blank'>here</a> for addonProfiles.httpApplicationRouting.enabled",
                            "remediationFunction": "PR_AZR_ARM_AKS_002.py"
                        }
                    ],
                    "severity": "Low",
                    "title": "Azure AKS cluster HTTP application routing should be disabled",
                    "description": "The HTTP application routing add-on is designed to let you quickly create an ingress controller and access your applications. This add-on is not currently designed for use in a production environment and is not recommended for production use. For production-ready ingress deployments that include multiple replicas and TLS support, see Create an HTTPS ingress controller.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.containerservice/managedclusters"
                    ]
                },
                {
                    "masterTestId": "TEST_AKS_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(aks.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AKS-003",
                            "eval": "data.rule.aks_monitoring",
                            "message": "data.rule.aks_monitoring_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for AKS by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.containerservice/managedclusters' target='_blank'>here</a> for addonProfiles.omsagent.enabled",
                            "remediationFunction": "PR_AZR_ARM_AKS_003.py"
                        }
                    ],
                    "severity": "Low",
                    "title": "Azure AKS cluster monitoring should be enabled",
                    "description": "Azure Monitor for containers gives you performance visibility by collecting memory and processor metrics from controllers, nodes, and containers that are available in Kubernetes through the Metrics API. Container logs are also collected. After you enable monitoring from Kubernetes clusters, metrics and logs are automatically collected for you through a containerized version of the Log Analytics agent for Linux. Metrics are written to the metrics store and log data is written to the logs store associated with your Log Analytics workspace.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.containerservice/managedclusters"
                    ]
                },
                {
                    "masterTestId": "TEST_AKS_4",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(aks.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AKS-004",
                            "eval": "data.rule.aks_nodes",
                            "message": "data.rule.aks_nodes_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for AKS by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.containerservice/managedclusters' target='_blank'>here</a>. Set minCount for Minimum number of nodes for auto-scaling to 3",
                            "remediationFunction": "PR_AZR_ARM_AKS_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure AKS cluster pool profile count should contain 3 nodes or more",
                    "description": "Ensure your AKS cluster pool profile count contains 3 or more nodes. This is recommended for a more resilient cluster. (Clusters smaller than 3 may experience downtime during upgrades.)<br><br>This policy checks the size of your cluster pool profiles and alerts if there are fewer than 3 nodes.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.containerservice/managedclusters"
                    ]
                },
                {
                    "masterTestId": "TEST_AKS_5",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(aks.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AKS-005",
                            "eval": "data.rule.aks_rbac",
                            "message": "data.rule.aks_rbac_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for AKS by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.containerservice/managedclusters' target='_blank'>here</a>. Set enable RBAC to true to enable Kubernetes Role-Based Access Control.",
                            "remediationFunction": "PR_AZR_ARM_AKS_005.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure AKS enable role-based access control (RBAC) should be enforced",
                    "description": "To provide granular filtering of the actions that users can perform, Kubernetes uses role-based access controls (RBAC). This control mechanism lets you assign users, or groups of users, permission to do things like create or modify resources, or view logs from running application workloads. These permissions can be scoped to a single namespace, or granted across the entire AKS cluster._x005F<br>_x005F<br>This policy checks your AKS cluster RBAC setting and alerts if disabled.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.containerservice/managedclusters"
                    ]
                },
                {
                    "masterTestId": "TEST_AKS_6",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(aks.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AKS-006",
                            "eval": "data.rule.aks_aad_azure_rbac",
                            "message": "data.rule.aks_aad_azure_rbac_err",
                            "remediationDescription": "Make sure aadProfile property of type object exist in ARM template with boolean managed = true and enableAzureRBAC = true as child property. Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.containerservice/managedclusters?tabs=json#managedclusteraadprofile-object' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_AKS_006.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Managed Azure AD RBAC for AKS cluster should be enabled",
                    "description": "Azure Kubernetes Service (AKS) can be configured to use Azure Active Directory (AD) for user authentication. In this configuration, you sign in to an AKS cluster using an Azure AD authentication token. You can also configure Kubernetes role-based access control (Kubernetes RBAC) to limit access to cluster resources based a user's identity or group membership. Visit https://docs.microsoft.com/en-us/azure/aks/azure-ad-rbac for details.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.containerservice/managedclusters"
                    ]
                },
                {
                    "masterTestId": "TEST_AKS_9",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(aks.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AKS-009",
                            "eval": "data.rule.aks_kub_dashboard_disabled",
                            "message": "data.rule.aks_kub_dashboard_disabled_err",
                            "remediationDescription": "For resource type 'microsoft.containerservice/managedclusters' make sure property 'addonProfiles.kubeDashboard.enabled' exist and its value set to 'false' to fix the issue. Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.containerservice/managedclusters?tabs=json' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_AKS_009.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Kubernetes Dashboard is disabled",
                    "description": "Disable the Kubernetes dashboard on Azure Kubernetes Service",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.containerservice/managedclusters"
                    ]
                },
                {
                    "masterTestId": "TEST_APPLICATION_GATEWAYS_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(applicationgateways.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AGW-001",
                            "eval": "data.rule.gw_tls",
                            "message": "data.rule.gw_tls_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for Application Gateway by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/applicationgateways' target='_blank'>here</a>. Ssl protocols to be disabled on application gateway. - TLSv1_0, TLSv1_1",
                            "remediationFunction": "PR_AZR_ARM_AGW_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Application Gateway should not allow TLSv1.1 or lower",
                    "description": "Transport Layer Security (TLS), previously known as Secure Sockets Layer (SSL), is the standard security technology for establishing an encrypted link between a web server and a browser. This link ensures that all data passed between the web server and browsers remain private and encrypted. Application gateway supports both TLS termination at the gateway as well as end to end TLS encryption. The minimum allowed TLS version should be 1.2",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/applicationgateways"
                    ]
                },
                {
                    "masterTestId": "TEST_APPLICATION_GATEWAYS_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(applicationgateways.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AGW-002",
                            "eval": "data.rule.gw_waf",
                            "message": "data.rule.gw_waf_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for Application Gateway by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/applicationgateways' target='_blank'>here</a>. webApplicationFirewallConfiguration should be enabled",
                            "remediationFunction": "PR_AZR_ARM_AGW_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Application Gateway should have the Web application firewall (WAF) enabled",
                    "description": "Azure Web Application Firewall (WAF) on Azure Application Gateway provides centralized protection of your web applications from common exploits and vulnerabilities. Web applications are increasingly targeted by malicious attacks that exploit commonly known vulnerabilities. SQL injection and cross-site scripting are among the most common attacks.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/applicationgateways"
                    ]
                },
                {
                    "masterTestId": "TEST_APPLICATION_GATEWAYS_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(applicationgateways.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AGW-003",
                            "eval": "data.rule.protocol",
                            "message": "data.rule.protocol_err",
                            "remediationDescription": "",
                            "remediationFunction": "PR_AZR_ARM_AGW_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Application Gateway is using Https protocol",
                    "description": "Application Gateway allows to set network protocols Http and Https. It is highly recommended to use Https protocol for secure connections.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/applicationgateways"
                    ]
                },
                {
                    "masterTestId": "TEST_APPLICATION_GATEWAYS_4",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(applicationgateways.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AGW-004",
                            "eval": "data.rule.frontendPublicIPConfigurationsDisabled",
                            "message": "data.rule.frontendPublicIPConfigurationsDisabled_err",
                            "remediationDescription": "For resource type 'microsoft.network/applicationgateways' make sure 'properties.publicIPAddress' does not exist under 'frontendIPConfigurations' to fix the issue.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/applicationgateways?tabs=json#applicationgatewayfrontendipconfiguration' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_AGW_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Application Gateway frontendIPConfigurations does not have public ip configured",
                    "description": "Application Gateway allows to set public or private ip in frontendIPConfigurations. It is highly recommended to only configure private ip in frontendIPConfigurations.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/applicationgateways"
                    ]
                },
                {
                    "masterTestId": "TEST_APPLICATION_GATEWAYS_5",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(applicationgateways.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AGW-005",
                            "eval": "data.rule.backend_https_protocol_enabled",
                            "message": "data.rule.backend_https_protocol_enabled_err",
                            "remediationDescription": "For resource type 'microsoft.network/applicationgateways' make sure 'properties.protocol' has value 'https' under 'backendHttpSettingsCollection' to fix the issue.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/applicationgateways?tabs=json#applicationgatewaybackendhttpsettings' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_AGW_005.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Application Gateway Backend is using Https protocol",
                    "description": "Application Gateway allows to set backend network protocols Http and Https. It is highly recommended to use Https protocol for secure connections.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/applicationgateways"
                    ]
                },
                {
                    "masterTestId": "TEST_APPLICATION_GATEWAYS_6",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(applicationgateways.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AGW-006",
                            "eval": "data.rule.secret_certificate_is_in_keyvalut",
                            "message": "data.rule.secret_certificate_is_in_keyvalut_err",
                            "remediationDescription": "For resource type 'microsoft.network/applicationgateways' make sure 'properties.keyVaultSecretId' has target key vault id under 'sslCertificates' to fix the issue.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/applicationgateways?tabs=json#applicationgatewaysslcertificate' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_AGW_006.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Application Gateway secret certificates stores in keyvault",
                    "description": "This policy will identify application gateways which dont have ssl certificates stored in keyvalut and alert",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/applicationgateways"
                    ]
                },
                {
                    "masterTestId": "TEST_BLOB_SERVICE_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(blobservices.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-STR-001",
                            "eval": "data.rule.storage_blob_soft_delete",
                            "message": "data.rule.storage_blob_soft_delete_err",
                            "remediationDescription": "For resource type \"Microsoft.storage/storageaccounts/blobservices\" make sure properties.deleteRetentionPolicy.enabled exists and value is set to true .<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts/blobservices' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_STR_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Soft delete on blob service should be enabled",
                    "description": "The blob service properties for blob soft delete. It helps to restore removed blob within configured retention days",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA=CCM",
                                "HITTRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts/blobservices"
                    ]
                },
                {
                    "masterTestId": "TEST_BLOB_SERVICE_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(blobservices.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-STR-002",
                            "eval": "data.rule.storage_blob_container_soft_delete",
                            "message": "data.rule.storage_blob_container_soft_delete_err",
                            "remediationDescription": "For resource type \"Microsoft.storage/storageaccounts/blobservices\" make sure properties.containerDeleteRetentionPolicy.enabled exists and value is set to true .<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts/blobservices' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_STR_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Soft delete on blob service container should be enabled",
                    "description": "The blob service properties for container soft delete. It helps to restore removed blob containers within configured retention days.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA=CCM",
                                "HITTRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts/blobservices"
                    ]
                },
                {
                    "masterTestId": "TEST_DATABRICKS_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(databricks.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-DBK-001",
                            "eval": "data.rule.databrics_workspace_has_public_ip_disabled",
                            "message": "data.rule.databrics_workspace_has_public_ip_disabled_err",
                            "remediationDescription": "In Resource of type \"microsoft.databricks/workspaces\" make sure properties.parameters.enableNoPublicIp exist and its value set to true.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.databricks/workspaces?tabs=json' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_DBK_001.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Databricks shoud not use public IP address",
                    "description": "Azure Databricks is a data analytics platform optimized for the Microsoft Azure cloud services platform. This policy will identify Databricks which does not have public ip disabled and warn.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.databricks/workspaces"
                    ]
                },
                {
                    "masterTestId": "TEST_DATABRICKS_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(databricks.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-DBK-002",
                            "eval": "data.rule.databrics_workspace_has_vnet_integration",
                            "message": "data.rule.databrics_workspace_has_vnet_integration_err",
                            "remediationDescription": "In Resource of type \"microsoft.databricks/workspaces\" make sure properties.parameters.customVirtualNetworkId exist and its value set to id of existing vnet.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.databricks/workspaces?tabs=json' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_DBK_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Databricks should have vnet integration",
                    "description": "Azure Databricks is a data analytics platform optimized for the Microsoft Azure cloud services platform. This policy will identify Databricks which does not have vnet integration and warn.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.databricks/workspaces"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_ADMINISTRATORS_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbadministrators.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-001",
                            "eval": "data.rule.sql_server_ad_admin",
                            "message": "data.rule.sql_server_ad_admin_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2019-06-01-preview/servers/administrators' target='_blank'>here</a>. administratorType should be ActiveDirectory",
                            "remediationFunction": "PR_AZR_ARM_SQL_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "SQL servers should be integrated with Azure Active Directory for administration",
                    "description": "Checks to ensure that SQL servers are configured with Active Directory admin authentication. Azure Active Directory (Azure AD) authentication is a mechanism for connecting to Azure SQL Database, Azure SQL Managed Instance, and Synapse SQL in Azure Synapse Analytics by using identities in Azure AD. With Azure AD authentication, you can centrally manage the identities of database users and other Microsoft services in one central location. Central ID management provides a single place to manage database users and simplifies permission management.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/managedinstances/administrators",
                        "microsoft.sql/servers/administrators"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_ADMINISTRATORS_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbadministrators.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-003",
                            "eval": "data.rule.sql_managedinstances_ad_admin",
                            "message": "data.rule.sql_managedinstances_ad_admin_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL managedInstances by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/managedinstances/administrators?tabs=json' target='_blank'>here</a>. administratorType should be ActiveDirectory",
                            "remediationFunction": "PR_AZR_ARM_SQL_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "SQL managedInstances should be integrated with Azure Active Directory for administration",
                    "description": "Checks to ensure that SQL managedInstances are configured with Active Directory admin authentication. Azure Active Directory (Azure AD) authentication is a mechanism for connecting to Azure SQL Database, Azure SQL Managed Instance, and Synapse SQL in Azure Synapse Analytics by using identities in Azure AD. With Azure AD authentication, you can centrally manage the identities of database users and other Microsoft services in one central location. Central ID management provides a single place to manage database users and simplifies permission management.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/managedinstances/administrators",
                        "microsoft.sql/servers/administrators"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_ADMINISTRATORS_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbadministrators.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-002",
                            "eval": "data.rule.sql_logical_server_ad_admin",
                            "message": "data.rule.sql_logical_server_ad_admin_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2019-06-01-preview/servers/administrators' target='_blank'>here</a>. administratorType should be ActiveDirectory",
                            "remediationFunction": "PR_AZR_ARM_SQL_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "SQL servers should be integrated with Azure Active Directory for administration",
                    "description": "Checks to ensure that SQL servers are configured with Active Directory admin authentication. Azure Active Directory (Azure AD) authentication is a mechanism for connecting to Azure SQL Database, Azure SQL Managed Instance, and Synapse SQL in Azure Synapse Analytics by using identities in Azure AD. With Azure AD authentication, you can centrally manage the identities of database users and other Microsoft services in one central location. Central ID management provides a single place to manage database users and simplifies permission management.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/managedinstances/administrators",
                        "microsoft.sql/servers/administrators"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_AUDITING_SETTINGS_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbauditingsettings.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-004",
                            "eval": "data.rule.sql_db_log_audit",
                            "message": "data.rule.sql_db_log_audit_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2017-03-01-preview/servers/databases/auditingsettings' target='_blank'>here</a> . Make sure the state of auditing is enabled",
                            "remediationFunction": "PR_AZR_ARM_SQL_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Auditing for SQL database should be enabled",
                    "description": "Database events are tracked by the Auditing feature and the events are written to an audit log in your Azure storage account. This process helps you to monitor database activity, and get insight into anomalies that could indicate business concerns or suspected security violations.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases",
                        "microsoft.sql/servers/databases/auditingsettings"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_AUDITING_SETTINGS_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbauditingsettings.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-006",
                            "eval": "data.rule.sql_db_log_retention",
                            "message": "data.rule.sql_db_log_retention_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2017-03-01-preview/servers/databases/auditingsettings' target='_blank'>here</a>. Make sure retentionDays is at least 90",
                            "remediationFunction": "PR_AZR_ARM_SQL_006.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure SQL Database Auditing Retention should be 90 days or more",
                    "description": "This policy identifies SQL Databases which have Auditing Retention less than 90 days. Audit Logs can be used to check for anomalies and gives insight into suspected breaches or misuse of information and access. It is recommended to configure SQL database Audit Retention to be greater than or equal to 90 days.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases",
                        "microsoft.sql/servers/databases/auditingsettings"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_AUDITING_SETTINGS_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbauditingsettings.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-005",
                            "eval": "data.rule.sql_logical_db_log_audit",
                            "message": "data.rule.sql_logical_db_log_audit_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2017-03-01-preview/servers/databases/auditingsettings' target='_blank'>here</a>. Make sure the state of auditing is enabled",
                            "remediationFunction": "PR_AZR_ARM_SQL_005.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Auditing for SQL database should be enabled",
                    "description": "Database events are tracked by the Auditing feature and the events are written to an audit log in your Azure storage account. This process helps you to monitor database activity, and get insight into anomalies that could indicate business concerns or suspected security violations.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases",
                        "microsoft.sql/servers/databases/auditingsettings"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_AUDITING_SETTINGS_4",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbauditingsettings.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-007",
                            "eval": "data.rule.sql_logical_db_log_retention",
                            "message": "data.rule.sql_logical_db_log_retention_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2017-03-01-preview/servers/databases/auditingsettings' target='_blank'>here</a>. Make sure retentionDays is at least 90",
                            "remediationFunction": "PR_AZR_ARM_SQL_007.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure SQL Database Auditing Retention should be 90 days or more",
                    "description": "This policy identifies SQL Databases which have Auditing Retention less than 90 days. Audit Logs can be used to check for anomalies and gives insight into suspected breaches or misuse of information and access. It is recommended to configure SQL database Audit Retention to be greater than or equal to 90 days.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases",
                        "microsoft.sql/servers/databases/auditingsettings"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_ENCRYPTIONS_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbdataencryption.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-009",
                            "eval": "data.rule.db_encrypt",
                            "message": "data.rule.db_encrypt_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2014-04-01/servers/databases/transparentdataencryption' target='_blank'>here</a>. status should be Enabled",
                            "remediationFunction": "PR_AZR_ARM_SQL_009.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure SQL databases should have transparent data encryption enabled",
                    "description": "Transparent data encryption protects Azure database against malicious activity. It performs real-time encryption and decryption of the database, related reinforcements, and exchange log records without requiring any changes to the application. It encrypts the storage of the entire database by using a symmetric key called the database encryption key.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases",
                        "microsoft.sql/servers/databases/transparentdataencryption"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_ENCRYPTIONS_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbdataencryption.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-008",
                            "eval": "data.rule.db_logical_encrypt",
                            "message": "data.rule.db_logical_encrypt_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2014-04-01/servers/databases/transparentdataencryption' target='_blank'>here</a>. status should be Enabled",
                            "remediationFunction": "PR_AZR_ARM_SQL_008.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure SQL databases should have transparent data encryption enabled",
                    "description": "Transparent data encryption protects Azure database against malicious activity. It performs real-time encryption and decryption of the database, related reinforcements, and exchange log records without requiring any changes to the application. It encrypts the storage of the entire database by using a symmetric key called the database encryption key.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases",
                        "microsoft.sql/servers/databases/transparentdataencryption"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_FIREWALL_RULES_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbfirewallrules.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-010",
                            "eval": "data.rule.db_logical_firewall",
                            "message": "data.rule.db_logical_firewall_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2015-05-01-preview/servers/firewallrules' target='_blank'>here</a>. startIPAddress and endIPAddress should not be 0.0.0.0",
                            "remediationFunction": "PR_AZR_ARM_SQL_010.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "SQL Server Firewall rules should not configure to allow full inbound access to everyone",
                    "description": "Firewalls grant access to databases based on the originating IP address of each request and should be within the range of START IP and END IP. Firewall settings with START IP and END IP both with \"0.0.0.0\" represents access to all Azure internal network. This setting needs to be turned-off to remove blanket access.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/servers/firewallrules"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_FIREWALL_RULES_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbfirewallrules.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-011",
                            "eval": "data.rule.db_firewall",
                            "message": "data.rule.db_firewall_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2015-05-01-preview/servers/firewallrules' target='_blank'>here</a>. startIPAddress and endIPAddress should not be 0.0.0.0",
                            "remediationFunction": "PR_AZR_ARM_SQL_011.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "SQL Server Firewall rules should not configure to allow full inbound access to everyone",
                    "description": "Firewalls grant access to databases based on the originating IP address of each request and should be within the range of START IP and END IP. Firewall settings with START IP and END IP both with \"0.0.0.0\" represents access to all Azure internal network. This setting needs to be turned-off to remove blanket access.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/servers/firewallrules"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_SECURITY_ALERTS_POLICIES_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbsecurityalertpolicies.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-017",
                            "eval": "data.rule.dbsec_threat_off",
                            "message": "data.rule.dbsec_threat_off_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2018-06-01-preview/servers/databases/securityalertpolicies' target='_blank'>here</a>. state should be enabled",
                            "remediationFunction": "PR_AZR_ARM_SQL_017.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "SQL Databases should have security alert policies enabled",
                    "description": "SQL Threat Detection provides a new layer of security, which enables customers to detect and respond to potential threats as they occur by providing security alerts on anomalous activities. Users will receive an alert upon suspicious database activities, potential vulnerabilities, and SQL injection attacks, as well as anomalous database access patterns. SQL Threat Detection alerts provide details of suspicious activity and recommend action on how to investigate and mitigate the threat.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_SECURITY_ALERTS_POLICIES_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbsecurityalertpolicies.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-018",
                            "eval": "data.rule.dbsec_threat_retention",
                            "message": "data.rule.dbsec_threat_retention_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2018-06-01-preview/servers/databases/securityalertpolicies' target='_blank'>here</a>. retentionDays should be more than 90 days",
                            "remediationFunction": "PR_AZR_ARM_SQL_018.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure SQL Database security alert policies thread retention should be configured for more than 90 days",
                    "description": "This policy identifies SQL Databases which have security alert policies retention set less than or equals to 90 days. Threat Logs can be used to check for anomalies and gives an understanding of suspected breaches or misuse of data and access. It is recommended to configure SQL database Threat Retention to be greater than 90 days.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_SECURITY_ALERTS_POLICIES_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbsecurityalertpolicies.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-019",
                            "eval": "data.rule.dbsec_threat_email",
                            "message": "data.rule.dbsec_threat_email_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2018-06-01-preview/servers/databases/securityalertpolicies' target='_blank'>here</a>. emailAccountAdmins and emailAddresses should be set",
                            "remediationFunction": "PR_AZR_ARM_SQL_019.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure SQL Databases Security Alert Policy should be configured to send alert to the account administrators and configured email addresses",
                    "description": "Checks to ensure that an valid email address is set for Threat Detection alerts. The alerts are sent to this email address when any anomalous activities are detected on SQL databases.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HIPAA",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_SECURITY_ALERTS_POLICIES_4",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbsecurityalertpolicies.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-020",
                            "eval": "data.rule.dbsec_threat_alert",
                            "message": "data.rule.dbsec_threat_alert_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2018-06-01-preview/servers/databases/securityalertpolicies' target='_blank'>here</a>. disabledAlerts should be empty or not present",
                            "remediationFunction": "PR_AZR_ARM_SQL_020.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure SQL Server threat detection alerts should be enabled for all threat types",
                    "description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification._x005F<br>_x005F<br>This policy identifies Azure SQL servers that have disabled the detection of one or more threat types. To protect your SQL Servers, as a best practice, enable ADS detection for all types of threats.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_SECURITY_ALERTS_POLICIES_5",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbsecurityalertpolicies.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-021",
                            "eval": "data.rule.sql_alert",
                            "message": "data.rule.sql_alert_err",
                            "remediationDescription": "In Resource of type \"microsoft.sql/servers/databases/securityalertpolicies\" make sure properties.emailAccountAdmins exist and its value set to true.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2018-06-01-preview/servers/databases/securityalertpolicies' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_021.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Threat Detection alert should be configured to sent notification to the sql server account administrators",
                    "description": "Ensure that threat detection alert is configured to sent notification to the sql server account administrators",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_VULNERABILITY_ASSESSMENTS_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbvulnerabilityassessments.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-022",
                            "eval": "data.rule.db_ads_scan",
                            "message": "data.rule.db_ads_scan_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2017-03-01-preview/servers/databases/vulnerabilityassessments' target='_blank'>here</a>. recurringScans should be enabled",
                            "remediationFunction": "PR_AZR_ARM_SQL_022.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure SQL Server advanced data security should be enabled",
                    "description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification.<br><br>This policy identifies Azure SQL servers that do not have ADS enabled. As a best practice, enable ADS on mission-critical SQL servers.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases",
                        "microsoft.sql/servers/databases/vulnerabilityassessments"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_VULNERABILITY_ASSESSMENTS_4",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbvulnerabilityassessments.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-023",
                            "eval": "data.rule.db_logical_ads_scan",
                            "message": "data.rule.db_logical_ads_scan_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2017-03-01-preview/servers/databases/vulnerabilityassessments' target='_blank'>here</a>. recurringScans should be enabled",
                            "remediationFunction": "PR_AZR_ARM_SQL_023.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure SQL Server advanced data security should be enabled",
                    "description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification.<br><br>This policy identifies Azure SQL servers that do not have ADS enabled. As a best practice, enable ADS on mission-critical SQL servers.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases",
                        "microsoft.sql/servers/databases/vulnerabilityassessments"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_VULNERABILITY_ASSESSMENTS_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbvulnerabilityassessments.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-024",
                            "eval": "data.rule.db_ads_mail",
                            "message": "data.rule.db_ads_mail_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2017-03-01-preview/servers/databases/vulnerabilityassessments' target='_blank'>here</a>. Specifies an array of e-mail addresses to which the scan notification is sent.",
                            "remediationFunction": "PR_AZR_ARM_SQL_024.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure SQL Server advanced data security should have email alert recipient to get scan notification",
                    "description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification.<br><br>This policy identifies Azure SQL Servers that do not have an email address configured for ADS alert notifications. As a best practice, provide one or more email addresses where you want to receive alerts for any anomalous activities detected on SQL Servers.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases",
                        "microsoft.sql/servers/databases/vulnerabilityassessments"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_VULNERABILITY_ASSESSMENTS_5",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbvulnerabilityassessments.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-025",
                            "eval": "data.rule.db_logical_ads_mail",
                            "message": "data.rule.db_logical_ads_mail_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2017-03-01-preview/servers/databases/vulnerabilityassessments' target='_blank'>here</a>. Specifies an array of e-mail addresses to which the scan notification is sent.",
                            "remediationFunction": "PR_AZR_ARM_SQL_025.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure SQL Server advanced data security should have email alert recipient to get scan notification",
                    "description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification.<br><br>This policy identifies Azure SQL Servers that do not have an email address configured for ADS alert notifications. As a best practice, provide one or more email addresses where you want to receive alerts for any anomalous activities detected on SQL Servers.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases",
                        "microsoft.sql/servers/databases/vulnerabilityassessments"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_VULNERABILITY_ASSESSMENTS_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbvulnerabilityassessments.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-026",
                            "eval": "data.rule.db_ads_alert",
                            "message": "data.rule.db_ads_alert_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2017-03-01-preview/servers/databases/vulnerabilityassessments' target='_blank'>here</a>. Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                            "remediationFunction": "PR_AZR_ARM_SQL_026.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure SQL Server advanced data security should send alerts to subscription administrators",
                    "description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification.<br><br>This policy identifies Azure SQL Servers that are not enabled with ADS. As a best practice, enable ADS so that the subscription admin can receive email alerts when anomalous activities are detected on the SQL Servers.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases",
                        "microsoft.sql/servers/databases/vulnerabilityassessments"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_VULNERABILITY_ASSESSMENTS_6",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbvulnerabilityassessments.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-027",
                            "eval": "data.rule.db_logical_ads_alert",
                            "message": "data.rule.db_logical_ads_alert_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2017-03-01-preview/servers/databases/vulnerabilityassessments' target='_blank'>here</a>. Specifies that the schedule scan notification will be is sent to the subscription administrators.",
                            "remediationFunction": "PR_AZR_ARM_SQL_027.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure SQL Server advanced data security should send alerts to subscription administrators",
                    "description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification.<br><br>This policy identifies Azure SQL Servers that are not enabled with ADS. As a best practice, enable ADS so that the subscription admin can receive email alerts when anomalous activities are detected on the SQL Servers.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/databases",
                        "microsoft.sql/servers/databases/vulnerabilityassessments"
                    ]
                },
                {
                    "masterTestId": "TEST_DIAGONASTIC_SETTINGS_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(diagnosticsettings.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-MNT-002",
                            "eval": "data.rule.log_keyvault",
                            "message": "data.rule.log_keyvault_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.insights/diagnosticsettings' target='_blank'>here</a>. Make sure to enable diagnostics settings for keyvault",
                            "remediationFunction": "PR_AZR_ARM_MNT_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Key Vault audit logging should be enabled",
                    "description": "This policy identifies Azure Key Vault instances for which audit logging is disabled. As a best practice, enable audit event logging for Key Vault instances to monitor how and when your key vaults are accessed, and by whom.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/queueservices/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/tableservices/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/blobservices/providers/diagnosticsettings",
                        "microsoft.network/loadbalancers/providers/diagnosticsettings",
                        "microsoft.keyvault/vaults/providers/diagnosticsettings"
                    ]
                },
                {
                    "masterTestId": "TEST_DIAGONASTIC_SETTINGS_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(diagnosticsettings.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-MNT-003",
                            "eval": "data.rule.log_lbs",
                            "message": "data.rule.log_lbs_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.insights/diagnosticsettings' target='_blank'>here</a>. Make sure to enable diagnostics settings for load balancers",
                            "remediationFunction": "PR_AZR_ARM_MNT_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Load Balancer diagnostics logs should be enabled",
                    "description": "Azure Load Balancers provide different types of logs alert events, health probe, metrics to help you manage and troubleshoot issues. This policy identifies Azure Load Balancers that have diagnostics logs disabled. As a best practice, enable diagnostic logs to start collecting the data available through these logs.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/queueservices/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/tableservices/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/blobservices/providers/diagnosticsettings",
                        "microsoft.network/loadbalancers/providers/diagnosticsettings",
                        "microsoft.keyvault/vaults/providers/diagnosticsettings"
                    ]
                },
                {
                    "masterTestId": "TEST_DIAGONASTIC_SETTINGS_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(diagnosticsettings.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-MNT-004",
                            "eval": "data.rule.log_storage_retention",
                            "message": "data.rule.log_storage_retention_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.insights/diagnosticsettings' target='_blank'>here</a>. retentionPolicy should be enabled and more than 90 days",
                            "remediationFunction": "PR_AZR_ARM_MNT_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Storage Account auditing retention should be 90 days or more",
                    "description": "This policy identifies Storage Accounts which have Auditing Retentions less than 90 days. Audit Logs can be used to check for anomalies and gives insight into suspected breaches or misuse of information and access. It is recommended to configure Storage Account Audit Log Retention to be greater than or equal to 90 days.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/queueservices/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/tableservices/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/blobservices/providers/diagnosticsettings",
                        "microsoft.network/loadbalancers/providers/diagnosticsettings",
                        "microsoft.keyvault/vaults/providers/diagnosticsettings"
                    ]
                },
                {
                    "masterTestId": "TEST_DIAGONASTIC_SETTINGS_4",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(diagnosticsettings.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-MNT-005",
                            "eval": "data.rule.log_blob",
                            "message": "data.rule.log_blob_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.insights/diagnosticsettings' target='_blank'>here</a>. Should be enabled for blobs",
                            "remediationFunction": "PR_AZR_ARM_MNT_005.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure storage account blob services diagnostic logs should be enabled",
                    "description": "Storage Logging records details of requests (read, write, and delete operations) against your Azure blobs. The logs include additional information such as:<br>- Timing and server latency.<br>- Success or failure, and HTTP status code.<br>- Authentication details<br><br>This policy identifies Azure storage accounts that do not have logging enabled for blobs. As a best practice, enable logging for read, write, and delete request types on blobs.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/queueservices/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/tableservices/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/blobservices/providers/diagnosticsettings",
                        "microsoft.network/loadbalancers/providers/diagnosticsettings",
                        "microsoft.keyvault/vaults/providers/diagnosticsettings"
                    ]
                },
                {
                    "masterTestId": "TEST_DIAGONASTIC_SETTINGS_5",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(diagnosticsettings.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-MNT-006",
                            "eval": "data.rule.log_queue",
                            "message": "data.rule.log_queue_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.insights/diagnosticsettings' target='_blank'>here</a>. Should be enabled for queues",
                            "remediationFunction": "PR_AZR_ARM_MNT_006.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure storage account queue services diagnostic logs should be enabled",
                    "description": "Queue logging cannot be enabled for Storage Accounts with 'kind' of BlobStorage **<br><br>Storage Logging records details of requests (read, write, and delete operations) against your Azure queues. The logs include additional information such as:<br>- Timing and server latency.<br>- Success or failure, and HTTP status code.<br>- Authentication details<br><br>This policy identifies Azure storage accounts that do not have logging enabled for queues. As a best practice, enable logging for read, write, and delete request types on queues.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/queueservices/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/tableservices/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/blobservices/providers/diagnosticsettings",
                        "microsoft.network/loadbalancers/providers/diagnosticsettings",
                        "microsoft.keyvault/vaults/providers/diagnosticsettings"
                    ]
                },
                {
                    "masterTestId": "TEST_DIAGONASTIC_SETTINGS_6",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(diagnosticsettings.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-MNT-007",
                            "eval": "data.rule.log_table",
                            "message": "data.rule.log_table_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for SQL Server by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.insights/diagnosticsettings' target='_blank'>here</a>. Should be enabled for tables",
                            "remediationFunction": "PR_AZR_ARM_MNT_007.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure storage account table services diagnostic logs should be enabled",
                    "description": "Storage Logging records details of requests (read, write, and delete operations) against your Azure queues. The logs include additional information such as:_x005F<br>- Timing and server latency._x005F<br>- Success or failure, and HTTP status code._x005F<br>- Authentication details_x005F<br>_x005F<br>This policy identifies Azure storage accounts that do not have logging enabled for tables. As a best practice, enable logging for read, write, and delete request types on tables.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/queueservices/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/tableservices/providers/diagnosticsettings",
                        "microsoft.storage/storageaccounts/blobservices/providers/diagnosticsettings",
                        "microsoft.network/loadbalancers/providers/diagnosticsettings",
                        "microsoft.keyvault/vaults/providers/diagnosticsettings"
                    ]
                },
                {
                    "masterTestId": "TEST_DISKS",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(disks.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-DSK-001",
                            "eval": "data.rule.disk_encrypt",
                            "message": "data.rule.disk_encrypt_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for Disks by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.compute/disks' target='_blank'>here</a>. encryptionSettingsCollection enabled should be true",
                            "remediationFunction": "PR_AZR_ARM_DSK_001.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure disk should have Azure Disk Encryption (ADE) enabled",
                    "description": "To meet your organizational security or compliance requirement, Azure provides disk encryption at rest using Azure Storage Service Encryption (SSE) and Azure Disk Encryption (ADE). Starting February 2017, SSE is enabled by default for all managed disks. ADE is integrated with Azure Key Vault to help you control, manage, and audit the disk encryption keys and secrets.<br><br>This policy detects Virtual Machine (VM) OS disks that are not encrypted at rest using ADE. As a best practice, enable ADE for provide volume encryption for the OS disk. For more information, see https://docs.microsoft.com/en-us/azure/security/azure-security-disk-encryption-overview.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.compute/disks"
                    ]
                },
                {
                    "masterTestId": "TEST_KeyVault_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(KeyVault.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-KV-001",
                            "eval": "data.rule.KeyVault",
                            "message": "data.rule.KeyVault_err",
                            "remediationDescription": "In Resource of type \"Microsoft.KeyVault/vaults\" make sure you have added either permissions.keys or permissions.secrets or permissions.certificates under each AccessPolicyEntry of properties.accessPolicies.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults?tabs=json' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_KV_001.py"
                        }
                    ],
                    "severity": "Low",
                    "title": "Ensure at least one principal has access to Keyvault",
                    "description": "Use the Azure Key Vault to store secrets within the Microsoft Azure environment. Secrets in Azure Key Vault are octet sequences with a maximum size of 25k bytes each.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices",
                                "HIPAA",
                                "NIST CSF"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.keyvault/vaults"
                    ]
                },
                {
                    "masterTestId": "TEST_KeyVault_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(KeyVault.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-KV-002",
                            "eval": "data.rule.enableSoftDelete",
                            "message": "data.rule.enableSoftDelete_err",
                            "remediationDescription": "In Resource of type \"Microsoft.KeyVault/vaults\" make sure properties.enableSoftDelete exists and value is set to true.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults?tabs=json' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_KV_002.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure the key vault is recoverable - enable 'Soft Delete' setting for a Key Vault",
                    "description": "The key vault contains object keys, secrets and certificates. Accidental unavailability of a key vault can cause immediate data loss or loss of security functions (authentication, validation, verification, non-repudiation, etc.) supported by the key vault objects. It is recommended the key vault be made recoverable by enabling the 'Do Not Purge' and 'Soft Delete' functions. This is in order to prevent loss of encrypted data including storage accounts, SQL databases, and/or dependent services provided by key vault objects (Keys, Secrets, Certificates) etc., as may happen in the case of accidental deletion by a user or from disruptive activity by a malicious user.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.keyvault/vaults"
                    ]
                },
                {
                    "masterTestId": "TEST_KeyVault_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(KeyVault.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-KV-003",
                            "eval": "data.rule.enablePurgeProtection",
                            "message": "data.rule.enablePurgeProtection_err",
                            "remediationDescription": "In Resource of type \"Microsoft.KeyVault/vaults\" make sure properties.enablePurgeProtection exists and value is set to true.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults?tabs=json' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_KV_003.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Key vault should have purge protection enabled",
                    "description": "The key vault contains object keys, secrets and certificates. Accidental unavailability of a key vault can cause immediate data loss or loss of security functions (authentication, validation, verification, non-repudiation",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices "
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.keyvault/vaults"
                    ]
                },
                {
                    "masterTestId": "TEST_KEYVAULT_KEYS",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(keyvaultkeys.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-KV-004",
                            "eval": "data.rule.kv_keys_expire",
                            "message": "data.rule.kv_keys_expire_err",
                            "remediationDescription": "In Resource of type \"Microsoft.KeyVault/vaults/keys\" make sure properties.attributes.exp exists and value isn't set empty.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults/keys' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_KV_004.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Key Vault keys should have an expiration date",
                    "description": "This policy identifies Azure Key Vault keys that do not have an expiration date. As a best practice, set an expiration date for each secret and rotate the secret regularly.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "PCI-DSS",
                                "GDPR",
                                "ISO 27001",
                                "NIST CSF",
                                "HIPAA",
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.keyvault/vaults/keys"
                    ]
                },
                {
                    "masterTestId": "TEST_KEYVAULT_SECRETS",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(keyvaultsecrets.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-KV-005",
                            "eval": "data.rule.kv_expire",
                            "message": "data.rule.kv_expire_err",
                            "remediationDescription": "In Resource of type \"Microsoft.KeyVault/vaults/secrets\" make sure properties.attributes.exp exists and value isn't set empty.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults/secrets' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_KV_005.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Key Vault secrets should have an expiration date",
                    "description": "This policy identifies Azure Key Vault secrets that do not have an expiratiSon date. As a best practice, set an expiration date for each secret and rotate the secret regularly.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.keyvault/vaults/secrets"
                    ]
                },
                {
                    "masterTestId": "TEST_LOCKS",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(locks.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AML-008",
                            "eval": "data.rule.rg_locks",
                            "message": "data.rule.rg_locks_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for locks by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.authorization/2016-09-01/locks' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_AML_008.py"
                        }
                    ],
                    "severity": "Low",
                    "title": "Azure Deployment Scope Resource Group should have a remove protection resource lock configured",
                    "description": "Azure Resource Manager locks provide a way to lock down Azure resources from being deleted or modified. The lock level can be set to either 'CanNotDelete' or 'ReadOnly'. When you apply a lock at a parent scope, all resources within the scope inherit the same lock, and the most restrictive lock takes precedence.<br><br>This policy identifies Azure Resource Groups that do not have a lock set. As a best practice, place a lock on important resources to prevent accidental or malicious modification or deletion by unauthorized users.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.resources/resourcegroups",
                        "microsoft.authorization/locks"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_WATCHERS_FLOW_LOGS_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(networkwatchersflowlogs.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NTW-001",
                            "eval": "data.rule.netwatchFlowlogs",
                            "message": "data.rule.netwatchFlowlogs_err",
                            "remediationDescription": "In Resource of type \"Microsoft.network/networkwatchers/flowlogs\" make sure properties.enabled exists and value is set to true.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networkwatchers/flowlogs' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_NTW_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Network Watcher Network Security Group (NSG) flow logs should be enabled",
                    "description": "This policy identifies Azure Network Security Groups (NSG) for which flow logs are disabled. To perform this check, enable this action on the Azure Service Principal: 'Microsoft.Network/networkWatchers/queryFlowLogStatus/action'.<br><br>NSG flow logs, a feature of the Network Watcher app, enable you to view information about ingress and egress IP traffic through an NSG. The flow logs include information such as:<br>- Outbound and inbound flows on a per-rule basis.<br>- Network interface to which the flow applies.<br>- 5-tuple information about the flow (source/destination IP, source/destination port, protocol).<br>- Whether the traffic was allowed or denied.<br><br>As a best practice, enable NSG flow logs to improve network visibility.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networkwatchers/flowlogs"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_WATCHERS_FLOW_LOGS_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(networkwatchersflowlogs.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NTW-002",
                            "eval": "data.rule.netwatch_logs",
                            "message": "data.rule.netwatch_logs_err",
                            "remediationDescription": "In Resource of type \"Microsoft.network/networkwatchers/flowlogs\" make sure properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled exists and value is set to true.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networkwatchers/flowlogs' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_NTW_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Network Watcher Network Security Group (NSG) traffic analytics should be enabled",
                    "description": "This policy identifies Azure Network Security Groups (NSG) for which flow logs are disabled. To perform this check, enable this action on the Azure Service Principal: 'Microsoft.Network/networkWatchers/queryFlowLogStatus/action'.<br><br>NSG flow logs, a feature of the Network Watcher app, enable you to view information about ingress and egress IP traffic through an NSG. The flow logs include information such as:<br>- Outbound and inbound flows on a per-rule basis.<br>- Network interface to which the flow applies.<br>- 5-tuple information about the flow (source/destination IP, source/destination port, protocol).<br>- Whether the traffic was allowed or denied.<br><br>As a best practice, enable NSG flow logs to improve network visibility.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networkwatchers/flowlogs"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_WATCHERS_FLOW_LOGS_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(networkwatchersflowlogs.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NTW-003",
                            "eval": "data.rule.netwatch_log_retention",
                            "message": "data.rule.netwatch_log_retention_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for Network Watcher by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networkwatchers/flowlogs' target='_blank'>here</a>. enabled should be true",
                            "remediationFunction": "PR_AZR_ARM_NTW_003.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Watcher Network Security Group (NSG) flow logs retention should be greater than 90 days",
                    "description": "This policy identifies Azure Network Security Groups (NSG) for which flow logs retention period is 90 days or less. To perform this check, enable this action on the Azure Service Principal: 'Microsoft.Network/networkWatchers/queryFlowLogStatus/action'.<br><br>NSG flow logs, a feature of the Network Watcher app, enable you to view information about ingress and egress IP traffic through an NSG. The flow logs include information such as:<br>- Outbound and inbound flows on a per-rule basis.<br>- Network interface to which the flow applies.<br>- 5-tuple information about the flow (source/destination IP, source/destination port, protocol).<br>- Whether the traffic was allowed or denied.<br><br>As a best practice, enable NSG flow logs and set the log retention period to at least 90 days.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networkwatchers/flowlogs"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-001",
                            "eval": "data.rule.nsg_in_tcp_all_src",
                            "message": "data.rule.nsg_in_tcp_all_src_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_001.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group (NSG) shouldn't have Inbound rule overly permissive to all TCP traffic from any source",
                    "description": "This policy identifies Azure Network Security Groups (NSGs) which are overly permissive to open TCP traffic from any source. A network security group contains a list of security rules that allow or deny inbound or outbound network traffic based on source or destination IP address, port, and protocol. As a best practice, it is recommended to configure NSGs to restrict traffic from known sources, allowing only authorized protocols and ports.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-002",
                            "eval": "data.rule.nsg_in_udp_all_src",
                            "message": "data.rule.nsg_in_udp_all_src_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_002.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group (NSG) shouldn't have Inbound rule overly permissive to all UDP traffic from any source",
                    "description": "This policy identifies Azure Network Security Groups (NSGs) which are overly permissive to open UDP traffic from any source. A network security group contains a list of security rules that allow or deny inbound or outbound network traffic based on source or destination IP address, port, and protocol. As a best practice, it is recommended to configure NSGs to restrict traffic from known sources, allowing only authorized protocols and ports.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-003",
                            "eval": "data.rule.nsg_in_tcp_all",
                            "message": "data.rule.nsg_in_tcp_all_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_003.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group (NSG) shouldn't have Inbound rule overly permissive to all traffic from Internet on TCP protocol",
                    "description": "This policy identifies Azure Network Security Groups (NSGs) which are overly permissive to all traffic from Internet on TCP protocol. A network security group contains a list of security rules that allow or deny inbound or outbound network traffic based on source or destination IP address, port, and protocol. As a best practice, it is recommended to configure NSGs to restrict traffic from known sources, allowing only authorized protocols and ports.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_4",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-004",
                            "eval": "data.rule.nsg_in_udp_all",
                            "message": "data.rule.nsg_in_udp_all_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_004.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group (NSG) shouldn't have Inbound rule overly permissive to all traffic from Internet on UDP protocol",
                    "description": "This policy identifies Azure Network Security Groups (NSGs) which are overly permissive to all traffic from Internet on UDP protocol. A network security group contains a list of security rules that allow or deny inbound or outbound network traffic based on source or destination IP address, port, and protocol. As a best practice, it is recommended to configure NSGs to restrict traffic from known sources, allowing only authorized protocols and ports.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_5",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-005",
                            "eval": "data.rule.nsg_in_all",
                            "message": "data.rule.nsg_in_all_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_005.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group (NSG) shouldn't have Inbound rule overly permissive to all traffic from Internet on any protocol",
                    "description": "This policy identifies Azure Network Security Groups (NSGs) which are overly permissive to all traffic from Internet on any protocol. A network security group contains a list of security rules that allow or deny inbound or outbound network traffic based on source or destination IP address, port, and protocol. As a best practice, it is recommended to configure NSGs to restrict traffic from known sources, allowing only authorized protocols and ports.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_6",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-006",
                            "eval": "data.rule.nsg_in_all_src",
                            "message": "data.rule.nsg_in_all_src_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_006.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group (NSG) shouldn't have Inbound rule overly permissive to allow all traffic from any source on any protocol",
                    "description": "This policy identifies NSGs which allows incoming traffic from any source. A network security group contains a list of security rules that allow or deny inbound or outbound network traffic based on source or destination IP address, port, and protocol. As a best practice, it is recommended to configure NSGs to restrict traffic from known sources on authorized protocols and ports.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_7",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-007",
                            "eval": "data.rule.nsg_in_all_dst",
                            "message": "data.rule.nsg_in_all_dst_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_007.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group (NSG) having Inbound rule overly permissive to allow all traffic from any source to any destination",
                    "description": "This policy identifies NSGs which allows incoming traffic from any source. A network security group contains a list of security rules that allow or deny inbound or outbound network traffic based on source or destination IP address, port, and protocol. As a best practice, it is recommended to configure NSGs to restrict traffic from known sources on authorized protocols and ports.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_8",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-008",
                            "eval": "data.rule.nsg_allow_icmp",
                            "message": "data.rule.nsg_allow_icmp_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_008.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group shouldn't allows ICMP (Ping)",
                    "description": "ICMP is used by devices to communicate error messages and status. While ICMP is useful for  diagnostics and troubleshooting, it can also be used to exploit or disrupt systems.<br><br>This policy detects any NSG rule that allows ICMP (Ping) traffic from the internet. Review your list of NSG rules to ensure that your resources are not exposed.<br>As a best practice, restrict ICMP (Ping) solely to known static IP addresses. Limit the access list to include known hosts, services, or specific employees only.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_9",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-009",
                            "eval": "data.rule.inbound_port_21",
                            "message": "data.rule.inbound_port_21_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_009.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group shouldn't allow FTP (TCP Port 21)",
                    "description": "This policy detects any NSG rule that allows FTP traffic on TCP port 21 from the internet. Review your list of NSG rules to ensure that your resources are not exposed.<br>As a best practice, restrict FTP solely to known static IP addresses. Limit the access list to include known hosts, services, or specific employees only.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_10",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-010",
                            "eval": "data.rule.inbound_insecure_port",
                            "message": "data.rule.inbound_insecure_port_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_010.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Internet connectivity via tcp over insecure port should be prevented",
                    "description": "Identify network traffic coming from internet which is plain text FTP, Telnet or HTTP from Internet.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "GDPR",
                                "HIPAA",
                                "NIST CSF",
                                "PCI-DSS",
                                "SOC 2"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_11",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-011",
                            "eval": "data.rule.inbound_port_11211",
                            "message": "data.rule.inbound_port_11211_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_011.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Memcached DDoS attack attempt should be prevented",
                    "description": "Memcached is a general-purpose distributed memory caching system. It is often used to speed up dynamic database-driven websites by caching data and objects in RAM to reduce the number of times an external data source (such as a database or API) must be read. It is reported that Memcache versions 1.5.5 and below are vulnerable to DDoS amplification attack. This policy aims at finding such attacks and generate alerts.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_12",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-012",
                            "eval": "data.rule.inbound_port_6379",
                            "message": "data.rule.inbound_port_6379_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_012.py"
                        }
                    ],
                    "severity": "High",
                    "title": "RedisWannaMine vulnerable instances with active network traffic should be locked down",
                    "description": "RedisWannaMine is cryptojacking attack which aims at both database servers and application servers via remote code execution, exploiting an Apache Struts vulnerability. To inject cryptocurrency mining malware, RedWannaMine uses a transmission control protocol (TCP) scanner to check open port 445 of SMB and scans vulnerable Redis server database over port 6379(tcp), so that it can use EternalBlue to spread further.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_13",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-013",
                            "eval": "data.rule.inbound_port_dbs",
                            "message": "data.rule.inbound_port_dbs_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_013.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Publicly should not expose DB Ports",
                    "description": "DB Servers contain sensitive data and should not be exposed to any direct traffic from internet. This policy checks for the network traffic from internet hitting the DB Servers on their default ports. The DB servers monitored on the default ports are : Microsoft SQL Server (1433), Oracle (1521), MySQL (3306), Sybase (5000), Postgresql (5432), CouchDB (5984), Redis (6379, 6380), RethinkDB (8080,28015, 29015), CassandraDB (9042), Memcached (11211), MongoDB (27017), DB2 (50000).",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_14",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-014",
                            "eval": "data.rule.inbound_port_22",
                            "message": "data.rule.inbound_port_22_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_014.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group (NSG) should not allow SSH traffic from internet on port 22",
                    "description": "Blocking SSH port 22 will protect users from attacks like Account compromise.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_15",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-015",
                            "eval": "data.rule.inbound_port_3389",
                            "message": "data.rule.inbound_port_3389_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_015.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group (NSG) should not allow traffic from internet on port 3389",
                    "description": "Blocking RDP port 3389 will protect users from attacks like account compromise, Denial of service and ransomware.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_16",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-016",
                            "eval": "data.rule.inbound_port_445",
                            "message": "data.rule.inbound_port_445_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_016.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group should not allow Windows SMB (TCP Port 445)",
                    "description": "This policy detects any NSG rule that allows Windows SMB traffic on TCP port 445 from the internet. Review your list of NSG rules to ensure that your resources are not exposed.<br>As a best practice, restrict Windows SMB solely to known static IP addresses. Limit the access list to include known hosts, services, or specific employees only.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_17",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-018",
                            "eval": "data.rule.inbound_port_53",
                            "message": "data.rule.inbound_port_53_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_018.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group should not allow DNS (UDP Port 53)",
                    "description": "This policy detects any NSG rule that allows DNS traffic on UDP port 53 from the internet. Review your list of NSG rules to ensure that your resources are not exposed.<br>As a best practice, restrict DNS solely to known static IP addresses. Limit the access list to include known hosts, services, or specific employees only.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_18",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-019",
                            "eval": "data.rule.inbound_port_20",
                            "message": "data.rule.inbound_port_20_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_019.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group should not allow FTP-Data (TCP Port 20)",
                    "description": "This policy detects any NSG rule that allows FTP-Data traffic on TCP port 20 from the internet. Review your list of NSG rules to ensure that your resources are not exposed.<br>As a best practice, restrict FTP-Data solely to known static IP addresses. Limit the access list to include known hosts, services, or specific employees only.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_19",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-020",
                            "eval": "data.rule.inbound_port_4333",
                            "message": "data.rule.inbound_port_4333_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_020.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group should not allow MS SQL (TCP Port 4333)",
                    "description": "This policy detects any NSG rule that allows MSQL traffic on TCP port 4333 from the internet. Review your list of NSG rules to ensure that your resources are not exposed.<br>As a best practice, restrict MSQL solely to known static IP addresses. Limit the access list to include known hosts, services, or specific employees only.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_20",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-021",
                            "eval": "data.rule.inbound_port_3306",
                            "message": "data.rule.inbound_port_3306_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_021.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group should not allow MySQL (TCP Port 3306)",
                    "description": "This policy detects any NSG rule that allows MySQL traffic on TCP port 3306 from the internet. Review your list of NSG rules to ensure that your resources are not exposed.<br>As a best practice, restrict MySQL solely to known static IP addresses. Limit the access list to include known hosts, services, or specific employees only.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_21",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-022",
                            "eval": "data.rule.inbound_port_netbios",
                            "message": "data.rule.inbound_port_netbios_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_022.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group allows NetBIOS (UDP Port 137 and 138)",
                    "description": "This policy detects any NSG rule that allows NetBIOS traffic on UDP port 137 and 138 from the internet. Review your list of NSG rules to ensure that your resources are not exposed._x005F<br>As a best practice, restrict NetBIOS solely to known static IP addresses. Limit the access list to include known hosts, services, or specific employees only.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_22",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-023",
                            "eval": "data.rule.inbound_port_5432",
                            "message": "data.rule.inbound_port_5432_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_023.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group should not allow PostgreSQL (TCP Port 5432)",
                    "description": "This policy detects any NSG rule that allows PostgreSQL traffic on TCP port 5432 from the internet. Review your list of NSG rules to ensure that your resources are not exposed.<br>As a best practice, restrict PostgreSQL solely to known static IP addresses. Limit the access list to include known hosts, services, or specific employees only.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_23",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-024",
                            "eval": "data.rule.inbound_port_25",
                            "message": "data.rule.inbound_port_25_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_024.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group should not allow SMTP (TCP Port 25)",
                    "description": "This policy detects any NSG rule that allows SMTP traffic on TCP port 25 from the internet. Review your list of NSG rules to ensure that your resources are not exposed.<br>As a best practice, restrict SMTP solely to known static IP addresses. Limit the access list to include known hosts, services, or specific employees only.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_24",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-025",
                            "eval": "data.rule.inbound_port_sqlserver",
                            "message": "data.rule.inbound_port_sqlserver_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_025.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group allows SQLServer (TCP Port 1433 and UDP Port 1434)",
                    "description": "This policy detects any NSG rule that allows SQLServer traffic on TCP Port 1433 and UDP Port 1434 from the internet. Review your list of NSG rules to ensure that your resources are not exposed._x005F<br>As a best practice, restrict SQLServer solely to known static IP addresses. Limit the access list to include known hosts, services, or specific employees only.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_25",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-026",
                            "eval": "data.rule.inbound_port_23",
                            "message": "data.rule.inbound_port_23_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_026.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group should not allow Telnet (TCP Port 23)",
                    "description": "Telnet provides a plaintext connection to manage devices using the command line, and is less secure than SSH.<br>This policy detects any NSG rule that allows Telnet traffic on TCP port 23 from the internet. Review your list of NSG rules to ensure that your resources are not exposed.<br>As a best practice, restrict Telnet solely to known static IP addresses. Limit the access list to include known hosts, services, or specific employees only.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_26",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-027",
                            "eval": "data.rule.inbound_port_5500",
                            "message": "data.rule.inbound_port_5500_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_027.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group should not allow VNC Listener (TCP Port 5500)",
                    "description": "This policy detects any NSG rule that allows VNC Listener traffic on TCP port 5500 from the internet. Review your list of NSG rules to ensure that your resources are not exposed.<br>As a best practice, restrict VNC Listener solely to known static IP addresses. Limit the access list to include known hosts, services, or specific employees only.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_27",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-028",
                            "eval": "data.rule.inbound_port_5900",
                            "message": "data.rule.inbound_port_5900_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_028.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group should not allow VNC Server (TCP Port 5900)",
                    "description": "This policy detects any NSG rule that allows VNC Server traffic on TCP port 5900 from the internet. Review your list of NSG rules to ensure that your resources are not exposed.<br>As a best practice, restrict VNC Server solely to known static IP addresses. Limit the access list to include known hosts, services, or specific employees only.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_28",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-029",
                            "eval": "data.rule.inbound_port_135",
                            "message": "data.rule.inbound_port_135_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_029.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group should not allow Windows RPC (TCP Port 135)",
                    "description": "This policy detects any NSG rule that allows Windows RPC traffic on TCP port 135 from the internet. Review your list of NSG rules to ensure that your resources are not exposed.<br>As a best practice, restrict Windows RPC solely to known static IP addresses. Limit the access list to include known hosts, services, or specific employees only.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_29",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-030",
                            "eval": "data.rule.nsg_out_all",
                            "message": "data.rule.nsg_out_all_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_030.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group with Outbound rule to should not allow all traffic to any source",
                    "description": "This policy identifies NSGs which allows outgoing traffic to any source. A network security group contains a list of security rules that allow or deny inbound or outbound network traffic based on source or destination IP address, port, and protocol. As a best practice, it is recommended to configure NSGs to restrict traffic to known sources on authorized protocols and ports.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_30",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-031",
                            "eval": "data.rule.outbound_port_bitcoin",
                            "message": "data.rule.outbound_port_bitcoin_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_031.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Instance should not be allowed with ports known to mine Bitcoin",
                    "description": "Identifies traffic from internal workloads to internet IPs on ports 8332,8333 that are known to mine Bitcoins. Unless this traffic is part of authorized applications and processes, your instances may have been compromised.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "HIPAA",
                                "NIST CSF"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_31",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-032",
                            "eval": "data.rule.outbound_port_ethereum",
                            "message": "data.rule.outbound_port_ethereum_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_032.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Instance should not be allowed communicating with ports known to mine Ethereum",
                    "description": "Identifies traffic from internal workloads to internet IPs on ports 8545,30303 that are known to mine Ethereum. Unless this traffic is part of authorized applications and processes, your instances may have been compromised.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "HIPAA",
                                "NIST CSF"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_NETWORK_SECURITY_GROUP_32",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(nsg.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NSG-017",
                            "eval": "data.rule.inbound_insecure_omi_port",
                            "message": "data.rule.inbound_insecure_omi_port_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for NSG by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NSG_017.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Network Security Group (NSG) should protect OMIGOD attack from internet",
                    "description": "Blocking OMI port 5985, 5986, 1270 will protect vnet/subnet/vms from OMIGOD attacks from internet.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/networksecuritygroups"
                    ]
                },
                {
                    "masterTestId": "TEST_postgreSQL_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(postgreSQL.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-028",
                            "eval": "data.rule.geoRedundantBackup",
                            "message": "data.rule.geoRedundantBackup_err",
                            "remediationDescription": "In Resource of type \"Microsoft.dbforpostgresql/servers\" make sure properties.storageProfile.geoRedundantBackup exists and value is set to \"Enabled\".<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.dbforpostgresql/servers' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_028.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Geo-redundant backup is enabled on PostgreSQL database server.",
                    "description": "Azure Database for PostgreSQL provides the flexibility to choose between locally redundant or geo-redundant backup storage in the General Purpose and Memory Optimized tiers. When the backups are stored in geo-redundant backup storage, they are not only stored within the region in which your server is hosted, but are also replicated to a paired data center. This provides better protection and ability to restore your server in a different region in the event of a disaster. The Basic tier only offers locally redundant backup storage.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.dbforpostgresql/servers"
                    ]
                },
                {
                    "masterTestId": "TEST_postgreSQL_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(postgreSQL.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-029",
                            "eval": "data.rule.sslEnforcement",
                            "message": "data.rule.sslEnforcement_err",
                            "remediationDescription": "In Resource of type \"Microsoft.dbforpostgresql/servers\" make sure properties.sslEnforcement exists and value is set to \"Enabled\".<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.dbforpostgresql/servers' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_029.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure ssl enforcement is enabled on PostgreSQL Database Server.",
                    "description": "Enable SSL connection on PostgreSQL Servers. Rationale: SSL connectivity helps to provide a new layer of security, by connecting database server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between database server and client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and application.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.dbforpostgresql/servers"
                    ]
                },
                {
                    "masterTestId": "TEST_postgreSQL_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(postgreSQL.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-066",
                            "eval": "data.rule.postgresql_public_access_disabled",
                            "message": "data.rule.postgresql_public_access_disabled_err",
                            "remediationDescription": "In 'microsoft.dbforpostgresql/servers' resource, set 'publicNetworkAccess = disabled' to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.dbforpostgresql/servers' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_066.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure PostgreSQL servers don't have public network access enabled",
                    "description": "Always use Private Endpoint for PostgreSQL Server",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.dbforpostgresql/servers"
                    ]
                },
                {
                    "masterTestId": "TEST_PRICING",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(pricing.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-ASC-001",
                            "eval": "data.rule.pricing",
                            "message": "data.rule.pricing_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for pricing by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.security/pricings' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_ASC_001.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Security Center should have pricing tier configured to 'standard'",
                    "description": "Selecting the standard pricing tier will enable threat detection for networks and virtual systems by providing threat intelligence, anomaly detection, and behavior analytics in Azure Security Center.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "ISO 27001"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.security/pricings"
                    ]
                },
                {
                    "masterTestId": "TEST_Redis",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(Redis.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-ARC-001",
                            "eval": "data.rule.enableSslPort",
                            "message": "data.rule.enableSslPort_err",
                            "remediationDescription": "In Resource of type \"Microsoft.Cache/redis\" make sure properties.enableNonSslPort value is set to false or isn't exist .<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/Microsoft.Cache/redis' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_ARC_001.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure that the Redis Cache accepts only SSL connections",
                    "description": "It is recommended that Redis Cache should allow only SSL connections. Note: some Redis tools (like redis-cli) do not support SSL. When using such tools plain connection ports should be enabled.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "PCI-DSS",
                                "GDPR",
                                "ISO 27001",
                                "NIST CSF",
                                "HIPAA",
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.cache/redis/linkedservers",
                        "microsoft.cache/redis"
                    ]
                },
                {
                    "masterTestId": "TEST_Redis_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(Redis.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-ARC-002",
                            "eval": "data.rule.serverRole",
                            "message": "data.rule.serverRole_err",
                            "remediationDescription": "In Resource of type \"Microsoft.Cache/redis/linkedServers\" make sure properties.serverRole value is set to Secondary.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.cache/redis/linkedservers' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_ARC_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Redis cache should have a backup",
                    "description": "Replicate Redis Cache server data to another Redis Cache server using geo replication. This feature is only available for Premium tier Redis Cache. From performance point of view, Microsoft recommends that both Redis Caches (Primary and the linked secondary) reside in the same region.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "PCI-DSS",
                                "ISO 27001",
                                "NIST CSF",
                                "HIPAA",
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.cache/redis/linkedservers",
                        "microsoft.cache/redis"
                    ]
                },
                {
                    "masterTestId": "TEST_Redis_4",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(Redis.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-ARC-003",
                            "eval": "data.rule.redis_public_access",
                            "message": "data.rule.redis_public_access_err",
                            "remediationDescription": "In Resource of type 'Microsoft.Cache/redis' make sure properties.publicNetworkAccess value is set to 'disabled'.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.cache/redis' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_ARC_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Cache for Redis should disable public network access",
                    "description": "Disabling public network access improves security by ensuring that the Azure Cache for Redis isn't exposed on the public internet. You can limit exposure of your Azure Cache for Redis by creating private endpoints instead. Learn more at: https://docs.microsoft.com/azure/azure-cache-for-redis/cache-private-link.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.cache/redis/linkedservers",
                        "microsoft.cache/redis"
                    ]
                },
                {
                    "masterTestId": "TEST_Redis_5",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(Redis.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-ARC-004",
                            "eval": "data.rule.arc_subnet_id",
                            "message": "data.rule.arc_subnet_id_err",
                            "remediationDescription": "In Resource of type 'Microsoft.Cache/redis' make sure properties.subnetId exists and connected to Azure Redis.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.cache/redis' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_ARC_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Cache for Redis should use private link",
                    "description": "Azure Virtual Network deployment provides enhanced security and isolation for your Azure Cache for Redis, as well as subnets, access control policies, and other features to further restrict access.When an Azure Cache for Redis instance is configured with a virtual network, it is not publicly addressable and can only be accessed from virtual machines and applications within the virtual network.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.cache/redis/linkedservers",
                        "microsoft.cache/redis"
                    ]
                },
                {
                    "masterTestId": "TEST_Redis_6",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(Redis.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-ARC-005",
                            "eval": "data.rule.arc_private_endpoint",
                            "message": "data.rule.arc_private_endpoint_err",
                            "remediationDescription": "In Resource of type \"Microsoft.Cache/redis\" make sure 'Microsoft.Network/privateEndpoints' exists.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults?tabs=json' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_ARC_005.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Configure Azure Cache for redis with private endpoints",
                    "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your cache for redis, data leakage risks are reduced. Learn more about private links at - https://aka.ms/azureprivatelinkoverview",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.cache/redis/linkedservers",
                        "microsoft.cache/redis"
                    ]
                },
                {
                    "masterTestId": "TEST_REGISTRIES_LIST",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(registry.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-ACR-003",
                            "eval": "data.rule.acr_classic",
                            "message": "data.rule.acr_classic_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for container registry by visiting <a href='https://docs.microsoft.com/en-us/rest/api/containerregistry/registries/list' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_ACR_003.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Container Registry should not use the deprecated classic registry",
                    "description": "This policy identifies an Azure Container Registry (ACR) that is using the classic SKU. The initial release of the Azure Container Registry (ACR) service that was offered as a classic SKU is being deprecated and will be unavailable after April 2019. As a best practice, upgrade your existing classic registry to a managed registry.<br><br>For more information, visit https://docs.microsoft.com/en-us/azure/container-registry/container-registry-upgrade",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.containerregistry/registries"
                    ]
                },
                {
                    "masterTestId": "TEST_REGISTRIES_WEBHOOK",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(registrieswebhooks.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-ACR-001",
                            "eval": "data.rule.acr_webhooks",
                            "message": "data.rule.acr_webhooks_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for registry webhook by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.containerregistry/registries/webhooks' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_ACR_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure ACR should have HTTPS protocol enabled for webhook",
                    "description": "Ensure you send container registry webhooks only to a HTTPS endpoint. This policy checks your container registry webhooks and alerts if it finds a URI with HTTP.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.containerregistry/registries/webhooks"
                    ]
                },
                {
                    "masterTestId": "TEST_REGISTRY",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(registry.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-ACR-002",
                            "eval": "data.rule.adminUserDisabled",
                            "message": "data.rule.adminUserDisabled_err",
                            "remediationDescription": "In Resource of type \"Microsoft.containerregistry/registries\" make sure properties.adminUserEnabled is set to \"Disabled\" .<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.containerregistry/registries' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_ACR_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure that admin user is disabled for Container Registry",
                    "description": "The value that indicates whether the admin user is enabled. Each container registry includes an admin user account, which is disabled by default. You can enable the admin user and manage its credentials in the Azure portal, or by using the Azure CLI or other Azure tools. All users authenticating with the admin account appear as a single user with push and pull access to the registry. Changing or disabling this account disables registry access for all users who use its credentials.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.containerregistry/registries"
                    ]
                },
                {
                    "masterTestId": "TEST_SECRETS_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(secrets.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SEC-001",
                            "eval": "data.rule.gl_azure_secrets",
                            "message": "data.rule.gl_azure_secrets_err",
                            "remediationDescription": "",
                            "remediationFunction": "PR_AZR_ARM_SEC_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Secrets are not hardcoded in the ARM template",
                    "description": "Secrets should not be hardcoded in the ARM Template. Make sure to put those secrets in a vault and access from there.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": []
                },
                {
                    "masterTestId": "TEST_SECRET_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "python",
                    "rule": "file(secret_azure_iac.py)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SEC-002",
                            "eval": "azure_password_leak",
                            "message": "azure_password_leak_err",
                            "remediationDescription": "",
                            "remediationFunction": "PR_AZR_ARM_SEC_002.py"
                        }
                    ],
                    "severity": "High",
                    "title": "There is a possibility that secure password is exposed",
                    "description": "There is a possibility that secure password is exposed. Make sure to put those secrets in a vault and access from there.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECRET_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "python",
                    "rule": "file(secret_azure_iac.py)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SEC-003",
                            "eval": "entropy_password",
                            "message": "entropy_password_err",
                            "remediationDescription": "",
                            "remediationFunction": "PR_AZR_ARM_SEC_003.py"
                        }
                    ],
                    "severity": "High",
                    "title": "There is a possibility that secure password is exposed",
                    "description": "There is a possibility that secure password is exposed. Make sure to put those secrets in a vault and access from there.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_CONTACTS_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitycontacts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-ASC-002",
                            "eval": "data.rule.securitycontacts",
                            "message": "data.rule.securitycontacts_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for security center by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.security/securitycontacts' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_ASC_002.py"
                        }
                    ],
                    "severity": "Low",
                    "title": "Security Center shoud have security contact emails configured to get notifications",
                    "description": "Setting a valid email address in Security contact emails will enable Microsoft to contact you if the Microsoft Security Response Center (MSRC) discovers that your data has been accessed by an unlawful or unauthorized party. This will make sure that you are aware of any security issues and take prompt actions to mitigate the risks.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.security/securitycontacts"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_ALERT_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_alert_policy.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-030",
                            "eval": "data.rule.sql_logical_server_alert",
                            "message": "data.rule.sql_logical_server_alert_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for vpn gateway by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers/securityalertpolicies' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_SQL_030.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Security Alert is enabled on Azure SQL Logical Server",
                    "description": "Advanced data security should be enabled on your SQL servers.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/managedinstances/securityalertpolicies",
                        "microsoft.sql/servers/securityalertpolicies"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_ALERT_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_alert_policy.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-031",
                            "eval": "data.rule.sql_server_alert",
                            "message": "data.rule.sql_server_alert_err",
                            "remediationDescription": "In Resource of type \"Microsoft.sql/servers/securityalertpolicies\" make sure properties.state exists and value is set to \"Enabled\" .<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers/securityalertpolicies' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_SQL_031.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Security Alert is enabled on Azure SQL Server",
                    "description": "Advanced data security should be enabled on your SQL servers.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/managedinstances/securityalertpolicies",
                        "microsoft.sql/servers/securityalertpolicies"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_ALERT_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_alert_policy.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-032",
                            "eval": "data.rule.sql_managed_instance_alert",
                            "message": "data.rule.sql_managed_instance_alert_err",
                            "remediationDescription": "In Resource of type \"Microsoft.sql/managedinstances/securityalertpolicies\" make sure properties.state exists and value is set to \"Enabled\" .<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/managedinstances/securityalertpolicies' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_SQL_032.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Security Alert is enabled on Azure SQL Managed Instance",
                    "description": "Advanced data security should be enabled on your SQL managed instance.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/managedinstances/securityalertpolicies",
                        "microsoft.sql/servers/securityalertpolicies"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_MANAGED_INSTANCE",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_managedinstance.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-041",
                            "eval": "data.rule.sql_mi_public_endpoint_disabled",
                            "message": "data.rule.sql_mi_public_endpoint_disabled_err",
                            "remediationDescription": "IN ARM template make sure 'properties.publicDataEndpointEnabled' does not exist or if exist set value 'false' to 'properties.publicDataEndpointEnabled' under resource of type 'microsoft.sql/managedinstances'. Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/managedinstances' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_041.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "SQL Managed Instance should have public endpoint access disabled",
                    "description": "Always use Private Endpoint for Azure SQL Database and SQL Managed Instance",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/managedinstances"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_ENCRYPTION",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_servers_encryption.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-046",
                            "eval": "data.rule.serverKeyType",
                            "message": "data.rule.serverKeyType_err",
                            "remediationDescription": "In Resource of type \"Microsoft.sql/servers/encryptionprotector\" make sure properties.serverKeyType is set to \"AzureKeyVault\".<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers/encryptionprotector' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_046.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure SQL server's TDE protector is encrypted with Customer-managed key",
                    "description": "Customer-managed key support for Transparent Data Encryption (TDE) allows user control of TDE encryption keys and restricts who can access them and when. Azure Key Vault, Azure's cloud-based external key management system is the first key management service where TDE has integrated support for Customer-managed keys. With Customer-managed key support, the database encryption key is protected by an asymmetric key stored in the Key Vault. The asymmetric key is set at the server level and inherited by all databases under that server.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers/encryptionprotector"
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_ACCOUNT_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(storageaccounts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-STR-003",
                            "eval": "data.rule.storage_secure",
                            "message": "data.rule.storage_secure_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for storage accounts by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts' target='_blank'>here</a>. supportsHttpsTrafficOnly should be true",
                            "remediationFunction": "PR_AZR_ARM_STR_003.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Storage Accounts https based secure transfer should be enabled",
                    "description": "The secure transfer option enhances the security of your storage account by only allowing requests to the storage account by a secure connection. For example, when calling REST APIs to access your storage accounts, you must connect using HTTPs. Any requests using HTTP will be rejected when 'secure transfer required' is enabled. When you are using the Azure files service, connection without encryption will fail, including scenarios using SMB 2.1, SMB 3.0 without encryption, and some flavors of the Linux SMB client. Because Azure storage doesn't support HTTPs for custom domain names, this option is not applied when using a custom domain name.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts"
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_ACCOUNT_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(storageaccounts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-STR-004",
                            "eval": "data.rule.storage_acl",
                            "message": "data.rule.storage_acl_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for storage accounts by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts' target='_blank'>here</a>. networkAcls should be configured",
                            "remediationFunction": "PR_AZR_ARM_STR_004.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Storage Accounts should have firewall rules enabled",
                    "description": "Turning on firewall rules for your storage account blocks incoming requests for data by default, unless the requests come from a service that is operating within an Azure Virtual Network (VNet). Requests that are blocked include those from other Azure services, from the Azure portal, from logging and metrics services, and so on.<br><br>You can grant access to Azure services that operate from within a VNet by allowing the subnet of the service instance. Enable a limited number of scenarios through the Exceptions mechanism described in the following section. To access the Azure portal, you would need to be on a machine within the trusted boundary (either IP or VNet) that you set up.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts"
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_ACCOUNT_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(storageaccounts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-STR-005",
                            "eval": "data.rule.storage_threat_protection",
                            "message": "data.rule.storage_threat_protection_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for storage accounts by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts' target='_blank'>here</a>. Also visit <a href='https://github.com/Azure/azure-quickstart-templates/blob/master/quickstarts/microsoft.storage/storage-advanced-threat-protection-create/azuredeploy.json' target='_blank'>here</a> for template reference",
                            "remediationFunction": "PR_AZR_ARM_STR_005.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Advanced Threat Protection should be enabled for storage account",
                    "description": "Advanced Threat Protection should be enabled for all the storage accounts",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts"
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_ACCOUNTS_4",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(storageaccounts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-STR-006",
                            "eval": "data.rule.blobService",
                            "message": "data.rule.blobService_err",
                            "remediationDescription": "In Resource of type \"Microsoft.storage/storageaccounts\" make sure properties.encryption.services.blob exists and blob.enabled is set to true.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_STR_006.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure that 'Storage service encryption' is enabled for the Blob Service",
                    "description": "Enable data encryption at rest for blobs. Storage service encryption protects your data at rest. Azure Storage encrypts data when it's written, and automatically decrypts it when it is accessed.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "PCI-DSS",
                                "GDPR",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts"
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_ACCOUNTS_5",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(storageaccounts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-STR-007",
                            "eval": "data.rule.fileService",
                            "message": "data.rule.fileService_err",
                            "remediationDescription": "In Resource of type \"Microsoft.storage/storageaccounts\" make sure properties.encryption.services.file exists and file.enabled is set to true.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_STR_007.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure that 'Storage service encryption' is enabled for the File Service",
                    "description": "Azure Storage encryption protects your data and to help you to meet your organizational security and compliance commitments. Data in Azure Storage is encrypted and decrypted transparently using 256-bit AES encryption, one of the strongest block ciphers available, and is FIPS 140-2 compliant. Azure Storage encryption is similar to BitLocker encryption on Windows.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "PCI-DSS",
                                "GDPR",
                                "ISO 27001",
                                "HIPAA",
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts"
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_ACCOUNTS_6",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(storageaccounts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-STR-008",
                            "eval": "data.rule.keySource",
                            "message": "data.rule.keySource_err",
                            "remediationDescription": "In Resource of type \"Microsoft.storage/storageaccounts\" make sure properties.encryption.keySource exists and value is set to \"Microsoft.Keyvault\".<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_STR_008.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure critical data storage in Storage Account is encrypted with Customer Managed Key",
                    "description": "By default, data in the storage account is encrypted using Microsoft Managed Keys at rest. All Azure Storage resources are encrypted, including blobs, disks, files, queues, and tables. All object metadata is also encrypted. However, if you want to control and manage this encryption key yourself, you can specify a customer-managed key, that key is used to protect and control access to the key that encrypts your data. You can also choose to automatically update the key version used for Azure Storage encryption whenever a new version is available in the associated Key Vault.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts"
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_ACCOUNTS_7",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(storageaccounts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-STR-009",
                            "eval": "data.rule.region",
                            "message": "data.rule.region_err",
                            "remediationDescription": "In Resource of type \"Microsoft.storage/storageaccounts\" make sure location is set to northeurope or westeurope.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_STR_009.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Storage Accounts location configuration should be inside of Europe",
                    "description": "Identify Storage Accounts outside of the following regions: northeurope, westeurope",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "GDPR"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts"
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_ACCOUNTS_8",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(storageaccounts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-STR-010",
                            "eval": "data.rule.blobServicePublicAccessDisabled",
                            "message": "data.rule.blobServicePublicAccessDisabled_err",
                            "remediationDescription": "In Resource of type \"Microsoft.storage/storageaccounts\" make sure property allowBlobPublicAccess is not exist or value set to false.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_STR_010.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure that Storage Account should not allow public access to all blobs or containers",
                    "description": "This policy will identify which Storage Account has public access enabled for all blobs or containers",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts"
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_BLOB_CONTAINER",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(storageblobcontainers.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-STR-012",
                            "eval": "data.rule.storage_container_public_access_disabled",
                            "message": "data.rule.storage_container_public_access_disabled_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for storage accounts by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/2019-06-01/storageaccounts/blobservices/containers' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_STR_012.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure storage blob container should not have public access enabled",
                    "description": "'Public access level' allows you to grant anonymous/public read access to a container and the blobs within Azure blob storage. By doing so, you can grant read-only access to these resources without sharing your account key, and without requiring a shared access signature._x005F<br>_x005F<br>This policy identifies blob containers within an Azure storage account that allow anonymous/public access ('CONTAINER' or 'BLOB'). As a best practice, do not allow anonymous/public access to blob containers unless you have a very good reason. Instead, you should consider using a shared access signature token for providing controlled and time-limited access to blob containers.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts",
                        "microsoft.storage/storageaccounts/blobservices/containers"
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_BLOB_CONTAINER_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(storageblobcontainers.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-STR-013",
                            "eval": "data.rule.storage__logical_container_public_access_disabled",
                            "message": "data.rule.storage__logical_container_public_access_disabled_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for storage accounts by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/2019-06-01/storageaccounts/blobservices/containers' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_STR_013.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure storage blob container should not have public access enabled",
                    "description": "'Public access level' allows you to grant anonymous/public read access to a container and the blobs within Azure blob storage. By doing so, you can grant read-only access to these resources without sharing your account key, and without requiring a shared access signature._x005F<br>_x005F<br>This policy identifies blob containers within an Azure storage account that allow anonymous/public access ('CONTAINER' or 'BLOB'). As a best practice, do not allow anonymous/public access to blob containers unless you have a very good reason. Instead, you should consider using a shared access signature token for providing controlled and time-limited access to blob containers.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts",
                        "microsoft.storage/storageaccounts/blobservices/containers"
                    ]
                },
                {
                    "masterTestId": "TEST_VIRTUAL_MACHINE_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(vm.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-VM-001",
                            "eval": "data.rule.vm_aset",
                            "message": "data.rule.vm_aset_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for storage accounts by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.compute/virtualmachines' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_VM_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Virtual Machine should be assigned to an availability set",
                    "description": "To provide application redundancy during planned or unplanned maintenance events, you can group two or more virtual machines (VMs) in an availability set. An availability set ensures that the VMs are distributed across multiple isolated hardware nodes in a cluster so that only a subset of your VMs are impacted should a hardware or software failure occur on Azure.<br><br>This policy identifies Azure VMs that are not deployed in an availability set. As a high availability (HA) best practice, deploy your VMs in an availability set.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.compute/virtualmachines"
                    ]
                },
                {
                    "masterTestId": "TEST_VIRTUAL_MACHINE_EXTENSIONS",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(vmextensions.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-VM-003",
                            "eval": "data.rule.vm_protection",
                            "message": "data.rule.vm_protection_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for extensions by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.compute/virtualmachines/extensions' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_VM_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Virtual Machine should have endpoint protection installed",
                    "description": "This policy identifies Azure Virtual Machines (VMs) that do not have endpoint protection installed. Installing endpoint protection systems (like Antimalware for Azure) provides for real-time protection capability that helps identify and remove viruses, spyware, and other malicious software. As a best practice, install endpoint protection on all VMs and computers to help identify and remove viruses, spyware, and other malicious software.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.compute/virtualmachines/extensions"
                    ]
                },
                {
                    "masterTestId": "TEST_VNET_PEERINGS",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(vnetpeerings.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NET-004",
                            "eval": "data.rule.vnet_peer",
                            "message": "data.rule.vnet_peer_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for vnet by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/virtualnetworks/virtualnetworkpeerings' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NET_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure virtual network peering state should be connected",
                    "description": "Virtual network peering enables you to connect two Azure virtual networks so that the resources in these networks are directly connected.<br><br>This policy identifies Azure virtual network peers that are disconnected. Typically, the disconnection happens when a peering configuration is deleted on one virtual network, and the other virtual network reports the peering status as disconnected.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/virtualnetworks/virtualnetworkpeerings"
                    ]
                },
                {
                    "masterTestId": "TEST_VNET_SUBNETS",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(vnetsubnets.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NET-005",
                            "eval": "data.rule.vnet_subnet_nsg",
                            "message": "data.rule.vnet_subnet_nsg_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for vnet by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/virtualnetworks/subnets' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NET_005.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Virtual Network subnet should be configured with Network Security Group",
                    "description": "This policy identifies Azure Virtual Network (VNet) subnet which dont have any association with Network Security Group (NSG). While binding an NSG to a network interface of a Virtual Machine (VM) enables fine-grained control to the VM, associating a NSG to a subnet enables better control over network traffic to all resources within a subnet. As a best practice, associate an NSG with a subnet so that you can protect your VMs on a subnet-level._x005F<br>_x005F<br>For more information, see https://blogs.msdn.microsoft.com/igorpag/2016/05/14/azure-network-security-groups-nsg-best-practices-and-lessons-learned/",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/virtualnetworks/subnets"
                    ]
                },
                {
                    "masterTestId": "TEST_VPN_GATEWAYS",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(vpngateways.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-NET-006",
                            "eval": "data.rule.vpn_encrypt",
                            "message": "data.rule.vpn_encrypt_err",
                            "remediationDescription": "Make sure you are following the ARM template guidelines for vpn gateway by visiting <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.network/vpngateways' target='_blank'>here</a>",
                            "remediationFunction": "PR_AZR_ARM_NET_006.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure VPN gateways is configured with cryptographic algorithm",
                    "description": "Azure VPN gateways to use a custom IPsec/IKE policy with specific cryptographic algorithms and key strengths, rather than the Azure default policy sets. IPsec and IKE protocol standard supports a wide range of cryptographic algorithms in various combinations. If customers do not request a specific combination of cryptographic algorithms and parameters, Azure VPN gateways use a set of default proposals. Typically due to compliance or security requirements, you can now configure your Azure VPN gateways to use a custom IPsec/IKE policy with specific cryptographic algorithms and key strengths, rather than the Azure default policy sets. It is thus recommended to use custom policy sets and choose strong cryptography.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "HIPAA",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.network/vpngateways"
                    ]
                },
                {
                    "masterTestId": "TEST_MSSQL_SERVER_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_servers.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-047",
                            "eval": "data.rule.sql_public_access_disabled",
                            "message": "data.rule.sql_public_access_disabled_err",
                            "remediationDescription": "In Resource of type \"Microsoft.Sql/servers\" make sure properties.publicNetworkAccess exists and value is set to \"disabled\" .<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_047.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure SQL servers don't have public network access enabled",
                    "description": "Always use Private Endpoint for Azure SQL Database and SQL Managed Instance",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/servers/administrators"
                    ]
                },
                {
                    "masterTestId": "TEST_MSSQL_SERVER_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_servers.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-048",
                            "eval": "data.rule.sql_server_login",
                            "message": "data.rule.sql_server_login_err",
                            "remediationDescription": "In Resource of type \"Microsoft.Sql/servers/administrators\" make sure properties.login value isn't set to \"admin\" or \"administrator\" .<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers/administrators' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_048.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure SQL Server administrator login does not contains 'Admin/Administrator' as name",
                    "description": "You must designate a Server admin login when you create an Azure SQL server. SQL server creates this account as a login in the master database. Only one such account can exist. This account connects using SQL Server authentication (username and password). It is recommended to avoid using names like 'admin' or 'administrator', which are targeted in brute force dictionary attacks.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "PCI-DSS",
                                "GDPR",
                                "ISO 27001",
                                "NIST CSF",
                                "HIPAA",
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/servers/administrators"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_AUDITING_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_servers_auditing.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-042",
                            "eval": "data.rule.sql_server_log_audit",
                            "message": "data.rule.sql_server_log_audit_err",
                            "remediationDescription": "In Resource of type \"Microsoft.Sql/servers/auditingSettings\" make sure properties.state exists and value is set to \"Enabled\" .<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2021-02-01-preview/servers/auditingsettings' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_042.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure that SQL Server Auditing is Enabled",
                    "description": "Ensure that SQL Server Auditing is enabled in order to keep track of Audit events.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/servers/auditingsettings"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_AUDITING_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_servers_auditing.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-043",
                            "eval": "data.rule.sql_logical_server_log_audit",
                            "message": "data.rule.sql_logical_server_log_audit_err",
                            "remediationDescription": "In Resource of type \"Microsoft.Sql/servers/auditingSettings\" make sure properties.state exists and value is set to \"Enabled\" .<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2021-02-01-preview/servers/auditingsettings' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_043.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure that SQL Server Auditing is Enabled",
                    "description": "Ensure that SQL Server Auditing is enabled in order to keep track of Audit events.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/servers/auditingsettings"
                    ]
                },
                {
                    "masterTestId": "TEST_VIRTUAL_MACHINE_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(vm.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-VM-002",
                            "eval": "data.rule.linux_configuration",
                            "message": "data.rule.linux_configuration_err",
                            "remediationDescription": "For Resource type 'microsoft.compute/virtualmachines' make sure osProfile.linuxConfiguration.disablePasswordAuthentication exists and the value is set to true.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.compute/virtualmachines' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_VM_002.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure Azure instance authenticates using SSH keys",
                    "description": "SSH is an encrypted connection protocol that allows secure sign-ins over unsecured connections. SSH is the default connection protocol for Linux VMs hosted in Azure. Using secure shell (SSH) key pair, it is possible to spin up a Linux virtual machine on Azure that defaults to using SSH keys for authentication, eliminating the need for passwords to sign in. We recommend connecting to a VM using SSH keys. Using basic authentication with SSH connections leaves VMs vulnerable to brute-force attacks or guessing of passwords.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.compute/virtualmachines"
                    ]
                },
                {
                    "masterTestId": "TEST_AKS_7",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(aks.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AKS-007",
                            "eval": "data.rule.aks_authorized_Ip",
                            "message": "data.rule.aks_authorized_Ip_err",
                            "remediationDescription": "For Resource type 'microsoft.containerservice/managedclusters' make sure apiServerAccessProfile.authorizedIPRanges exists and the value of that be accessible from a limited set of IP address ranges.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.containerservice/managedclusters' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_AKS_007.py"
                        }
                    ],
                    "severity": "Low",
                    "title": "Ensure AKS API server defines authorized IP ranges",
                    "description": "The AKS API server receives requests to perform actions in the cluster , for example, to create resources, and scale the number of nodes. The API server provides a secure way to manage a cluster.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.containerservice/managedclusters"
                    ]
                },
                {
                    "masterTestId": "TEST_AKS_8",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(aks.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-AKS-008",
                            "eval": "data.rule.network_policy",
                            "message": "data.rule.network_policy_err",
                            "remediationDescription": "For Resource type 'microsoft.containerservice/managedclusters' make sure networkProfile.networkPolicy exists and the value is set to `azure` or 'calico`.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.containerservice/managedclusters' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_AKS_008.py"
                        }
                    ],
                    "severity": "Low",
                    "title": "Ensure AKS cluster network policies are enforced",
                    "description": "Network policy options in AKS include two ways to implement a network policy. You can choose between Azure Network Policies or Calico Network Policies. In both cases, the underlying controlling layer is based on Linux IPTables to enforce the specified policies. Policies are translated into sets of allowed and disallowed IP pairs. These pairs are then programmed as IPTable rules.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.containerservice/managedclusters"
                    ]
                },
                {
                    "masterTestId": "TEST_WEB_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(web.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-WEB-001",
                            "eval": "data.rule.https_only",
                            "message": "data.rule.https_only_err",
                            "remediationDescription": "For Resource type 'microsoft.web/sites' make sure httpsOnly exists and the value is set to true.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.web/sites' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_WEB_001.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Azure App Service Web App enforce https connection",
                    "description": "Azure Web Apps by default allows sites to run under both HTTP and HTTPS, and can be accessed by anyone using non-secure HTTP links. Non-secure HTTP requests can be restricted and all HTTP requests redirected to the secure HTTPS port. We recommend you enforce HTTPS-only traffic to increase security. This will redirect all non-secure HTTP requests to HTTPS ports. HTTPS uses the SSL/TLS protocol to provide a secure connection, which is both encrypted and authenticated.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.web/sites"
                    ]
                },
                {
                    "masterTestId": "TEST_WEB_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(web.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-WEB-002",
                            "eval": "data.rule.min_tls_version",
                            "message": "data.rule.min_tls_version_err",
                            "remediationDescription": "For Resource type 'microsoft.web/sites' make sure siteConfig.minTlsVersion exists and the value is set to '1.2'.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.web/sites' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_WEB_002.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Web App should uses the latest version of TLS encryption",
                    "description": "App service currently allows the web app to set TLS versions 1.0, 1.1 and 1.2. For secure web app connections it is highly recommended to only use the latest TLS 1.2 version.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.web/sites"
                    ]
                },
                {
                    "masterTestId": "TEST_WEB_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(web.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-WEB-003",
                            "eval": "data.rule.client_cert_enabled",
                            "message": "data.rule.client_cert_enabled_err",
                            "remediationDescription": "For Resource type 'microsoft.web/sites' make sure clientCertEnabled exists and the value is set to true.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.web/sites' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_WEB_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Web App should has incoming client certificates enabled",
                    "description": "Client certificates allow the Web App to require a certificate for incoming requests. Only clients that have a valid certificate will be able to reach the app. The TLS mutual authentication technique in enterprise environments ensures the authenticity of clients to the server. If incoming client certificates are enabled only an authenticated client with valid certificates can access the app.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.web/sites"
                    ]
                },
                {
                    "masterTestId": "TEST_WEB_4",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(web.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-WEB-004",
                            "eval": "data.rule.http_20_enabled",
                            "message": "data.rule.http_20_enabled_err",
                            "remediationDescription": "For Resource type 'microsoft.web/sites' make sure siteConfig.http20Enabled exists and the value is set to true.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.web/sites' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_WEB_004.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Web App should uses the latest version of HTTP",
                    "description": "We recommend you use the latest HTTP version for web apps and take advantage of any security fixes and new functionalities featured. With each software installation you can determine if a given update meets your organization's requirements. Organizations should verify the compatibility and support provided for any additional software, assessing the current version against the update revision being considered.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.web/sites"
                    ]
                },
                {
                    "masterTestId": "TEST_WEB_6",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(web.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-WEB-006",
                            "eval": "data.rule.web_service_cors_not_allowing_all",
                            "message": "data.rule.web_service_cors_not_allowing_all_err",
                            "remediationDescription": "In 'microsoft.web/sites' resource, don't set '*' as value to 'allowedOrigins' under 'cors' block which exists under 'siteConfig' block to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.web/sites' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_WEB_006.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure CORS configuration is not allowing every resources to access Azure Web Service",
                    "description": "This policy will identify CORS configuration which are allowing every resoruces to access Azure Web service and give alert",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.web/sites"
                    ]
                },
                {
                    "masterTestId": "TEST_WEB_7",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(web.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-WEB-007",
                            "eval": "data.rule.web_service_http_logging_enabled",
                            "message": "data.rule.web_service_http_logging_enabled_err",
                            "remediationDescription": "In 'microsoft.web/sites' resource, make sure 'httpLoggingEnabled' exists and the value is set to true.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.web/sites' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_WEB_007.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Web Service http logging should be enabled",
                    "description": "This policy will identify the Azure Web service which dont have http logging enabled and give alert",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.web/sites"
                    ]
                },
                {
                    "masterTestId": "TEST_WEB_8",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(web.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-WEB-008",
                            "eval": "data.rule.web_service_detaild_error_message_enabled",
                            "message": "data.rule.web_service_detaild_error_message_enabled_err",
                            "remediationDescription": "make sure 'detailedErrorLoggingEnabled' exists and the value is set to true.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.web/sites' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_WEB_008.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Web Service detaild error message should be enabled",
                    "description": "This policy will identify the Azure Web service which dont have detaild error message enabled and give alert",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.web/sites"
                    ]
                },
                {
                    "masterTestId": "TEST_WEB_9",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(web.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-WEB-009",
                            "eval": "data.rule.web_service_request_tracing_enabled",
                            "message": "data.rule.web_service_request_tracing_enabled_err",
                            "remediationDescription": "make sure 'requestTracingEnabled' exists and the value is set to true.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.web/sites' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_WEB_009.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Web Service request tracing should be enabled",
                    "description": "This policy will identify the Azure web service which dont have request tracing enabled and give alert",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.web/sites"
                    ]
                },
                {
                    "masterTestId": "TEST_WEB_10",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(web.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-WEB-010",
                            "eval": "data.rule.web_service_managed_identity_provider_enabled",
                            "message": "data.rule.web_service_managed_identity_provider_enabled_err",
                            "remediationDescription": "In 'microsoft.web/sites' resource, make sure property 'type' exists under 'identity' block to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.web/sites' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_WEB_010.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Web Service Managed Identity provider should be enabled",
                    "description": "This policy will identify the Azure Web service which dont have Managed Identity provider enabled and give alert",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.web/sites"
                    ]
                },
                {
                    "masterTestId": "TEST_WEB_11",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(web.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-WEB-011",
                            "eval": "data.rule.web_service_remote_debugging_disabled",
                            "message": "data.rule.web_service_remote_debugging_disabled_err",
                            "remediationDescription": "In 'microsoft.web/sites' resource, make sure property 'remoteDebuggingEnabled' does not exist under 'siteConfig' block or if exists set the value to 'false' to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.web/sites' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_WEB_011.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Web Service remote debugging should be disabled",
                    "description": "This policy will identify the Azure web service which have remote debugging enabled and give alert",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.web/sites"
                    ]
                },
                {
                    "masterTestId": "TEST_WEB_12",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(web.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-WEB-012",
                            "eval": "data.rule.web_service_ftp_deployment_disabled",
                            "message": "data.rule.web_service_ftp_deployment_disabled_err",
                            "remediationDescription": "In 'microsoft.web/sites' resource, make sure property 'ftpsState' has value either 'Disabled' or 'FtpsOnly' under 'siteConfig' block to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.web/sites' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_WEB_012.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Web Service FTP deployments should be disabled",
                    "description": "This policy will identify the Azure web service which have FTP deployment enabled and give alert",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.web/sites"
                    ]
                },
                {
                    "masterTestId": "TEST_WEB_13",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(web.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-WEB-013",
                            "eval": "data.rule.web_service_net_framework_latest",
                            "message": "data.rule.web_service_net_framework_latest_err",
                            "remediationDescription": "In 'microsoft.web/sites' resource, set netFrameworkVersion = 'v6.0' under 'siteConfig' block to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.web/sites' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_WEB_013.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Web Service Dot Net Framework should be latest",
                    "description": "This policy will identify the Azure web service which dont have latest version of Net Framework and give alert",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.web/sites"
                    ]
                },
                {
                    "masterTestId": "TEST_WEB_14",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(web.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-WEB-014",
                            "eval": "data.rule.web_service_php_version_latest",
                            "message": "data.rule.web_service_php_version_latest_err",
                            "remediationDescription": "In 'microsoft.web/sites' resource, set phpVersion = '7.4' under 'siteConfig' block to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.web/sites' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_WEB_014.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Web Service PHP version should be latest",
                    "description": "This policy will identify the Azure web service which dont have latest version of PHP and give alert",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.web/sites"
                    ]
                },
                {
                    "masterTestId": "TEST_WEB_15",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(web.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-WEB-015",
                            "eval": "data.rule.web_service_python_version_latest",
                            "message": "data.rule.web_service_python_version_latest_err",
                            "remediationDescription": "In 'microsoft.web/sites' resource, set pythonVersion = '3.9' under 'siteConfig' block to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.web/sites' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_WEB_015.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Web Service Pyhton version should be latest",
                    "description": "This policy will identify the Azure web service which dont have latest version of Pyhton and give alert",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.web/sites"
                    ]
                },
                {
                    "masterTestId": "TEST_WEB_16",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(web.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-WEB-016",
                            "eval": "data.rule.web_service_java_version_latest",
                            "message": "data.rule.web_service_java_version_latest_err",
                            "remediationDescription": "In 'microsoft.web/sites' resource, set javaVersion = '11' under 'siteConfig' block to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.web/sites' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_WEB_016.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Azure Web Service Java version should be latest",
                    "description": "This policy will identify the Azure web service which dont have latest version of Java and give alert",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.web/sites"
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_CONTACTS_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitycontacts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-ASC-003",
                            "eval": "data.rule.alert_notifications",
                            "message": "data.rule.alert_notifications_err",
                            "remediationDescription": "For Resource type 'microsoft.security/securitycontacts' make sure alertNotifications exists and the value is set to 'On'.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.security/securitycontacts' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_ASC_003.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Send email notification should be enabled",
                    "description": "Setting the security alert Send email notification for alerts to On ensures that emails are sent from Microsoft if their security team determines a potential security breach has taken place.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.security/securitycontacts"
                    ]
                },
                {
                    "masterTestId": "TEST_SECURITY_CONTACTS_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(securitycontacts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-ASC-005",
                            "eval": "data.rule.securitycontacts_alerts_to_admins_enabled",
                            "message": "data.rule.securitycontacts_alerts_to_admins_enabled_err",
                            "remediationDescription": "In 'microsoft.security/securitycontacts' resource, set 'alertsToAdmins = On' to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.security/securitycontacts' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_ASC_005.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Security Center shoud send security alerts notifications to subscription admins",
                    "description": "This policy will identify security centers which dont have configuration enabled to send security alerts notifications to subscription admins and alert if missing.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HIPAA",
                                "ISO 27001",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.security/securitycontacts"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_AUDITING_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_servers_auditing.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-044",
                            "eval": "data.rule.sql_server_audit_log_retention",
                            "message": "data.rule.sql_server_audit_log_retention_err",
                            "remediationDescription": "For Resource type 'microsoft.sql/servers/auditingsettings' make sure retentionDays exists and greater than 91 days.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2021-02-01-preview/servers/auditingsettings' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_044.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure SQL server audit log retention should be greater than 90 days",
                    "description": "Audit Logs can be used to check for anomalies and give insight into suspected breaches or misuse of information and access. We recommend you configure SQL server audit retention to be greater than 90 days.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/servers/auditingsettings"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_AUDITING_4",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_servers_auditing.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-045",
                            "eval": "data.rule.sql_logial_server_audit_log_retention",
                            "message": "data.rule.sql_logial_server_audit_log_retention_err",
                            "remediationDescription": "For Resource type 'microsoft.sql/servers/auditingsettings' make sure retentionDays exists and greater than 91 days.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2021-02-01-preview/servers/auditingsettings' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_045.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure SQL server audit log retention should be greater than 90 days",
                    "description": "Audit Logs can be used to check for anomalies and give insight into suspected breaches or misuse of information and access. We recommend you configure SQL server audit retention to be greater than 90 days.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/servers/auditingsettings"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_FOR_MY_SQL",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbforMySQL.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-016",
                            "eval": "data.rule.ssl_enforcement",
                            "message": "data.rule.ssl_enforcement_err",
                            "remediationDescription": "For Resource type 'microsoft.dbformysql/servers' make sure sslEnforcement exists and the value is set to 'Enabled'.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.dbformysql/servers' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_016.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure ssl enforcement is enabled on MySQL server Database Server.",
                    "description": "Enable SSL connection on MySQL Servers databases. Rationale: SSL connectivity helps to provide a new layer of security, by connecting database server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between database server and client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and application.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.dbformysql/servers"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_FOR_MY_SQL_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbforMySQL.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-060",
                            "eval": "data.rule.mysql_public_access_disabled",
                            "message": "data.rule.mysql_public_access_disabled_err",
                            "remediationDescription": "In 'microsoft.dbformysql/servers' resource, set 'publicNetworkAccess = Disabled' to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.dbformysql/servers' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_060.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure MySQL servers don't have public network access enabled",
                    "description": "Always use Private Endpoint for Azure MySQL Database Server",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.dbformysql/servers"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_FOR_MY_SQL_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbforMySQL.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-061",
                            "eval": "data.rule.mysql_server_latest_tls_configured",
                            "message": "data.rule.mysql_server_latest_tls_configured_err",
                            "remediationDescription": "In 'microsoft.dbformysql/servers' resource, set minimalTlsVersion = 'TLS1_2' to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.dbformysql/servers' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_061.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure Azure MySQL Server has latest version of tls configured",
                    "description": "This policy will identify the Azure MySQL Server which dont have latest version of tls configured and give alert",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.dbformysql/servers"
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_ACCOUNTS_9",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(storageaccounts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-STR-011",
                            "eval": "data.rule.storage_acount_by_pass",
                            "message": "data.rule.storage_acount_by_pass_err",
                            "remediationDescription": "For Resource type 'microsoft.storage/storageaccounts' make sure networkAcls.bypass exists and the value is set to 'AzureServices'.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_STR_011.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure Storage Account Trusted Microsoft Services access should be enabled",
                    "description": "Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging, Metrics, AzureServices (For example, 'Logging, Metrics'), or None to bypass none of those traffics. - None, Logging, Metrics, AzureServices.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts"
                    ]
                },
                {
                    "masterTestId": "TEST_STORAGE_ACCOUNT_10",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(storageaccounts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-STR-018",
                            "eval": "data.rule.storage_account_latest_tls_configured",
                            "message": "data.rule.storage_account_latest_tls_configured_err",
                            "remediationDescription": "In 'microsoft.storage/storageaccounts' resource, set minimumTlsVersion = 'TLS1_2' to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_STR_018.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure Azure Storage Account has latest version of tls configured",
                    "description": "This policy will identify the Azure Storage Account which dont have latest version of tls configured and give alert",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "HIPAA",
                                "NIST 800",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.storage/storageaccounts"
                    ]
                },
                {
                    "masterTestId": "TEST_LOG_PROFILE_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(activitylogalerts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-MNT-009",
                            "eval": "data.rule.log_profiles_retention_days",
                            "message": "data.rule.log_profiles_retention_days_err",
                            "remediationDescription": "For Resource type 'microsoft.insights/logprofiles' make sure retentionPolicy.days exists and greater than 365 and retentionPolicy.enabled exists and the value is set to true or retentionPolicy.days exists and set to 0 and retentionPolicy.enabled exists and the value is set to false.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/Microsoft.Insights/logprofiles' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_MNT_009.py"
                        }
                    ],
                    "severity": "High",
                    "title": "activity log retention should be set to 365 days or greater",
                    "description": "Specifies the retention policy for the log. We recommend you set activity log retention for 365 days or greater. (A value of 0 will retain the events indefinitely.)",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.insights/logprofiles"
                    ]
                },
                {
                    "masterTestId": "TEST_LOG_PROFILE_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(activitylogalerts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-MNT-010",
                            "eval": "data.rule.log_profiles_retention_enabled",
                            "message": "data.rule.log_profiles_retention_enabled_err",
                            "remediationDescription": "For Resource type 'microsoft.insights/logprofiles' make sure retentionPolicy.enabled exists and the value is set to true.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/Microsoft.Insights/logprofiles' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_MNT_010.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Activity log profile retention should be enabled",
                    "description": "This policy identifies Microsoft.Insights/logprofiles which dont have log retention enabled. Activity Logs can be used to check for anomalies and gives insight into suspected breaches or misuse of information and access.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.insights/logprofiles"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_FOR_MARIA_DB_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbforMariaDB.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-012",
                            "eval": "data.rule.maria_ingress_from_any_ip_disabled",
                            "message": "data.rule.maria_ingress_from_any_ip_disabled_err",
                            "remediationDescription": "For Resource type 'microsoft.dbformariadb/servers/firewallrules' make sure startIpAddress and endIpAddress exists and do not allow ingress from all Azure-internal IP addresses (0.0.0.0/0).<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.dbformariadb/2018-06-01/servers/firewallrules' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_012.py"
                        }
                    ],
                    "severity": "High",
                    "title": "MariaDB should not allow ingress from all Azure-internal IP addresses (0.0.0.0/0)",
                    "description": "This policy will identify MariaDB firewall rule that are currently allowing ingress from all Azure-internal IP addresses",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.dbformariadb/servers",
                        "microsoft.dbformariadb/servers/firewallrules"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_FOR_MARIA_DB_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbforMariaDB.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-013",
                            "eval": "data.rule.dbmaria_ingress_from_any_ip_disabled",
                            "message": "data.rule.dbmaria_ingress_from_any_ip_disabled_err",
                            "remediationDescription": "For Resource type 'microsoft.dbformariadb/servers/firewallrules' make sure startIpAddress and endIpAddress exists and do not allow ingress from all Azure-internal IP addresses (0.0.0.0/0).<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.dbformariadb/2018-06-01/servers/firewallrules' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_013.py"
                        }
                    ],
                    "severity": "High",
                    "title": "MariaDB should not allow ingress from all Azure-internal IP addresses (0.0.0.0/0)",
                    "description": "This policy will identify MariaDB firewall rule that are currently allowing ingress from all Azure-internal IP addresses",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.dbformariadb/servers",
                        "microsoft.dbformariadb/servers/firewallrules"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_FOR_MARIA_DB_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbforMariaDB.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-056",
                            "eval": "data.rule.mairadb_ssl_enforcement_enabled",
                            "message": "data.rule.mairadb_ssl_enforcement_enabled_err",
                            "remediationDescription": "In 'microsoft.dbformariadb/servers' resource, set 'sslEnforcement = Enabled' to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.dbformariadb/servers' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_056.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure ssl enforcement is enabled on MariaDB Server.",
                    "description": "Enable SSL connection on MariaDB Servers. Rationale: SSL connectivity helps to provide a new layer of security, by connecting database server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between database server and client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and application.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.dbformariadb/servers"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_FOR_MARIA_DB_4",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbforMariaDB.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-057",
                            "eval": "data.rule.mairadb_public_access_disabled",
                            "message": "data.rule.mairadb_public_access_disabled_err",
                            "remediationDescription": "In 'microsoft.dbformariadb/servers' resource, set 'publicNetworkAccess = Disabled' to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.dbformariadb/servers' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_057.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure MariaDB servers don't have public network access enabled",
                    "description": "Always use Private Endpoint for MariaDB Server",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.dbformariadb/servers"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_FOR_MARIA_DB_5",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbforMariaDB.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-058",
                            "eval": "data.rule.mariadb_geo_redundant_backup_enabled",
                            "message": "data.rule.mariadb_geo_redundant_backup_enabled_err",
                            "remediationDescription": "In 'microsoft.dbformariadb/servers' resource, set 'storageProfile.geoRedundantBackup = Enabled' to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.dbformariadb/servers' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_058.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Geo-redundant backup is enabled on MariaDB server.",
                    "description": "Azure Database for MariaDB provides the flexibility to choose between locally redundant or geo-redundant backup storage in the General Purpose and Memory Optimized tiers. When the backups are stored in geo-redundant backup storage, they are not only stored within the region in which your server is hosted, but are also replicated to a paired data center. This provides better protection and ability to restore your server in a different region in the event of a disaster. The Basic tier only offers locally redundant backup storage.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.dbformariadb/servers"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_FOR_MY_SQL_FIREWALLRULES_1",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbforMySQL_firewallrules.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-014",
                            "eval": "data.rule.mysql_ingress_from_any_ip_disabled",
                            "message": "data.rule.mysql_ingress_from_any_ip_disabled_err",
                            "remediationDescription": "For Resource type 'microsoft.dbformariadb/servers/firewallrules' make sure startIpAddress and endIpAddress exists and do not allow ingress from all Azure-internal IP addresses (0.0.0.0/0).<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.dbformysql/servers/firewallrules' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_014.py"
                        }
                    ],
                    "severity": "High",
                    "title": "MySQL Database Server should not allow ingress from all Azure-internal IP addresses (0.0.0.0/0)",
                    "description": "This policy will identify MySQL Database Server firewall rule that are currently allowing ingress from all Azure-internal IP addresses",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.dbformysql/servers",
                        "microsoft.dbformysql/servers/firewallrules"
                    ]
                },
                {
                    "masterTestId": "TEST_DB_FOR_MY_SQL_FIREWALLRULES_2",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(dbforMySQL_firewallrules.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-015",
                            "eval": "data.rule.my_logical_sql_ingress_from_any_ip_disabled",
                            "message": "data.rule.my_logical_sql_ingress_from_any_ip_disabled_err",
                            "remediationDescription": "For Resource type 'microsoft.dbformariadb/servers/firewallrules' make sure startIpAddress and endIpAddress exists and do not allow ingress from all Azure-internal IP addresses (0.0.0.0/0).<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.dbformysql/servers/firewallrules' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_015.py"
                        }
                    ],
                    "severity": "High",
                    "title": "MySQL Database Server should not allow ingress from all Azure-internal IP addresses (0.0.0.0/0)",
                    "description": "This policy will identify MySQL Database Server firewall rule that are currently allowing ingress from all Azure-internal IP addresses",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.dbformysql/servers",
                        "microsoft.dbformysql/servers/firewallrules"
                    ]
                },
                {
                    "masterTestId": "TEST_LOG_PROFILE_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(activitylogalerts.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-MNT-011",
                            "eval": "data.rule.log_profile_category",
                            "message": "data.rule.log_profile_category_err",
                            "remediationDescription": "For Resource type 'microsoft.insights/logprofiles' make sure categories exists and contains 'Write', 'Action' and 'Delete'.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/Microsoft.Insights/logprofiles' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_MNT_011.py"
                        }
                    ],
                    "severity": "High",
                    "title": "log profile should be configured to capture all activities",
                    "description": "the categories of the logs. These categories are created as is convenient to the user. Some values are: 'Write', 'Delete', and/or 'Action.' We recommend you configure the log profile to export all activities from the control/management plane.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "HITRUST",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.insights/logprofiles"
                    ]
                },
                {
                    "masterTestId": "TEST_MSSQL_SERVER_3",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_servers.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-050",
                            "eval": "data.rule.fail_over_groups",
                            "message": "data.rule.fail_over_groups_err",
                            "remediationDescription": "For Resource type 'microsoft.sql/servers' make sure has a subresource with type 'failoverGroups'.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers/failovergroups' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_050.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure Azure SQL Server data replication with Fail Over groups",
                    "description": "SQL Server data should be replicated to avoid loss of unreplicated data.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "PCI-DSS",
                                "ISO 27001",
                                "NIST CSF",
                                "HIPAA",
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/servers/administrators"
                    ]
                },
                {
                    "masterTestId": "TEST_MSSQL_SERVER_4",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_servers.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-051",
                            "eval": "data.rule.sql_server_administrators",
                            "message": "data.rule.sql_server_administrators_err",
                            "remediationDescription": "For Resource type 'microsoft.sql/servers/administrators' make sure name exists and the value is set to 'activedirectory'.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers/administrators' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_051.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure that Azure Active Directory Admin is configured for SQL Server",
                    "description": "Use Azure Active Directory Authentication for authentication with SQL Databases. Azure Active Directory authentication is a mechanism of connecting Microsoft Azure SQL Databases and SQL Data Warehouses using identities in an Azure Active Directory (Azure AD). With Azure AD authentication, you can centrally manage the identities of database users and other Microsoft services in one central location.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/servers/administrators"
                    ]
                },
                {
                    "masterTestId": "TEST_MSSQL_SERVER_5",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_servers.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-069",
                            "eval": "data.rule.sql_server_latest_tls_configured",
                            "message": "data.rule.sql_server_latest_tls_configured_err",
                            "remediationDescription": "In 'microsoft.sql/servers' resource, set 'minimalTlsVersion = 1.2' to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_069.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure Azure SQL Server has latest version of tls configured",
                    "description": "This policy will identify the Azure SQL Server which dont have latest version of tls configured and give alert",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/servers/administrators"
                    ]
                },
                {
                    "masterTestId": "TEST_MSSQL_SERVER_6",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_servers.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-070",
                            "eval": "data.rule.sql_public_access",
                            "message": "data.rule.sql_public_access_err",
                            "remediationDescription": "In 'microsoft.sql/servers' resource, set 'publicNetworkAccess = Disabled' to fix the issue.<br>Please Visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers' target='_blank'>here</a> for details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_070.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure SQL servers don't have public network access enabled",
                    "description": "Always use Private Endpoint for Azure SQL Database and SQL Managed Instance",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/servers/administrators"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_ALERT_4",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_alert_policy.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-033",
                            "eval": "data.rule.sql_logical_server_email_account",
                            "message": "data.rule.sql_logical_server_email_account_err",
                            "remediationDescription": "For Resource type 'microsoft.sql/servers/securityalertpolicies' make sure properties.emailAccountAdmins exists and the value is set to true.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers/securityalertpolicies' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_033.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure that VA setting 'Also send email notifications to admins and subscription owners' is set for a SQL server",
                    "description": "VA scan reports and alerts will be sent to admins and subscription owners by enabling the setting 'Also send email notifications to admins and subscription owners'. This may help in reducing the time required for identifying risks and taking corrective measures.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/managedinstances/securityalertpolicies",
                        "microsoft.sql/servers/securityalertpolicies"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_ALERT_5",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_alert_policy.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-034",
                            "eval": "data.rule.sql_server_email_account",
                            "message": "data.rule.sql_server_email_account_err",
                            "remediationDescription": "For Resource type 'microsoft.sql/servers/securityalertpolicies' make sure properties.emailAccountAdmins exists and the value is set to true.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers/securityalertpolicies' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_034.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure that VA setting 'Also send email notifications to admins and subscription owners' is set for a SQL server",
                    "description": "VA scan reports and alerts will be sent to admins and subscription owners by enabling the setting 'Also send email notifications to admins and subscription owners'. This may help in reducing the time required for identifying risks and taking corrective measures.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/managedinstances/securityalertpolicies",
                        "microsoft.sql/servers/securityalertpolicies"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_ALERT_6",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_alert_policy.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-035",
                            "eval": "data.rule.sql_logical_server_email_addressess",
                            "message": "data.rule.sql_logical_server_email_addressess_err",
                            "remediationDescription": "For Resource type 'microsoft.sql/servers/securityalertpolicies' make sure properties.emailAddresses exists and has a valid email address.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers/securityalertpolicies' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_035.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure SQL Security Alert Policy should be configured to send alerts to the account administrators and configured email addresses",
                    "description": "Provide the email address where alerts will be sent when anomalous activities are detected on SQL servers.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/managedinstances/securityalertpolicies",
                        "microsoft.sql/servers/securityalertpolicies"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_ALERT_7",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_alert_policy.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-036",
                            "eval": "data.rule.sql_server_email_addressess",
                            "message": "data.rule.sql_server_email_addressess_err",
                            "remediationDescription": "For Resource type 'microsoft.sql/servers/securityalertpolicies' make sure properties.emailAddresses exists and has a valid email address.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers/securityalertpolicies' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_036.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure SQL Security Alert Policy should be configured to send alerts to the account administrators and configured email addresses",
                    "description": "Provide the email address where alerts will be sent when anomalous activities are detected on SQL servers.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/managedinstances/securityalertpolicies",
                        "microsoft.sql/servers/securityalertpolicies"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_ALERT_8",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_alert_policy.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-037",
                            "eval": "data.rule.sql_logical_server_retention_days",
                            "message": "data.rule.sql_logical_server_retention_days_err",
                            "remediationDescription": "For Resource type 'microsoft.sql/servers/securityalertpolicies' make sure properties.retentionDays exists and the value is set to greater than 90.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers/securityalertpolicies' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_037.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure SQL Server Threat Detection is Enabled and Retention Logs are greater than 90 days",
                    "description": "Azure SQL Database Threat Detection is a security intelligence feature built into the Azure SQL Database service. Working around the clock to learn, profile and detect anomalous database activities, Azure SQL Database Threat Detection identifies potential threats to the database. Security officers or other designated administrators can get an immediate notification about suspicious database activities as they occur. Each notification provides details of the suspicious activity and recommends how to further investigate and mitigate the threat.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/managedinstances/securityalertpolicies",
                        "microsoft.sql/servers/securityalertpolicies"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_ALERT_9",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_alert_policy.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-038",
                            "eval": "data.rule.sql_server_retention_days",
                            "message": "data.rule.sql_server_retention_days_err",
                            "remediationDescription": "For Resource type 'microsoft.sql/servers/securityalertpolicies' make sure properties.retentionDays exists and the value is set to greater than 90.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers/securityalertpolicies' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_038.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Ensure SQL Server Threat Detection is Enabled and Retention Logs are greater than 90 days",
                    "description": "Azure SQL Database Threat Detection is a security intelligence feature built into the Azure SQL Database service. Working around the clock to learn, profile and detect anomalous database activities, Azure SQL Database Threat Detection identifies potential threats to the database. Security officers or other designated administrators can get an immediate notification about suspicious database activities as they occur. Each notification provides details of the suspicious activity and recommends how to further investigate and mitigate the threat.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/managedinstances/securityalertpolicies",
                        "microsoft.sql/servers/securityalertpolicies"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_ALERT_10",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_alert_policy.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-039",
                            "eval": "data.rule.sql_logical_server_disabled_alerts",
                            "message": "data.rule.sql_logical_server_disabled_alerts_err",
                            "remediationDescription": "For the source type 'microsoft.sql/servers/securityalertpolicies' make sure that properties.disabledAlerts does not exist or is empty.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2018-06-01-preview/servers/securityalertpolicies' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_039.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure SQL Server threat detection alerts should be enabled for all threat types",
                    "description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification._x005F<br>_x005F<br>This policy identifies Azure SQL servers that have disabled the detection of one or more threat types. To protect your SQL Servers, as a best practice, enable ADS detection for all types of threats.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/managedinstances/securityalertpolicies",
                        "microsoft.sql/servers/securityalertpolicies"
                    ]
                },
                {
                    "masterTestId": "TEST_SQL_SERVER_ALERT_11",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_alert_policy.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-040",
                            "eval": "data.rule.sql_server_disabled_alerts",
                            "message": "data.rule.sql_server_disabled_alerts_err",
                            "remediationDescription": "For the source type 'microsoft.sql/servers/securityalertpolicies' make sure that properties.disabledAlerts does not exist or is empty.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2018-06-01-preview/servers/securityalertpolicies' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_040.py"
                        }
                    ],
                    "severity": "High",
                    "title": "Azure SQL Server threat detection alerts should be enabled for all threat types",
                    "description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification._x005F<br>_x005F<br>This policy identifies Azure SQL servers that have disabled the detection of one or more threat types. To protect your SQL Servers, as a best practice, enable ADS detection for all types of threats.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "CIS",
                                "CSA-CCM",
                                "NIST 800",
                                "NIST CSF",
                                "PCI-DSS"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/managedinstances/securityalertpolicies",
                        "microsoft.sql/servers/securityalertpolicies"
                    ]
                },
                {
                    "masterTestId": "TEST_MSSQL_SERVER_5",
                    "masterSnapshotId": [
                        "ARM_TEMPLATE_SNAPSHOT"
                    ],
                    "type": "rego",
                    "rule": "file(sql_servers.rego)",
                    "evals": [
                        {
                            "id": "PR-AZR-ARM-SQL-049",
                            "eval": "data.rule.sql_logical_server_login",
                            "message": "data.rule.sql_logical_server_login_err",
                            "remediationDescription": "In Resource of type \"Microsoft.Sql/servers/administrators\" make sure properties.login exists and the value isn't set to 'admin' or 'administrator'.<br>Please visit <a href='https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2014-04-01/servers/administrators' target='_blank'>here</a> for more details.",
                            "remediationFunction": "PR_AZR_ARM_SQL_049.py"
                        }
                    ],
                    "severity": "Medium",
                    "title": "Ensure SQL Server administrator login does not contains 'Admin/Administrator' as name",
                    "description": "You must designate a Server admin login when you create an Azure SQL server. SQL server creates this account as a login in the master database. Only one such account can exist. This account connects using SQL Server authentication (username and password). It is recommended to avoid using names like 'admin' or 'administrator', which are targeted in brute force dictionary attacks.",
                    "tags": [
                        {
                            "cloud": "git",
                            "compliance": [
                                "PCI-DSS",
                                "GDPR",
                                "ISO 27001",
                                "NIST CSF",
                                "HIPAA",
                                "Best Practices"
                            ],
                            "service": [
                                "arm"
                            ]
                        }
                    ],
                    "resourceTypes": [
                        "microsoft.sql/servers",
                        "microsoft.sql/servers/administrators"
                    ]
                }
            ]
        }
    ]
}